//! Automatically generated. Edit at your own risk.

use dicom_core::dictionary::{DictionaryEntryRef, TagRange::*};
use dicom_core::Tag;
use dicom_core::VR::*;

type E = DictionaryEntryRef<'static>;

#[rustfmt::skip]
pub const ENTRIES: &[E] = &[
    E { tag: Single(Tag(0x0008, 0x0001)), alias: "LengthToEnd", vr: UL }, // RET
    E { tag: Single(Tag(0x0008, 0x0005)), alias: "SpecificCharacterSet", vr: CS },
    E { tag: Single(Tag(0x0008, 0x0006)), alias: "LanguageCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x0008)), alias: "ImageType", vr: CS },
    E { tag: Single(Tag(0x0008, 0x0010)), alias: "RecognitionCode", vr: SH }, // RET
    E { tag: Single(Tag(0x0008, 0x0012)), alias: "InstanceCreationDate", vr: DA },
    E { tag: Single(Tag(0x0008, 0x0013)), alias: "InstanceCreationTime", vr: TM },
    E { tag: Single(Tag(0x0008, 0x0014)), alias: "InstanceCreatorUID", vr: UI },
    E { tag: Single(Tag(0x0008, 0x0015)), alias: "InstanceCoercionDateTime", vr: DT },
    E { tag: Single(Tag(0x0008, 0x0016)), alias: "SOPClassUID", vr: UI },
    E { tag: Single(Tag(0x0008, 0x0018)), alias: "SOPInstanceUID", vr: UI },
    E { tag: Single(Tag(0x0008, 0x001A)), alias: "RelatedGeneralSOPClassUID", vr: UI },
    E { tag: Single(Tag(0x0008, 0x001B)), alias: "OriginalSpecializedSOPClassUID", vr: UI },
    E { tag: Single(Tag(0x0008, 0x0020)), alias: "StudyDate", vr: DA },
    E { tag: Single(Tag(0x0008, 0x0021)), alias: "SeriesDate", vr: DA },
    E { tag: Single(Tag(0x0008, 0x0022)), alias: "AcquisitionDate", vr: DA },
    E { tag: Single(Tag(0x0008, 0x0023)), alias: "ContentDate", vr: DA },
    E { tag: Single(Tag(0x0008, 0x0024)), alias: "OverlayDate", vr: DA }, // RET (2004)
    E { tag: Single(Tag(0x0008, 0x0025)), alias: "CurveDate", vr: DA }, // RET (2004)
    E { tag: Single(Tag(0x0008, 0x002A)), alias: "AcquisitionDateTime", vr: DT },
    E { tag: Single(Tag(0x0008, 0x0030)), alias: "StudyTime", vr: TM },
    E { tag: Single(Tag(0x0008, 0x0031)), alias: "SeriesTime", vr: TM },
    E { tag: Single(Tag(0x0008, 0x0032)), alias: "AcquisitionTime", vr: TM },
    E { tag: Single(Tag(0x0008, 0x0033)), alias: "ContentTime", vr: TM },
    E { tag: Single(Tag(0x0008, 0x0034)), alias: "OverlayTime", vr: TM }, // RET (2004)
    E { tag: Single(Tag(0x0008, 0x0035)), alias: "CurveTime", vr: TM }, // RET
    E { tag: Single(Tag(0x0008, 0x0040)), alias: "DataSetType", vr: US }, // RET (2004)
    E { tag: Single(Tag(0x0008, 0x0041)), alias: "DataSetSubtype", vr: LO }, // RET (2004)
    E { tag: Single(Tag(0x0008, 0x0042)), alias: "NuclearMedicineSeriesType", vr: CS }, // RET (2004)
    E { tag: Single(Tag(0x0008, 0x0050)), alias: "AccessionNumber", vr: SH },
    E { tag: Single(Tag(0x0008, 0x0051)), alias: "IssuerOfAccessionNumberSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x0052)), alias: "QueryRetrieveLevel", vr: CS },
    E { tag: Single(Tag(0x0008, 0x0053)), alias: "QueryRetrieveView", vr: CS },
    E { tag: Single(Tag(0x0008, 0x0054)), alias: "RetrieveAETitle", vr: AE },
    E { tag: Single(Tag(0x0008, 0x0055)), alias: "StationAETitle", vr: AE },
    E { tag: Single(Tag(0x0008, 0x0056)), alias: "InstanceAvailability", vr: CS },
    E { tag: Single(Tag(0x0008, 0x0058)), alias: "FailedSOPInstanceUIDList", vr: UI },
    E { tag: Single(Tag(0x0008, 0x0060)), alias: "Modality", vr: CS },
    E { tag: Single(Tag(0x0008, 0x0061)), alias: "ModalitiesInStudy", vr: CS },
    E { tag: Single(Tag(0x0008, 0x0062)), alias: "SOPClassesInStudy", vr: UI },
    E { tag: Single(Tag(0x0008, 0x0063)), alias: "AnatomicRegionsInStudyCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x0064)), alias: "ConversionType", vr: CS },
    E { tag: Single(Tag(0x0008, 0x0068)), alias: "PresentationIntentType", vr: CS },
    E { tag: Single(Tag(0x0008, 0x0070)), alias: "Manufacturer", vr: LO },
    E { tag: Single(Tag(0x0008, 0x0080)), alias: "InstitutionName", vr: LO },
    E { tag: Single(Tag(0x0008, 0x0081)), alias: "InstitutionAddress", vr: ST },
    E { tag: Single(Tag(0x0008, 0x0082)), alias: "InstitutionCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x0090)), alias: "ReferringPhysicianName", vr: PN },
    E { tag: Single(Tag(0x0008, 0x0092)), alias: "ReferringPhysicianAddress", vr: ST },
    E { tag: Single(Tag(0x0008, 0x0094)), alias: "ReferringPhysicianTelephoneNumbers", vr: SH },
    E { tag: Single(Tag(0x0008, 0x0096)), alias: "ReferringPhysicianIdentificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x009C)), alias: "ConsultingPhysicianName", vr: PN },
    E { tag: Single(Tag(0x0008, 0x009D)), alias: "ConsultingPhysicianIdentificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x0100)), alias: "CodeValue", vr: SH },
    E { tag: Single(Tag(0x0008, 0x0101)), alias: "ExtendedCodeValue", vr: LO }, // DICOS
    E { tag: Single(Tag(0x0008, 0x0102)), alias: "CodingSchemeDesignator", vr: SH },
    E { tag: Single(Tag(0x0008, 0x0103)), alias: "CodingSchemeVersion", vr: SH },
    E { tag: Single(Tag(0x0008, 0x0104)), alias: "CodeMeaning", vr: LO },
    E { tag: Single(Tag(0x0008, 0x0105)), alias: "MappingResource", vr: CS },
    E { tag: Single(Tag(0x0008, 0x0106)), alias: "ContextGroupVersion", vr: DT },
    E { tag: Single(Tag(0x0008, 0x0107)), alias: "ContextGroupLocalVersion", vr: DT },
    E { tag: Single(Tag(0x0008, 0x0108)), alias: "ExtendedCodeMeaning", vr: LT }, // DICOS
    E { tag: Single(Tag(0x0008, 0x0109)), alias: "CodingSchemeResourcesSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x010A)), alias: "CodingSchemeURLType", vr: CS },
    E { tag: Single(Tag(0x0008, 0x010B)), alias: "ContextGroupExtensionFlag", vr: CS },
    E { tag: Single(Tag(0x0008, 0x010C)), alias: "CodingSchemeUID", vr: UI },
    E { tag: Single(Tag(0x0008, 0x010D)), alias: "ContextGroupExtensionCreatorUID", vr: UI },
    E { tag: Single(Tag(0x0008, 0x010E)), alias: "CodingSchemeURL", vr: UR },
    E { tag: Single(Tag(0x0008, 0x010F)), alias: "ContextIdentifier", vr: CS },
    E { tag: Single(Tag(0x0008, 0x0110)), alias: "CodingSchemeIdentificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x0112)), alias: "CodingSchemeRegistry", vr: LO },
    E { tag: Single(Tag(0x0008, 0x0114)), alias: "CodingSchemeExternalID", vr: ST },
    E { tag: Single(Tag(0x0008, 0x0115)), alias: "CodingSchemeName", vr: ST },
    E { tag: Single(Tag(0x0008, 0x0116)), alias: "CodingSchemeResponsibleOrganization", vr: ST },
    E { tag: Single(Tag(0x0008, 0x0117)), alias: "ContextUID", vr: UI },
    E { tag: Single(Tag(0x0008, 0x0118)), alias: "MappingResourceUID", vr: UI },
    E { tag: Single(Tag(0x0008, 0x0119)), alias: "LongCodeValue", vr: UC },
    E { tag: Single(Tag(0x0008, 0x0120)), alias: "URNCodeValue", vr: UR },
    E { tag: Single(Tag(0x0008, 0x0121)), alias: "EquivalentCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x0122)), alias: "MappingResourceName", vr: LO },
    E { tag: Single(Tag(0x0008, 0x0123)), alias: "ContextGroupIdentificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x0124)), alias: "MappingResourceIdentificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x0201)), alias: "TimezoneOffsetFromUTC", vr: SH },
    E { tag: Single(Tag(0x0008, 0x0220)), alias: "ResponsibleGroupCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x0221)), alias: "EquipmentModality", vr: CS },
    E { tag: Single(Tag(0x0008, 0x0222)), alias: "ManufacturerRelatedModelGroup", vr: LO },
    E { tag: Single(Tag(0x0008, 0x0300)), alias: "PrivateDataElementCharacteristicsSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x0301)), alias: "PrivateGroupReference", vr: US },
    E { tag: Single(Tag(0x0008, 0x0302)), alias: "PrivateCreatorReference", vr: LO },
    E { tag: Single(Tag(0x0008, 0x0303)), alias: "BlockIdentifyingInformationStatus", vr: CS },
    E { tag: Single(Tag(0x0008, 0x0304)), alias: "NonidentifyingPrivateElements", vr: US },
    E { tag: Single(Tag(0x0008, 0x0306)), alias: "IdentifyingPrivateElements", vr: US },
    E { tag: Single(Tag(0x0008, 0x0305)), alias: "DeidentificationActionSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x0307)), alias: "DeidentificationAction", vr: CS },
    E { tag: Single(Tag(0x0008, 0x0308)), alias: "PrivateDataElement", vr: US },
    E { tag: Single(Tag(0x0008, 0x0309)), alias: "PrivateDataElementValueMultiplicity", vr: UL },
    E { tag: Single(Tag(0x0008, 0x030A)), alias: "PrivateDataElementValueRepresentation", vr: CS },
    E { tag: Single(Tag(0x0008, 0x030B)), alias: "PrivateDataElementNumberOfItems", vr: UL },
    E { tag: Single(Tag(0x0008, 0x030C)), alias: "PrivateDataElementName", vr: UC },
    E { tag: Single(Tag(0x0008, 0x030D)), alias: "PrivateDataElementKeyword", vr: UC },
    E { tag: Single(Tag(0x0008, 0x030E)), alias: "PrivateDataElementDescription", vr: UT },
    E { tag: Single(Tag(0x0008, 0x030F)), alias: "PrivateDataElementEncoding", vr: UT },
    E { tag: Single(Tag(0x0008, 0x0310)), alias: "PrivateDataElementDefinitionSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x1000)), alias: "NetworkID", vr: AE }, // RET
    E { tag: Single(Tag(0x0008, 0x1010)), alias: "StationName", vr: SH },
    E { tag: Single(Tag(0x0008, 0x1030)), alias: "StudyDescription", vr: LO },
    E { tag: Single(Tag(0x0008, 0x1032)), alias: "ProcedureCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x103E)), alias: "SeriesDescription", vr: LO },
    E { tag: Single(Tag(0x0008, 0x103F)), alias: "SeriesDescriptionCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x1040)), alias: "InstitutionalDepartmentName", vr: LO },
    E { tag: Single(Tag(0x0008, 0x1041)), alias: "InstitutionalDepartmentTypeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x1048)), alias: "PhysiciansOfRecord", vr: PN },
    E { tag: Single(Tag(0x0008, 0x1049)), alias: "PhysiciansOfRecordIdentificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x1050)), alias: "PerformingPhysicianName", vr: PN },
    E { tag: Single(Tag(0x0008, 0x1052)), alias: "PerformingPhysicianIdentificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x1060)), alias: "NameOfPhysiciansReadingStudy", vr: PN },
    E { tag: Single(Tag(0x0008, 0x1062)), alias: "PhysiciansReadingStudyIdentificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x1070)), alias: "OperatorsName", vr: PN },
    E { tag: Single(Tag(0x0008, 0x1072)), alias: "OperatorIdentificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x1080)), alias: "AdmittingDiagnosesDescription", vr: LO },
    E { tag: Single(Tag(0x0008, 0x1084)), alias: "AdmittingDiagnosesCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x1090)), alias: "ManufacturerModelName", vr: LO },
    E { tag: Single(Tag(0x0008, 0x1100)), alias: "ReferencedResultsSequence", vr: SQ }, // RET (2004)
    E { tag: Single(Tag(0x0008, 0x1110)), alias: "ReferencedStudySequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x1111)), alias: "ReferencedPerformedProcedureStepSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x1115)), alias: "ReferencedSeriesSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x1120)), alias: "ReferencedPatientSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x1125)), alias: "ReferencedVisitSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x1130)), alias: "ReferencedOverlaySequence", vr: SQ }, // RET (2004)
    E { tag: Single(Tag(0x0008, 0x1134)), alias: "ReferencedStereometricInstanceSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x113A)), alias: "ReferencedWaveformSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x1140)), alias: "ReferencedImageSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x1145)), alias: "ReferencedCurveSequence", vr: SQ }, // RET (2004)
    E { tag: Single(Tag(0x0008, 0x114A)), alias: "ReferencedInstanceSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x114B)), alias: "ReferencedRealWorldValueMappingInstanceSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x1150)), alias: "ReferencedSOPClassUID", vr: UI },
    E { tag: Single(Tag(0x0008, 0x1155)), alias: "ReferencedSOPInstanceUID", vr: UI },
    E { tag: Single(Tag(0x0008, 0x1156)), alias: "DefinitionSourceSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x115A)), alias: "SOPClassesSupported", vr: UI },
    E { tag: Single(Tag(0x0008, 0x1160)), alias: "ReferencedFrameNumber", vr: IS },
    E { tag: Single(Tag(0x0008, 0x1161)), alias: "SimpleFrameList", vr: UL },
    E { tag: Single(Tag(0x0008, 0x1162)), alias: "CalculatedFrameList", vr: UL },
    E { tag: Single(Tag(0x0008, 0x1163)), alias: "TimeRange", vr: FD },
    E { tag: Single(Tag(0x0008, 0x1164)), alias: "FrameExtractionSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x1167)), alias: "MultiFrameSourceSOPInstanceUID", vr: UI },
    E { tag: Single(Tag(0x0008, 0x1190)), alias: "RetrieveURL", vr: UR },
    E { tag: Single(Tag(0x0008, 0x1195)), alias: "TransactionUID", vr: UI },
    E { tag: Single(Tag(0x0008, 0x1196)), alias: "WarningReason", vr: US },
    E { tag: Single(Tag(0x0008, 0x1197)), alias: "FailureReason", vr: US },
    E { tag: Single(Tag(0x0008, 0x1198)), alias: "FailedSOPSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x1199)), alias: "ReferencedSOPSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x119A)), alias: "OtherFailuresSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x1200)), alias: "StudiesContainingOtherReferencedInstancesSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x1250)), alias: "RelatedSeriesSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x2110)), alias: "LossyImageCompressionRetired", vr: CS }, // RET (1993)
    E { tag: Single(Tag(0x0008, 0x2111)), alias: "DerivationDescription", vr: ST },
    E { tag: Single(Tag(0x0008, 0x2112)), alias: "SourceImageSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x2120)), alias: "StageName", vr: SH },
    E { tag: Single(Tag(0x0008, 0x2122)), alias: "StageNumber", vr: IS },
    E { tag: Single(Tag(0x0008, 0x2124)), alias: "NumberOfStages", vr: IS },
    E { tag: Single(Tag(0x0008, 0x2127)), alias: "ViewName", vr: SH },
    E { tag: Single(Tag(0x0008, 0x2128)), alias: "ViewNumber", vr: IS },
    E { tag: Single(Tag(0x0008, 0x2129)), alias: "NumberOfEventTimers", vr: IS },
    E { tag: Single(Tag(0x0008, 0x212A)), alias: "NumberOfViewsInStage", vr: IS },
    E { tag: Single(Tag(0x0008, 0x2130)), alias: "EventElapsedTimes", vr: DS },
    E { tag: Single(Tag(0x0008, 0x2132)), alias: "EventTimerNames", vr: LO },
    E { tag: Single(Tag(0x0008, 0x2133)), alias: "EventTimerSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x2134)), alias: "EventTimeOffset", vr: FD },
    E { tag: Single(Tag(0x0008, 0x2135)), alias: "EventCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x2142)), alias: "StartTrim", vr: IS },
    E { tag: Single(Tag(0x0008, 0x2143)), alias: "StopTrim", vr: IS },
    E { tag: Single(Tag(0x0008, 0x2144)), alias: "RecommendedDisplayFrameRate", vr: IS },
    E { tag: Single(Tag(0x0008, 0x2200)), alias: "TransducerPosition", vr: CS }, // RET (1993)
    E { tag: Single(Tag(0x0008, 0x2204)), alias: "TransducerOrientation", vr: CS }, // RET (1993)
    E { tag: Single(Tag(0x0008, 0x2208)), alias: "AnatomicStructure", vr: CS }, // RET (1993)
    E { tag: Single(Tag(0x0008, 0x2218)), alias: "AnatomicRegionSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x2220)), alias: "AnatomicRegionModifierSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x2228)), alias: "PrimaryAnatomicStructureSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x2229)), alias: "AnatomicStructureSpaceOrRegionSequence", vr: SQ }, // RET (2017c)
    E { tag: Single(Tag(0x0008, 0x2230)), alias: "PrimaryAnatomicStructureModifierSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x2240)), alias: "TransducerPositionSequence", vr: SQ }, // RET (2004)
    E { tag: Single(Tag(0x0008, 0x2242)), alias: "TransducerPositionModifierSequence", vr: SQ }, // RET (2004)
    E { tag: Single(Tag(0x0008, 0x2244)), alias: "TransducerOrientationSequence", vr: SQ }, // RET (2004)
    E { tag: Single(Tag(0x0008, 0x2246)), alias: "TransducerOrientationModifierSequence", vr: SQ }, // RET (2004)
    E { tag: Single(Tag(0x0008, 0x2251)), alias: "AnatomicStructureSpaceOrRegionCodeSequenceTrial", vr: SQ }, // RET (2007)
    E { tag: Single(Tag(0x0008, 0x2253)), alias: "AnatomicPortalOfEntranceCodeSequenceTrial", vr: SQ }, // RET (2007)
    E { tag: Single(Tag(0x0008, 0x2255)), alias: "AnatomicApproachDirectionCodeSequenceTrial", vr: SQ }, // RET (2007)
    E { tag: Single(Tag(0x0008, 0x2256)), alias: "AnatomicPerspectiveDescriptionTrial", vr: ST }, // RET (2007)
    E { tag: Single(Tag(0x0008, 0x2257)), alias: "AnatomicPerspectiveCodeSequenceTrial", vr: SQ }, // RET (2007)
    E { tag: Single(Tag(0x0008, 0x2258)), alias: "AnatomicLocationOfExaminingInstrumentDescriptionTrial", vr: ST }, // RET (2007)
    E { tag: Single(Tag(0x0008, 0x2259)), alias: "AnatomicLocationOfExaminingInstrumentCodeSequenceTrial", vr: SQ }, // RET (2007)
    E { tag: Single(Tag(0x0008, 0x225A)), alias: "AnatomicStructureSpaceOrRegionModifierCodeSequenceTrial", vr: SQ }, // RET (2007)
    E { tag: Single(Tag(0x0008, 0x225C)), alias: "OnAxisBackgroundAnatomicStructureCodeSequenceTrial", vr: SQ }, // RET (2007)
    E { tag: Single(Tag(0x0008, 0x3001)), alias: "AlternateRepresentationSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x3010)), alias: "IrradiationEventUID", vr: UI },
    E { tag: Single(Tag(0x0008, 0x3011)), alias: "SourceIrradiationEventSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x3012)), alias: "RadiopharmaceuticalAdministrationEventUID", vr: UI },
    E { tag: Single(Tag(0x0008, 0x4000)), alias: "IdentifyingComments", vr: LT }, // RET
    E { tag: Single(Tag(0x0008, 0x9007)), alias: "FrameType", vr: CS },
    E { tag: Single(Tag(0x0008, 0x9092)), alias: "ReferencedImageEvidenceSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x9121)), alias: "ReferencedRawDataSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x9123)), alias: "CreatorVersionUID", vr: UI },
    E { tag: Single(Tag(0x0008, 0x9124)), alias: "DerivationImageSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x9154)), alias: "SourceImageEvidenceSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x9205)), alias: "PixelPresentation", vr: CS },
    E { tag: Single(Tag(0x0008, 0x9206)), alias: "VolumetricProperties", vr: CS },
    E { tag: Single(Tag(0x0008, 0x9207)), alias: "VolumeBasedCalculationTechnique", vr: CS },
    E { tag: Single(Tag(0x0008, 0x9208)), alias: "ComplexImageComponent", vr: CS },
    E { tag: Single(Tag(0x0008, 0x9209)), alias: "AcquisitionContrast", vr: CS },
    E { tag: Single(Tag(0x0008, 0x9215)), alias: "DerivationCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x9237)), alias: "ReferencedPresentationStateSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x9410)), alias: "ReferencedOtherPlaneSequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x9458)), alias: "FrameDisplaySequence", vr: SQ },
    E { tag: Single(Tag(0x0008, 0x9459)), alias: "RecommendedDisplayFrameRateInFloat", vr: FL },
    E { tag: Single(Tag(0x0008, 0x9460)), alias: "SkipFrameRangeFlag", vr: CS },
    E { tag: Single(Tag(0x0010, 0x0010)), alias: "PatientName", vr: PN },
    E { tag: Single(Tag(0x0010, 0x0020)), alias: "PatientID", vr: LO },
    E { tag: Single(Tag(0x0010, 0x0021)), alias: "IssuerOfPatientID", vr: LO },
    E { tag: Single(Tag(0x0010, 0x0022)), alias: "TypeOfPatientID", vr: CS },
    E { tag: Single(Tag(0x0010, 0x0024)), alias: "IssuerOfPatientIDQualifiersSequence", vr: SQ },
    E { tag: Single(Tag(0x0010, 0x0026)), alias: "SourcePatientGroupIdentificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0010, 0x0027)), alias: "GroupOfPatientsIdentificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0010, 0x0028)), alias: "SubjectRelativePositionInImage", vr: US },
    E { tag: Single(Tag(0x0010, 0x0030)), alias: "PatientBirthDate", vr: DA },
    E { tag: Single(Tag(0x0010, 0x0032)), alias: "PatientBirthTime", vr: TM },
    E { tag: Single(Tag(0x0010, 0x0033)), alias: "PatientBirthDateInAlternativeCalendar", vr: LO },
    E { tag: Single(Tag(0x0010, 0x0034)), alias: "PatientDeathDateInAlternativeCalendar", vr: LO },
    E { tag: Single(Tag(0x0010, 0x0035)), alias: "PatientAlternativeCalendar", vr: CS },
    E { tag: Single(Tag(0x0010, 0x0040)), alias: "PatientSex", vr: CS },
    E { tag: Single(Tag(0x0010, 0x0050)), alias: "PatientInsurancePlanCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0010, 0x0101)), alias: "PatientPrimaryLanguageCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0010, 0x0102)), alias: "PatientPrimaryLanguageModifierCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0010, 0x0200)), alias: "QualityControlSubject", vr: CS },
    E { tag: Single(Tag(0x0010, 0x0201)), alias: "QualityControlSubjectTypeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0010, 0x0212)), alias: "StrainDescription", vr: UC },
    E { tag: Single(Tag(0x0010, 0x0213)), alias: "StrainNomenclature", vr: LO },
    E { tag: Single(Tag(0x0010, 0x0214)), alias: "StrainStockNumber", vr: LO },
    E { tag: Single(Tag(0x0010, 0x0215)), alias: "StrainSourceRegistryCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0010, 0x0216)), alias: "StrainStockSequence", vr: SQ },
    E { tag: Single(Tag(0x0010, 0x0217)), alias: "StrainSource", vr: LO },
    E { tag: Single(Tag(0x0010, 0x0218)), alias: "StrainAdditionalInformation", vr: UT },
    E { tag: Single(Tag(0x0010, 0x0219)), alias: "StrainCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0010, 0x0221)), alias: "GeneticModificationsSequence", vr: SQ },
    E { tag: Single(Tag(0x0010, 0x0222)), alias: "GeneticModificationsDescription", vr: UC },
    E { tag: Single(Tag(0x0010, 0x0223)), alias: "GeneticModificationsNomenclature", vr: LO },
    E { tag: Single(Tag(0x0010, 0x0229)), alias: "GeneticModificationsCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0010, 0x1000)), alias: "OtherPatientIDs", vr: LO }, // RET (2017a)
    E { tag: Single(Tag(0x0010, 0x1001)), alias: "OtherPatientNames", vr: PN },
    E { tag: Single(Tag(0x0010, 0x1002)), alias: "OtherPatientIDsSequence", vr: SQ },
    E { tag: Single(Tag(0x0010, 0x1005)), alias: "PatientBirthName", vr: PN },
    E { tag: Single(Tag(0x0010, 0x1010)), alias: "PatientAge", vr: AS },
    E { tag: Single(Tag(0x0010, 0x1020)), alias: "PatientSize", vr: DS },
    E { tag: Single(Tag(0x0010, 0x1021)), alias: "PatientSizeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0010, 0x1022)), alias: "PatientBodyMassIndex", vr: DS },
    E { tag: Single(Tag(0x0010, 0x1023)), alias: "MeasuredAPDimension", vr: DS },
    E { tag: Single(Tag(0x0010, 0x1024)), alias: "MeasuredLateralDimension", vr: DS },
    E { tag: Single(Tag(0x0010, 0x1030)), alias: "PatientWeight", vr: DS },
    E { tag: Single(Tag(0x0010, 0x1040)), alias: "PatientAddress", vr: LO },
    E { tag: Single(Tag(0x0010, 0x1050)), alias: "InsurancePlanIdentification", vr: LO }, // RET
    E { tag: Single(Tag(0x0010, 0x1060)), alias: "PatientMotherBirthName", vr: PN },
    E { tag: Single(Tag(0x0010, 0x1080)), alias: "MilitaryRank", vr: LO },
    E { tag: Single(Tag(0x0010, 0x1081)), alias: "BranchOfService", vr: LO },
    E { tag: Single(Tag(0x0010, 0x1090)), alias: "MedicalRecordLocator", vr: LO }, // RET (2017a)
    E { tag: Single(Tag(0x0010, 0x1100)), alias: "ReferencedPatientPhotoSequence", vr: SQ },
    E { tag: Single(Tag(0x0010, 0x2000)), alias: "MedicalAlerts", vr: LO },
    E { tag: Single(Tag(0x0010, 0x2110)), alias: "Allergies", vr: LO },
    E { tag: Single(Tag(0x0010, 0x2150)), alias: "CountryOfResidence", vr: LO },
    E { tag: Single(Tag(0x0010, 0x2152)), alias: "RegionOfResidence", vr: LO },
    E { tag: Single(Tag(0x0010, 0x2154)), alias: "PatientTelephoneNumbers", vr: SH },
    E { tag: Single(Tag(0x0010, 0x2155)), alias: "PatientTelecomInformation", vr: LT },
    E { tag: Single(Tag(0x0010, 0x2160)), alias: "EthnicGroup", vr: SH },
    E { tag: Single(Tag(0x0010, 0x2180)), alias: "Occupation", vr: SH },
    E { tag: Single(Tag(0x0010, 0x21A0)), alias: "SmokingStatus", vr: CS },
    E { tag: Single(Tag(0x0010, 0x21B0)), alias: "AdditionalPatientHistory", vr: LT },
    E { tag: Single(Tag(0x0010, 0x21C0)), alias: "PregnancyStatus", vr: US },
    E { tag: Single(Tag(0x0010, 0x21D0)), alias: "LastMenstrualDate", vr: DA },
    E { tag: Single(Tag(0x0010, 0x21F0)), alias: "PatientReligiousPreference", vr: LO },
    E { tag: Single(Tag(0x0010, 0x2201)), alias: "PatientSpeciesDescription", vr: LO },
    E { tag: Single(Tag(0x0010, 0x2202)), alias: "PatientSpeciesCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0010, 0x2203)), alias: "PatientSexNeutered", vr: CS },
    E { tag: Single(Tag(0x0010, 0x2210)), alias: "AnatomicalOrientationType", vr: CS },
    E { tag: Single(Tag(0x0010, 0x2292)), alias: "PatientBreedDescription", vr: LO },
    E { tag: Single(Tag(0x0010, 0x2293)), alias: "PatientBreedCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0010, 0x2294)), alias: "BreedRegistrationSequence", vr: SQ },
    E { tag: Single(Tag(0x0010, 0x2295)), alias: "BreedRegistrationNumber", vr: LO },
    E { tag: Single(Tag(0x0010, 0x2296)), alias: "BreedRegistryCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0010, 0x2297)), alias: "ResponsiblePerson", vr: PN },
    E { tag: Single(Tag(0x0010, 0x2298)), alias: "ResponsiblePersonRole", vr: CS },
    E { tag: Single(Tag(0x0010, 0x2299)), alias: "ResponsibleOrganization", vr: LO },
    E { tag: Single(Tag(0x0010, 0x4000)), alias: "PatientComments", vr: LT },
    E { tag: Single(Tag(0x0010, 0x9431)), alias: "ExaminedBodyThickness", vr: FL },
    E { tag: Single(Tag(0x0012, 0x0010)), alias: "ClinicalTrialSponsorName", vr: LO },
    E { tag: Single(Tag(0x0012, 0x0020)), alias: "ClinicalTrialProtocolID", vr: LO },
    E { tag: Single(Tag(0x0012, 0x0021)), alias: "ClinicalTrialProtocolName", vr: LO },
    E { tag: Single(Tag(0x0012, 0x0030)), alias: "ClinicalTrialSiteID", vr: LO },
    E { tag: Single(Tag(0x0012, 0x0031)), alias: "ClinicalTrialSiteName", vr: LO },
    E { tag: Single(Tag(0x0012, 0x0040)), alias: "ClinicalTrialSubjectID", vr: LO },
    E { tag: Single(Tag(0x0012, 0x0042)), alias: "ClinicalTrialSubjectReadingID", vr: LO },
    E { tag: Single(Tag(0x0012, 0x0050)), alias: "ClinicalTrialTimePointID", vr: LO },
    E { tag: Single(Tag(0x0012, 0x0051)), alias: "ClinicalTrialTimePointDescription", vr: ST },
    E { tag: Single(Tag(0x0012, 0x0052)), alias: "LongitudinalTemporalOffsetFromEvent", vr: FD },
    E { tag: Single(Tag(0x0012, 0x0053)), alias: "LongitudinalTemporalEventType", vr: CS },
    E { tag: Single(Tag(0x0012, 0x0060)), alias: "ClinicalTrialCoordinatingCenterName", vr: LO },
    E { tag: Single(Tag(0x0012, 0x0062)), alias: "PatientIdentityRemoved", vr: CS },
    E { tag: Single(Tag(0x0012, 0x0063)), alias: "DeidentificationMethod", vr: LO },
    E { tag: Single(Tag(0x0012, 0x0064)), alias: "DeidentificationMethodCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0012, 0x0071)), alias: "ClinicalTrialSeriesID", vr: LO },
    E { tag: Single(Tag(0x0012, 0x0072)), alias: "ClinicalTrialSeriesDescription", vr: LO },
    E { tag: Single(Tag(0x0012, 0x0081)), alias: "ClinicalTrialProtocolEthicsCommitteeName", vr: LO },
    E { tag: Single(Tag(0x0012, 0x0082)), alias: "ClinicalTrialProtocolEthicsCommitteeApprovalNumber", vr: LO },
    E { tag: Single(Tag(0x0012, 0x0083)), alias: "ConsentForClinicalTrialUseSequence", vr: SQ },
    E { tag: Single(Tag(0x0012, 0x0084)), alias: "DistributionType", vr: CS },
    E { tag: Single(Tag(0x0012, 0x0085)), alias: "ConsentForDistributionFlag", vr: CS },
    E { tag: Single(Tag(0x0012, 0x0086)), alias: "EthicsCommitteeApprovalEffectivenessStartDate", vr: DA },
    E { tag: Single(Tag(0x0012, 0x0087)), alias: "EthicsCommitteeApprovalEffectivenessEndDate", vr: DA },
    E { tag: Single(Tag(0x0014, 0x0023)), alias: "CADFileFormat", vr: ST }, // RET (2011)
    E { tag: Single(Tag(0x0014, 0x0024)), alias: "ComponentReferenceSystem", vr: ST }, // RET (2011)
    E { tag: Single(Tag(0x0014, 0x0025)), alias: "ComponentManufacturingProcedure", vr: ST }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x0028)), alias: "ComponentManufacturer", vr: ST }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x0030)), alias: "MaterialThickness", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x0032)), alias: "MaterialPipeDiameter", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x0034)), alias: "MaterialIsolationDiameter", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x0042)), alias: "MaterialGrade", vr: ST }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x0044)), alias: "MaterialPropertiesDescription", vr: ST }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x0045)), alias: "MaterialPropertiesFileFormatRetired", vr: ST }, // RET (2011)
    E { tag: Single(Tag(0x0014, 0x0046)), alias: "MaterialNotes", vr: LT }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x0050)), alias: "ComponentShape", vr: CS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x0052)), alias: "CurvatureType", vr: CS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x0054)), alias: "OuterDiameter", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x0056)), alias: "InnerDiameter", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x0100)), alias: "ComponentWelderIDs", vr: LO }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x0101)), alias: "SecondaryApprovalStatus", vr: CS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x0102)), alias: "SecondaryReviewDate", vr: DA }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x0103)), alias: "SecondaryReviewTime", vr: TM }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x0104)), alias: "SecondaryReviewerName", vr: PN }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x0105)), alias: "RepairID", vr: ST }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x0106)), alias: "MultipleComponentApprovalSequence", vr: SQ }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x0107)), alias: "OtherApprovalStatus", vr: CS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x0108)), alias: "OtherSecondaryApprovalStatus", vr: CS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x1010)), alias: "ActualEnvironmentalConditions", vr: ST }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x1020)), alias: "ExpiryDate", vr: DA }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x1040)), alias: "EnvironmentalConditions", vr: ST }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x2002)), alias: "EvaluatorSequence", vr: SQ }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x2004)), alias: "EvaluatorNumber", vr: IS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x2006)), alias: "EvaluatorName", vr: PN }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x2008)), alias: "EvaluationAttempt", vr: IS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x2012)), alias: "IndicationSequence", vr: SQ }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x2014)), alias: "IndicationNumber", vr: IS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x2016)), alias: "IndicationLabel", vr: SH }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x2018)), alias: "IndicationDescription", vr: ST }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x201A)), alias: "IndicationType", vr: CS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x201C)), alias: "IndicationDisposition", vr: CS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x201E)), alias: "IndicationROISequence", vr: SQ }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x2030)), alias: "IndicationPhysicalPropertySequence", vr: SQ }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x2032)), alias: "PropertyLabel", vr: SH }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x2202)), alias: "CoordinateSystemNumberOfAxes", vr: IS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x2204)), alias: "CoordinateSystemAxesSequence", vr: SQ }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x2206)), alias: "CoordinateSystemAxisDescription", vr: ST }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x2208)), alias: "CoordinateSystemDataSetMapping", vr: CS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x220A)), alias: "CoordinateSystemAxisNumber", vr: IS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x220C)), alias: "CoordinateSystemAxisType", vr: CS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x220E)), alias: "CoordinateSystemAxisUnits", vr: CS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x2210)), alias: "CoordinateSystemAxisValues", vr: OB }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x2220)), alias: "CoordinateSystemTransformSequence", vr: SQ }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x2222)), alias: "TransformDescription", vr: ST }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x2224)), alias: "TransformNumberOfAxes", vr: IS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x2226)), alias: "TransformOrderOfAxes", vr: IS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x2228)), alias: "TransformedAxisUnits", vr: CS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x222A)), alias: "CoordinateSystemTransformRotationAndScaleMatrix", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x222C)), alias: "CoordinateSystemTransformTranslationMatrix", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x3011)), alias: "InternalDetectorFrameTime", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x3012)), alias: "NumberOfFramesIntegrated", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x3020)), alias: "DetectorTemperatureSequence", vr: SQ }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x3022)), alias: "SensorName", vr: ST }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x3024)), alias: "HorizontalOffsetOfSensor", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x3026)), alias: "VerticalOffsetOfSensor", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x3028)), alias: "SensorTemperature", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x3040)), alias: "DarkCurrentSequence", vr: SQ }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x3050)), alias: "DarkCurrentCounts", vr: OB /* or OW */ }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x3060)), alias: "GainCorrectionReferenceSequence", vr: SQ }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x3070)), alias: "AirCounts", vr: OB /* or OW */ }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x3071)), alias: "KVUsedInGainCalibration", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x3072)), alias: "MAUsedInGainCalibration", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x3073)), alias: "NumberOfFramesUsedForIntegration", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x3074)), alias: "FilterMaterialUsedInGainCalibration", vr: LO }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x3075)), alias: "FilterThicknessUsedInGainCalibration", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x3076)), alias: "DateOfGainCalibration", vr: DA }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x3077)), alias: "TimeOfGainCalibration", vr: TM }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x3080)), alias: "BadPixelImage", vr: OB }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x3099)), alias: "CalibrationNotes", vr: LT }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4002)), alias: "PulserEquipmentSequence", vr: SQ }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4004)), alias: "PulserType", vr: CS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4006)), alias: "PulserNotes", vr: LT }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4008)), alias: "ReceiverEquipmentSequence", vr: SQ }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x400A)), alias: "AmplifierType", vr: CS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x400C)), alias: "ReceiverNotes", vr: LT }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x400E)), alias: "PreAmplifierEquipmentSequence", vr: SQ }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x400F)), alias: "PreAmplifierNotes", vr: LT }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4010)), alias: "TransmitTransducerSequence", vr: SQ }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4011)), alias: "ReceiveTransducerSequence", vr: SQ }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4012)), alias: "NumberOfElements", vr: US }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4013)), alias: "ElementShape", vr: CS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4014)), alias: "ElementDimensionA", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4015)), alias: "ElementDimensionB", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4016)), alias: "ElementPitchA", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4017)), alias: "MeasuredBeamDimensionA", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4018)), alias: "MeasuredBeamDimensionB", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4019)), alias: "LocationOfMeasuredBeamDiameter", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x401A)), alias: "NominalFrequency", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x401B)), alias: "MeasuredCenterFrequency", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x401C)), alias: "MeasuredBandwidth", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x401D)), alias: "ElementPitchB", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4020)), alias: "PulserSettingsSequence", vr: SQ }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4022)), alias: "PulseWidth", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4024)), alias: "ExcitationFrequency", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4026)), alias: "ModulationType", vr: CS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4028)), alias: "Damping", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4030)), alias: "ReceiverSettingsSequence", vr: SQ }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4031)), alias: "AcquiredSoundpathLength", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4032)), alias: "AcquisitionCompressionType", vr: CS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4033)), alias: "AcquisitionSampleSize", vr: IS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4034)), alias: "RectifierSmoothing", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4035)), alias: "DACSequence", vr: SQ }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4036)), alias: "DACType", vr: CS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4038)), alias: "DACGainPoints", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x403A)), alias: "DACTimePoints", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x403C)), alias: "DACAmplitude", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4040)), alias: "PreAmplifierSettingsSequence", vr: SQ }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4050)), alias: "TransmitTransducerSettingsSequence", vr: SQ }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4051)), alias: "ReceiveTransducerSettingsSequence", vr: SQ }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4052)), alias: "IncidentAngle", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4054)), alias: "CouplingTechnique", vr: ST }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4056)), alias: "CouplingMedium", vr: ST }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4057)), alias: "CouplingVelocity", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4058)), alias: "ProbeCenterLocationX", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4059)), alias: "ProbeCenterLocationZ", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x405A)), alias: "SoundPathLength", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x405C)), alias: "DelayLawIdentifier", vr: ST }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4060)), alias: "GateSettingsSequence", vr: SQ }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4062)), alias: "GateThreshold", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4064)), alias: "VelocityOfSound", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4070)), alias: "CalibrationSettingsSequence", vr: SQ }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4072)), alias: "CalibrationProcedure", vr: ST }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4074)), alias: "ProcedureVersion", vr: SH }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4076)), alias: "ProcedureCreationDate", vr: DA }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4078)), alias: "ProcedureExpirationDate", vr: DA }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x407A)), alias: "ProcedureLastModifiedDate", vr: DA }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x407C)), alias: "CalibrationTime", vr: TM }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x407E)), alias: "CalibrationDate", vr: DA }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4080)), alias: "ProbeDriveEquipmentSequence", vr: SQ }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4081)), alias: "DriveType", vr: CS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4082)), alias: "ProbeDriveNotes", vr: LT }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4083)), alias: "DriveProbeSequence", vr: SQ }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4084)), alias: "ProbeInductance", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4085)), alias: "ProbeResistance", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4086)), alias: "ReceiveProbeSequence", vr: SQ }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4087)), alias: "ProbeDriveSettingsSequence", vr: SQ }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4088)), alias: "BridgeResistors", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4089)), alias: "ProbeOrientationAngle", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x408B)), alias: "UserSelectedGainY", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x408C)), alias: "UserSelectedPhase", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x408D)), alias: "UserSelectedOffsetX", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x408E)), alias: "UserSelectedOffsetY", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4091)), alias: "ChannelSettingsSequence", vr: SQ }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x4092)), alias: "ChannelThreshold", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x409A)), alias: "ScannerSettingsSequence", vr: SQ }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x409B)), alias: "ScanProcedure", vr: ST }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x409C)), alias: "TranslationRateX", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x409D)), alias: "TranslationRateY", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x409F)), alias: "ChannelOverlap", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x40A0)), alias: "ImageQualityIndicatorType", vr: LO }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x40A1)), alias: "ImageQualityIndicatorMaterial", vr: LO }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x40A2)), alias: "ImageQualityIndicatorSize", vr: LO }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x5002)), alias: "LINACEnergy", vr: IS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x5004)), alias: "LINACOutput", vr: IS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x5100)), alias: "ActiveAperture", vr: US }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x5101)), alias: "TotalAperture", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x5102)), alias: "ApertureElevation", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x5103)), alias: "MainLobeAngle", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x5104)), alias: "MainRoofAngle", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x5105)), alias: "ConnectorType", vr: CS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x5106)), alias: "WedgeModelNumber", vr: SH }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x5107)), alias: "WedgeAngleFloat", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x5108)), alias: "WedgeRoofAngle", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x5109)), alias: "WedgeElement1Position", vr: CS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x510A)), alias: "WedgeMaterialVelocity", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x510B)), alias: "WedgeMaterial", vr: SH }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x510C)), alias: "WedgeOffsetZ", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x510D)), alias: "WedgeOriginOffsetX", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x510E)), alias: "WedgeTimeDelay", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x510F)), alias: "WedgeName", vr: SH }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x5110)), alias: "WedgeManufacturerName", vr: SH }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x5111)), alias: "WedgeDescription", vr: LO }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x5112)), alias: "NominalBeamAngle", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x5113)), alias: "WedgeOffsetX", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x5114)), alias: "WedgeOffsetY", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x5115)), alias: "WedgeTotalLength", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x5116)), alias: "WedgeInContactLength", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x5117)), alias: "WedgeFrontGap", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x5118)), alias: "WedgeTotalHeight", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x5119)), alias: "WedgeFrontHeight", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x511A)), alias: "WedgeRearHeight", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x511B)), alias: "WedgeTotalWidth", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x511C)), alias: "WedgeInContactWidth", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x511D)), alias: "WedgeChamferHeight", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x511E)), alias: "WedgeCurve", vr: CS }, // DICONDE
    E { tag: Single(Tag(0x0014, 0x511F)), alias: "RadiusAlongWedge", vr: DS }, // DICONDE
    E { tag: Single(Tag(0x0016, 0x0001)), alias: "WhitePoint", vr: DS },
    E { tag: Single(Tag(0x0016, 0x0002)), alias: "PrimaryChromaticities", vr: DS },
    E { tag: Single(Tag(0x0016, 0x0003)), alias: "BatteryLevel", vr: UT },
    E { tag: Single(Tag(0x0016, 0x0004)), alias: "ExposureTimeInSeconds", vr: DS },
    E { tag: Single(Tag(0x0016, 0x0005)), alias: "FNumber", vr: DS },
    E { tag: Single(Tag(0x0016, 0x0006)), alias: "OECFRows", vr: IS },
    E { tag: Single(Tag(0x0016, 0x0007)), alias: "OECFColumns", vr: IS },
    E { tag: Single(Tag(0x0016, 0x0008)), alias: "OECFColumnNames", vr: UC },
    E { tag: Single(Tag(0x0016, 0x0009)), alias: "OECFValues", vr: DS },
    E { tag: Single(Tag(0x0016, 0x000A)), alias: "SpatialFrequencyResponseRows", vr: IS },
    E { tag: Single(Tag(0x0016, 0x000B)), alias: "SpatialFrequencyResponseColumns", vr: IS },
    E { tag: Single(Tag(0x0016, 0x000C)), alias: "SpatialFrequencyResponseColumnNames", vr: UC },
    E { tag: Single(Tag(0x0016, 0x000D)), alias: "SpatialFrequencyResponseValues", vr: DS },
    E { tag: Single(Tag(0x0016, 0x000E)), alias: "ColorFilterArrayPatternRows", vr: IS },
    E { tag: Single(Tag(0x0016, 0x000F)), alias: "ColorFilterArrayPatternColumns", vr: IS },
    E { tag: Single(Tag(0x0016, 0x0010)), alias: "ColorFilterArrayPatternValues", vr: DS },
    E { tag: Single(Tag(0x0016, 0x0011)), alias: "FlashFiringStatus", vr: US },
    E { tag: Single(Tag(0x0016, 0x0012)), alias: "FlashReturnStatus", vr: US },
    E { tag: Single(Tag(0x0016, 0x0013)), alias: "FlashMode", vr: US },
    E { tag: Single(Tag(0x0016, 0x0014)), alias: "FlashFunctionPresent", vr: US },
    E { tag: Single(Tag(0x0016, 0x0015)), alias: "FlashRedEyeMode", vr: US },
    E { tag: Single(Tag(0x0016, 0x0016)), alias: "ExposureProgram", vr: US },
    E { tag: Single(Tag(0x0016, 0x0017)), alias: "SpectralSensitivity", vr: UT },
    E { tag: Single(Tag(0x0016, 0x0018)), alias: "PhotographicSensitivity", vr: IS },
    E { tag: Single(Tag(0x0016, 0x0019)), alias: "SelfTimerMode", vr: IS },
    E { tag: Single(Tag(0x0016, 0x001A)), alias: "SensitivityType", vr: US },
    E { tag: Single(Tag(0x0016, 0x001B)), alias: "StandardOutputSensitivity", vr: IS },
    E { tag: Single(Tag(0x0016, 0x001C)), alias: "RecommendedExposureIndex", vr: IS },
    E { tag: Single(Tag(0x0016, 0x001D)), alias: "ISOSpeed", vr: IS },
    E { tag: Single(Tag(0x0016, 0x001E)), alias: "ISOSpeedLatitudeyyy", vr: IS },
    E { tag: Single(Tag(0x0016, 0x001F)), alias: "ISOSpeedLatitudezzz", vr: IS },
    E { tag: Single(Tag(0x0016, 0x0020)), alias: "EXIFVersion", vr: UT },
    E { tag: Single(Tag(0x0016, 0x0021)), alias: "ShutterSpeedValue", vr: DS },
    E { tag: Single(Tag(0x0016, 0x0022)), alias: "ApertureValue", vr: DS },
    E { tag: Single(Tag(0x0016, 0x0023)), alias: "BrightnessValue", vr: DS },
    E { tag: Single(Tag(0x0016, 0x0024)), alias: "ExposureBiasValue", vr: DS },
    E { tag: Single(Tag(0x0016, 0x0025)), alias: "MaxApertureValue", vr: DS },
    E { tag: Single(Tag(0x0016, 0x0026)), alias: "SubjectDistance", vr: DS },
    E { tag: Single(Tag(0x0016, 0x0027)), alias: "MeteringMode", vr: US },
    E { tag: Single(Tag(0x0016, 0x0028)), alias: "LightSource", vr: US },
    E { tag: Single(Tag(0x0016, 0x0029)), alias: "FocalLength", vr: DS },
    E { tag: Single(Tag(0x0016, 0x002A)), alias: "SubjectArea", vr: IS },
    E { tag: Single(Tag(0x0016, 0x002B)), alias: "MakerNote", vr: OB },
    E { tag: Single(Tag(0x0016, 0x0030)), alias: "Temperature", vr: DS },
    E { tag: Single(Tag(0x0016, 0x0031)), alias: "Humidity", vr: DS },
    E { tag: Single(Tag(0x0016, 0x0032)), alias: "Pressure", vr: DS },
    E { tag: Single(Tag(0x0016, 0x0033)), alias: "WaterDepth", vr: DS },
    E { tag: Single(Tag(0x0016, 0x0034)), alias: "Acceleration", vr: DS },
    E { tag: Single(Tag(0x0016, 0x0035)), alias: "CameraElevationAngle", vr: DS },
    E { tag: Single(Tag(0x0016, 0x0036)), alias: "FlashEnergy", vr: DS },
    E { tag: Single(Tag(0x0016, 0x0037)), alias: "SubjectLocation", vr: IS },
    E { tag: Single(Tag(0x0016, 0x0038)), alias: "PhotographicExposureIndex", vr: DS },
    E { tag: Single(Tag(0x0016, 0x0039)), alias: "SensingMethod", vr: US },
    E { tag: Single(Tag(0x0016, 0x003A)), alias: "FileSource", vr: US },
    E { tag: Single(Tag(0x0016, 0x003B)), alias: "SceneType", vr: US },
    E { tag: Single(Tag(0x0016, 0x0041)), alias: "CustomRendered", vr: US },
    E { tag: Single(Tag(0x0016, 0x0042)), alias: "ExposureMode", vr: US },
    E { tag: Single(Tag(0x0016, 0x0043)), alias: "WhiteBalance", vr: US },
    E { tag: Single(Tag(0x0016, 0x0044)), alias: "DigitalZoomRatio", vr: DS },
    E { tag: Single(Tag(0x0016, 0x0045)), alias: "FocalLengthIn35mmFilm", vr: IS },
    E { tag: Single(Tag(0x0016, 0x0046)), alias: "SceneCaptureType", vr: US },
    E { tag: Single(Tag(0x0016, 0x0047)), alias: "GainControl", vr: US },
    E { tag: Single(Tag(0x0016, 0x0048)), alias: "Contrast", vr: US },
    E { tag: Single(Tag(0x0016, 0x0049)), alias: "Saturation", vr: US },
    E { tag: Single(Tag(0x0016, 0x004A)), alias: "Sharpness", vr: US },
    E { tag: Single(Tag(0x0016, 0x004B)), alias: "DeviceSettingDescription", vr: OB },
    E { tag: Single(Tag(0x0016, 0x004C)), alias: "SubjectDistanceRange", vr: US },
    E { tag: Single(Tag(0x0016, 0x004D)), alias: "CameraOwnerName", vr: UT },
    E { tag: Single(Tag(0x0016, 0x004E)), alias: "LensSpecification", vr: DS },
    E { tag: Single(Tag(0x0016, 0x004F)), alias: "LensMake", vr: UT },
    E { tag: Single(Tag(0x0016, 0x0050)), alias: "LensModel", vr: UT },
    E { tag: Single(Tag(0x0016, 0x0051)), alias: "LensSerialNumber", vr: UT },
    E { tag: Single(Tag(0x0016, 0x0061)), alias: "InteroperabilityIndex", vr: CS },
    E { tag: Single(Tag(0x0016, 0x0062)), alias: "InteroperabilityVersion", vr: OB },
    E { tag: Single(Tag(0x0016, 0x0070)), alias: "GPSVersionID", vr: OB },
    E { tag: Single(Tag(0x0016, 0x0071)), alias: "GPSLatitudeRef", vr: CS },
    E { tag: Single(Tag(0x0016, 0x0072)), alias: "GPSLatitude", vr: DS },
    E { tag: Single(Tag(0x0016, 0x0073)), alias: "GPSLongitudeRef", vr: CS },
    E { tag: Single(Tag(0x0016, 0x0074)), alias: "GPSLongitude", vr: DS },
    E { tag: Single(Tag(0x0016, 0x0075)), alias: "GPSAltitudeRef", vr: US },
    E { tag: Single(Tag(0x0016, 0x0076)), alias: "GPSAltitude", vr: DS },
    E { tag: Single(Tag(0x0016, 0x0077)), alias: "GPSTimeStamp", vr: DT },
    E { tag: Single(Tag(0x0016, 0x0078)), alias: "GPSSatellites", vr: UT },
    E { tag: Single(Tag(0x0016, 0x0079)), alias: "GPSStatus", vr: CS },
    E { tag: Single(Tag(0x0016, 0x007A)), alias: "GPSMeasureMode", vr: CS },
    E { tag: Single(Tag(0x0016, 0x007B)), alias: "GPSDOP", vr: DS },
    E { tag: Single(Tag(0x0016, 0x007C)), alias: "GPSSpeedRef", vr: CS },
    E { tag: Single(Tag(0x0016, 0x007D)), alias: "GPSSpeed", vr: DS },
    E { tag: Single(Tag(0x0016, 0x007E)), alias: "GPSTrackRef", vr: CS },
    E { tag: Single(Tag(0x0016, 0x007F)), alias: "GPSTrack", vr: DS },
    E { tag: Single(Tag(0x0016, 0x0080)), alias: "GPSImgDirectionRef", vr: CS },
    E { tag: Single(Tag(0x0016, 0x0081)), alias: "GPSImgDirection", vr: DS },
    E { tag: Single(Tag(0x0016, 0x0082)), alias: "GPSMapDatum", vr: UT },
    E { tag: Single(Tag(0x0016, 0x0083)), alias: "GPSDestLatitudeRef", vr: CS },
    E { tag: Single(Tag(0x0016, 0x0084)), alias: "GPSDestLatitude", vr: DS },
    E { tag: Single(Tag(0x0016, 0x0085)), alias: "GPSDestLongitudeRef", vr: CS },
    E { tag: Single(Tag(0x0016, 0x0086)), alias: "GPSDestLongitude", vr: DS },
    E { tag: Single(Tag(0x0016, 0x0087)), alias: "GPSDestBearingRef", vr: CS },
    E { tag: Single(Tag(0x0016, 0x0088)), alias: "GPSDestBearing", vr: DS },
    E { tag: Single(Tag(0x0016, 0x0089)), alias: "GPSDestDistanceRef", vr: CS },
    E { tag: Single(Tag(0x0016, 0x008A)), alias: "GPSDestDistance", vr: DS },
    E { tag: Single(Tag(0x0016, 0x008B)), alias: "GPSProcessingMethod", vr: OB },
    E { tag: Single(Tag(0x0016, 0x008C)), alias: "GPSAreaInformation", vr: OB },
    E { tag: Single(Tag(0x0016, 0x008D)), alias: "GPSDateStamp", vr: DT },
    E { tag: Single(Tag(0x0016, 0x008E)), alias: "GPSDifferential", vr: IS },
    E { tag: Single(Tag(0x0018, 0x0010)), alias: "ContrastBolusAgent", vr: LO },
    E { tag: Single(Tag(0x0018, 0x0012)), alias: "ContrastBolusAgentSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x0013)), alias: "ContrastBolusT1Relaxivity", vr: FL },
    E { tag: Single(Tag(0x0018, 0x0014)), alias: "ContrastBolusAdministrationRouteSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x0015)), alias: "BodyPartExamined", vr: CS },
    E { tag: Single(Tag(0x0018, 0x0020)), alias: "ScanningSequence", vr: CS },
    E { tag: Single(Tag(0x0018, 0x0021)), alias: "SequenceVariant", vr: CS },
    E { tag: Single(Tag(0x0018, 0x0022)), alias: "ScanOptions", vr: CS },
    E { tag: Single(Tag(0x0018, 0x0023)), alias: "MRAcquisitionType", vr: CS },
    E { tag: Single(Tag(0x0018, 0x0024)), alias: "SequenceName", vr: SH },
    E { tag: Single(Tag(0x0018, 0x0025)), alias: "AngioFlag", vr: CS },
    E { tag: Single(Tag(0x0018, 0x0026)), alias: "InterventionDrugInformationSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x0027)), alias: "InterventionDrugStopTime", vr: TM },
    E { tag: Single(Tag(0x0018, 0x0028)), alias: "InterventionDrugDose", vr: DS },
    E { tag: Single(Tag(0x0018, 0x0029)), alias: "InterventionDrugCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x002A)), alias: "AdditionalDrugSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x0030)), alias: "Radionuclide", vr: LO }, // RET (1993)
    E { tag: Single(Tag(0x0018, 0x0031)), alias: "Radiopharmaceutical", vr: LO },
    E { tag: Single(Tag(0x0018, 0x0032)), alias: "EnergyWindowCenterline", vr: DS }, // RET (1993)
    E { tag: Single(Tag(0x0018, 0x0033)), alias: "EnergyWindowTotalWidth", vr: DS }, // RET (1993)
    E { tag: Single(Tag(0x0018, 0x0034)), alias: "InterventionDrugName", vr: LO },
    E { tag: Single(Tag(0x0018, 0x0035)), alias: "InterventionDrugStartTime", vr: TM },
    E { tag: Single(Tag(0x0018, 0x0036)), alias: "InterventionSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x0037)), alias: "TherapyType", vr: CS }, // RET (2001)
    E { tag: Single(Tag(0x0018, 0x0038)), alias: "InterventionStatus", vr: CS },
    E { tag: Single(Tag(0x0018, 0x0039)), alias: "TherapyDescription", vr: CS }, // RET (2003)
    E { tag: Single(Tag(0x0018, 0x003A)), alias: "InterventionDescription", vr: ST },
    E { tag: Single(Tag(0x0018, 0x0040)), alias: "CineRate", vr: IS },
    E { tag: Single(Tag(0x0018, 0x0042)), alias: "InitialCineRunState", vr: CS },
    E { tag: Single(Tag(0x0018, 0x0050)), alias: "SliceThickness", vr: DS },
    E { tag: Single(Tag(0x0018, 0x0060)), alias: "KVP", vr: DS },
    E { tag: Single(Tag(0x0018, 0x0070)), alias: "CountsAccumulated", vr: IS },
    E { tag: Single(Tag(0x0018, 0x0071)), alias: "AcquisitionTerminationCondition", vr: CS },
    E { tag: Single(Tag(0x0018, 0x0072)), alias: "EffectiveDuration", vr: DS },
    E { tag: Single(Tag(0x0018, 0x0073)), alias: "AcquisitionStartCondition", vr: CS },
    E { tag: Single(Tag(0x0018, 0x0074)), alias: "AcquisitionStartConditionData", vr: IS },
    E { tag: Single(Tag(0x0018, 0x0075)), alias: "AcquisitionTerminationConditionData", vr: IS },
    E { tag: Single(Tag(0x0018, 0x0080)), alias: "RepetitionTime", vr: DS },
    E { tag: Single(Tag(0x0018, 0x0081)), alias: "EchoTime", vr: DS },
    E { tag: Single(Tag(0x0018, 0x0082)), alias: "InversionTime", vr: DS },
    E { tag: Single(Tag(0x0018, 0x0083)), alias: "NumberOfAverages", vr: DS },
    E { tag: Single(Tag(0x0018, 0x0084)), alias: "ImagingFrequency", vr: DS },
    E { tag: Single(Tag(0x0018, 0x0085)), alias: "ImagedNucleus", vr: SH },
    E { tag: Single(Tag(0x0018, 0x0086)), alias: "EchoNumbers", vr: IS },
    E { tag: Single(Tag(0x0018, 0x0087)), alias: "MagneticFieldStrength", vr: DS },
    E { tag: Single(Tag(0x0018, 0x0088)), alias: "SpacingBetweenSlices", vr: DS },
    E { tag: Single(Tag(0x0018, 0x0089)), alias: "NumberOfPhaseEncodingSteps", vr: IS },
    E { tag: Single(Tag(0x0018, 0x0090)), alias: "DataCollectionDiameter", vr: DS },
    E { tag: Single(Tag(0x0018, 0x0091)), alias: "EchoTrainLength", vr: IS },
    E { tag: Single(Tag(0x0018, 0x0093)), alias: "PercentSampling", vr: DS },
    E { tag: Single(Tag(0x0018, 0x0094)), alias: "PercentPhaseFieldOfView", vr: DS },
    E { tag: Single(Tag(0x0018, 0x0095)), alias: "PixelBandwidth", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1000)), alias: "DeviceSerialNumber", vr: LO },
    E { tag: Single(Tag(0x0018, 0x1002)), alias: "DeviceUID", vr: UI },
    E { tag: Single(Tag(0x0018, 0x1003)), alias: "DeviceID", vr: LO },
    E { tag: Single(Tag(0x0018, 0x1004)), alias: "PlateID", vr: LO },
    E { tag: Single(Tag(0x0018, 0x1005)), alias: "GeneratorID", vr: LO },
    E { tag: Single(Tag(0x0018, 0x1006)), alias: "GridID", vr: LO },
    E { tag: Single(Tag(0x0018, 0x1007)), alias: "CassetteID", vr: LO },
    E { tag: Single(Tag(0x0018, 0x1008)), alias: "GantryID", vr: LO },
    E { tag: Single(Tag(0x0018, 0x1009)), alias: "UniqueDeviceIdentifier", vr: UT },
    E { tag: Single(Tag(0x0018, 0x100A)), alias: "UDISequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x1010)), alias: "SecondaryCaptureDeviceID", vr: LO },
    E { tag: Single(Tag(0x0018, 0x1011)), alias: "HardcopyCreationDeviceID", vr: LO }, // RET (2007)
    E { tag: Single(Tag(0x0018, 0x1012)), alias: "DateOfSecondaryCapture", vr: DA },
    E { tag: Single(Tag(0x0018, 0x1014)), alias: "TimeOfSecondaryCapture", vr: TM },
    E { tag: Single(Tag(0x0018, 0x1016)), alias: "SecondaryCaptureDeviceManufacturer", vr: LO },
    E { tag: Single(Tag(0x0018, 0x1017)), alias: "HardcopyDeviceManufacturer", vr: LO }, // RET (2007)
    E { tag: Single(Tag(0x0018, 0x1018)), alias: "SecondaryCaptureDeviceManufacturerModelName", vr: LO },
    E { tag: Single(Tag(0x0018, 0x1019)), alias: "SecondaryCaptureDeviceSoftwareVersions", vr: LO },
    E { tag: Single(Tag(0x0018, 0x101A)), alias: "HardcopyDeviceSoftwareVersion", vr: LO }, // RET (2007)
    E { tag: Single(Tag(0x0018, 0x101B)), alias: "HardcopyDeviceManufacturerModelName", vr: LO }, // RET (2007)
    E { tag: Single(Tag(0x0018, 0x1020)), alias: "SoftwareVersions", vr: LO },
    E { tag: Single(Tag(0x0018, 0x1022)), alias: "VideoImageFormatAcquired", vr: SH },
    E { tag: Single(Tag(0x0018, 0x1023)), alias: "DigitalImageFormatAcquired", vr: LO },
    E { tag: Single(Tag(0x0018, 0x1030)), alias: "ProtocolName", vr: LO },
    E { tag: Single(Tag(0x0018, 0x1040)), alias: "ContrastBolusRoute", vr: LO },
    E { tag: Single(Tag(0x0018, 0x1041)), alias: "ContrastBolusVolume", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1042)), alias: "ContrastBolusStartTime", vr: TM },
    E { tag: Single(Tag(0x0018, 0x1043)), alias: "ContrastBolusStopTime", vr: TM },
    E { tag: Single(Tag(0x0018, 0x1044)), alias: "ContrastBolusTotalDose", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1045)), alias: "SyringeCounts", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1046)), alias: "ContrastFlowRate", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1047)), alias: "ContrastFlowDuration", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1048)), alias: "ContrastBolusIngredient", vr: CS },
    E { tag: Single(Tag(0x0018, 0x1049)), alias: "ContrastBolusIngredientConcentration", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1050)), alias: "SpatialResolution", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1060)), alias: "TriggerTime", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1061)), alias: "TriggerSourceOrType", vr: LO },
    E { tag: Single(Tag(0x0018, 0x1062)), alias: "NominalInterval", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1063)), alias: "FrameTime", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1064)), alias: "CardiacFramingType", vr: LO },
    E { tag: Single(Tag(0x0018, 0x1065)), alias: "FrameTimeVector", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1066)), alias: "FrameDelay", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1067)), alias: "ImageTriggerDelay", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1068)), alias: "MultiplexGroupTimeOffset", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1069)), alias: "TriggerTimeOffset", vr: DS },
    E { tag: Single(Tag(0x0018, 0x106A)), alias: "SynchronizationTrigger", vr: CS },
    E { tag: Single(Tag(0x0018, 0x106C)), alias: "SynchronizationChannel", vr: US },
    E { tag: Single(Tag(0x0018, 0x106E)), alias: "TriggerSamplePosition", vr: UL },
    E { tag: Single(Tag(0x0018, 0x1070)), alias: "RadiopharmaceuticalRoute", vr: LO },
    E { tag: Single(Tag(0x0018, 0x1071)), alias: "RadiopharmaceuticalVolume", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1072)), alias: "RadiopharmaceuticalStartTime", vr: TM },
    E { tag: Single(Tag(0x0018, 0x1073)), alias: "RadiopharmaceuticalStopTime", vr: TM },
    E { tag: Single(Tag(0x0018, 0x1074)), alias: "RadionuclideTotalDose", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1075)), alias: "RadionuclideHalfLife", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1076)), alias: "RadionuclidePositronFraction", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1077)), alias: "RadiopharmaceuticalSpecificActivity", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1078)), alias: "RadiopharmaceuticalStartDateTime", vr: DT },
    E { tag: Single(Tag(0x0018, 0x1079)), alias: "RadiopharmaceuticalStopDateTime", vr: DT },
    E { tag: Single(Tag(0x0018, 0x1080)), alias: "BeatRejectionFlag", vr: CS },
    E { tag: Single(Tag(0x0018, 0x1081)), alias: "LowRRValue", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1082)), alias: "HighRRValue", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1083)), alias: "IntervalsAcquired", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1084)), alias: "IntervalsRejected", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1085)), alias: "PVCRejection", vr: LO },
    E { tag: Single(Tag(0x0018, 0x1086)), alias: "SkipBeats", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1088)), alias: "HeartRate", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1090)), alias: "CardiacNumberOfImages", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1094)), alias: "TriggerWindow", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1100)), alias: "ReconstructionDiameter", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1110)), alias: "DistanceSourceToDetector", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1111)), alias: "DistanceSourceToPatient", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1114)), alias: "EstimatedRadiographicMagnificationFactor", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1120)), alias: "GantryDetectorTilt", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1121)), alias: "GantryDetectorSlew", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1130)), alias: "TableHeight", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1131)), alias: "TableTraverse", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1134)), alias: "TableMotion", vr: CS },
    E { tag: Single(Tag(0x0018, 0x1135)), alias: "TableVerticalIncrement", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1136)), alias: "TableLateralIncrement", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1137)), alias: "TableLongitudinalIncrement", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1138)), alias: "TableAngle", vr: DS },
    E { tag: Single(Tag(0x0018, 0x113A)), alias: "TableType", vr: CS },
    E { tag: Single(Tag(0x0018, 0x1140)), alias: "RotationDirection", vr: CS },
    E { tag: Single(Tag(0x0018, 0x1141)), alias: "AngularPosition", vr: DS }, // RET (2007)
    E { tag: Single(Tag(0x0018, 0x1142)), alias: "RadialPosition", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1143)), alias: "ScanArc", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1144)), alias: "AngularStep", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1145)), alias: "CenterOfRotationOffset", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1146)), alias: "RotationOffset", vr: DS }, // RET (1993)
    E { tag: Single(Tag(0x0018, 0x1147)), alias: "FieldOfViewShape", vr: CS },
    E { tag: Single(Tag(0x0018, 0x1149)), alias: "FieldOfViewDimensions", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1150)), alias: "ExposureTime", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1151)), alias: "XRayTubeCurrent", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1152)), alias: "Exposure", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1153)), alias: "ExposureInuAs", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1154)), alias: "AveragePulseWidth", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1155)), alias: "RadiationSetting", vr: CS },
    E { tag: Single(Tag(0x0018, 0x1156)), alias: "RectificationType", vr: CS },
    E { tag: Single(Tag(0x0018, 0x115A)), alias: "RadiationMode", vr: CS },
    E { tag: Single(Tag(0x0018, 0x115E)), alias: "ImageAndFluoroscopyAreaDoseProduct", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1160)), alias: "FilterType", vr: SH },
    E { tag: Single(Tag(0x0018, 0x1161)), alias: "TypeOfFilters", vr: LO },
    E { tag: Single(Tag(0x0018, 0x1162)), alias: "IntensifierSize", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1164)), alias: "ImagerPixelSpacing", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1166)), alias: "Grid", vr: CS },
    E { tag: Single(Tag(0x0018, 0x1170)), alias: "GeneratorPower", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1180)), alias: "CollimatorGridName", vr: SH },
    E { tag: Single(Tag(0x0018, 0x1181)), alias: "CollimatorType", vr: CS },
    E { tag: Single(Tag(0x0018, 0x1182)), alias: "FocalDistance", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1183)), alias: "XFocusCenter", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1184)), alias: "YFocusCenter", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1190)), alias: "FocalSpots", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1191)), alias: "AnodeTargetMaterial", vr: CS },
    E { tag: Single(Tag(0x0018, 0x11A0)), alias: "BodyPartThickness", vr: DS },
    E { tag: Single(Tag(0x0018, 0x11A2)), alias: "CompressionForce", vr: DS },
    E { tag: Single(Tag(0x0018, 0x11A3)), alias: "CompressionPressure", vr: DS },
    E { tag: Single(Tag(0x0018, 0x11A4)), alias: "PaddleDescription", vr: LO },
    E { tag: Single(Tag(0x0018, 0x11A5)), alias: "CompressionContactArea", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1200)), alias: "DateOfLastCalibration", vr: DA },
    E { tag: Single(Tag(0x0018, 0x1201)), alias: "TimeOfLastCalibration", vr: TM },
    E { tag: Single(Tag(0x0018, 0x1202)), alias: "DateTimeOfLastCalibration", vr: DT },
    E { tag: Single(Tag(0x0018, 0x1210)), alias: "ConvolutionKernel", vr: SH },
    E { tag: Single(Tag(0x0018, 0x1240)), alias: "UpperLowerPixelValues", vr: IS }, // RET
    E { tag: Single(Tag(0x0018, 0x1242)), alias: "ActualFrameDuration", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1243)), alias: "CountRate", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1244)), alias: "PreferredPlaybackSequencing", vr: US },
    E { tag: Single(Tag(0x0018, 0x1250)), alias: "ReceiveCoilName", vr: SH },
    E { tag: Single(Tag(0x0018, 0x1251)), alias: "TransmitCoilName", vr: SH },
    E { tag: Single(Tag(0x0018, 0x1260)), alias: "PlateType", vr: SH },
    E { tag: Single(Tag(0x0018, 0x1261)), alias: "PhosphorType", vr: LO },
    E { tag: Single(Tag(0x0018, 0x1271)), alias: "WaterEquivalentDiameter", vr: FD },
    E { tag: Single(Tag(0x0018, 0x1272)), alias: "WaterEquivalentDiameterCalculationMethodCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x1300)), alias: "ScanVelocity", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1301)), alias: "WholeBodyTechnique", vr: CS },
    E { tag: Single(Tag(0x0018, 0x1302)), alias: "ScanLength", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1310)), alias: "AcquisitionMatrix", vr: US },
    E { tag: Single(Tag(0x0018, 0x1312)), alias: "InPlanePhaseEncodingDirection", vr: CS },
    E { tag: Single(Tag(0x0018, 0x1314)), alias: "FlipAngle", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1315)), alias: "VariableFlipAngleFlag", vr: CS },
    E { tag: Single(Tag(0x0018, 0x1316)), alias: "SAR", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1318)), alias: "dBdt", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1320)), alias: "B1rms", vr: FL },
    E { tag: Single(Tag(0x0018, 0x1400)), alias: "AcquisitionDeviceProcessingDescription", vr: LO },
    E { tag: Single(Tag(0x0018, 0x1401)), alias: "AcquisitionDeviceProcessingCode", vr: LO },
    E { tag: Single(Tag(0x0018, 0x1402)), alias: "CassetteOrientation", vr: CS },
    E { tag: Single(Tag(0x0018, 0x1403)), alias: "CassetteSize", vr: CS },
    E { tag: Single(Tag(0x0018, 0x1404)), alias: "ExposuresOnPlate", vr: US },
    E { tag: Single(Tag(0x0018, 0x1405)), alias: "RelativeXRayExposure", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1411)), alias: "ExposureIndex", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1412)), alias: "TargetExposureIndex", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1413)), alias: "DeviationIndex", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1450)), alias: "ColumnAngulation", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1460)), alias: "TomoLayerHeight", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1470)), alias: "TomoAngle", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1480)), alias: "TomoTime", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1490)), alias: "TomoType", vr: CS },
    E { tag: Single(Tag(0x0018, 0x1491)), alias: "TomoClass", vr: CS },
    E { tag: Single(Tag(0x0018, 0x1495)), alias: "NumberOfTomosynthesisSourceImages", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1500)), alias: "PositionerMotion", vr: CS },
    E { tag: Single(Tag(0x0018, 0x1508)), alias: "PositionerType", vr: CS },
    E { tag: Single(Tag(0x0018, 0x1510)), alias: "PositionerPrimaryAngle", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1511)), alias: "PositionerSecondaryAngle", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1520)), alias: "PositionerPrimaryAngleIncrement", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1521)), alias: "PositionerSecondaryAngleIncrement", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1530)), alias: "DetectorPrimaryAngle", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1531)), alias: "DetectorSecondaryAngle", vr: DS },
    E { tag: Single(Tag(0x0018, 0x1600)), alias: "ShutterShape", vr: CS },
    E { tag: Single(Tag(0x0018, 0x1602)), alias: "ShutterLeftVerticalEdge", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1604)), alias: "ShutterRightVerticalEdge", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1606)), alias: "ShutterUpperHorizontalEdge", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1608)), alias: "ShutterLowerHorizontalEdge", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1610)), alias: "CenterOfCircularShutter", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1612)), alias: "RadiusOfCircularShutter", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1620)), alias: "VerticesOfThePolygonalShutter", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1622)), alias: "ShutterPresentationValue", vr: US },
    E { tag: Single(Tag(0x0018, 0x1623)), alias: "ShutterOverlayGroup", vr: US },
    E { tag: Single(Tag(0x0018, 0x1624)), alias: "ShutterPresentationColorCIELabValue", vr: US },
    E { tag: Single(Tag(0x0018, 0x1700)), alias: "CollimatorShape", vr: CS },
    E { tag: Single(Tag(0x0018, 0x1702)), alias: "CollimatorLeftVerticalEdge", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1704)), alias: "CollimatorRightVerticalEdge", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1706)), alias: "CollimatorUpperHorizontalEdge", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1708)), alias: "CollimatorLowerHorizontalEdge", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1710)), alias: "CenterOfCircularCollimator", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1712)), alias: "RadiusOfCircularCollimator", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1720)), alias: "VerticesOfThePolygonalCollimator", vr: IS },
    E { tag: Single(Tag(0x0018, 0x1800)), alias: "AcquisitionTimeSynchronized", vr: CS },
    E { tag: Single(Tag(0x0018, 0x1801)), alias: "TimeSource", vr: SH },
    E { tag: Single(Tag(0x0018, 0x1802)), alias: "TimeDistributionProtocol", vr: CS },
    E { tag: Single(Tag(0x0018, 0x1803)), alias: "NTPSourceAddress", vr: LO },
    E { tag: Single(Tag(0x0018, 0x2001)), alias: "PageNumberVector", vr: IS },
    E { tag: Single(Tag(0x0018, 0x2002)), alias: "FrameLabelVector", vr: SH },
    E { tag: Single(Tag(0x0018, 0x2003)), alias: "FramePrimaryAngleVector", vr: DS },
    E { tag: Single(Tag(0x0018, 0x2004)), alias: "FrameSecondaryAngleVector", vr: DS },
    E { tag: Single(Tag(0x0018, 0x2005)), alias: "SliceLocationVector", vr: DS },
    E { tag: Single(Tag(0x0018, 0x2006)), alias: "DisplayWindowLabelVector", vr: SH },
    E { tag: Single(Tag(0x0018, 0x2010)), alias: "NominalScannedPixelSpacing", vr: DS },
    E { tag: Single(Tag(0x0018, 0x2020)), alias: "DigitizingDeviceTransportDirection", vr: CS },
    E { tag: Single(Tag(0x0018, 0x2030)), alias: "RotationOfScannedFilm", vr: DS },
    E { tag: Single(Tag(0x0018, 0x2041)), alias: "BiopsyTargetSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x2042)), alias: "TargetUID", vr: UI },
    E { tag: Single(Tag(0x0018, 0x2043)), alias: "LocalizingCursorPosition", vr: FL },
    E { tag: Single(Tag(0x0018, 0x2044)), alias: "CalculatedTargetPosition", vr: FL },
    E { tag: Single(Tag(0x0018, 0x2045)), alias: "TargetLabel", vr: SH },
    E { tag: Single(Tag(0x0018, 0x2046)), alias: "DisplayedZValue", vr: FL },
    E { tag: Single(Tag(0x0018, 0x3100)), alias: "IVUSAcquisition", vr: CS },
    E { tag: Single(Tag(0x0018, 0x3101)), alias: "IVUSPullbackRate", vr: DS },
    E { tag: Single(Tag(0x0018, 0x3102)), alias: "IVUSGatedRate", vr: DS },
    E { tag: Single(Tag(0x0018, 0x3103)), alias: "IVUSPullbackStartFrameNumber", vr: IS },
    E { tag: Single(Tag(0x0018, 0x3104)), alias: "IVUSPullbackStopFrameNumber", vr: IS },
    E { tag: Single(Tag(0x0018, 0x3105)), alias: "LesionNumber", vr: IS },
    E { tag: Single(Tag(0x0018, 0x4000)), alias: "AcquisitionComments", vr: LT }, // RET
    E { tag: Single(Tag(0x0018, 0x5000)), alias: "OutputPower", vr: SH },
    E { tag: Single(Tag(0x0018, 0x5010)), alias: "TransducerData", vr: LO },
    E { tag: Single(Tag(0x0018, 0x5012)), alias: "FocusDepth", vr: DS },
    E { tag: Single(Tag(0x0018, 0x5020)), alias: "ProcessingFunction", vr: LO },
    E { tag: Single(Tag(0x0018, 0x5021)), alias: "PostprocessingFunction", vr: LO }, // RET (2007)
    E { tag: Single(Tag(0x0018, 0x5022)), alias: "MechanicalIndex", vr: DS },
    E { tag: Single(Tag(0x0018, 0x5024)), alias: "BoneThermalIndex", vr: DS },
    E { tag: Single(Tag(0x0018, 0x5026)), alias: "CranialThermalIndex", vr: DS },
    E { tag: Single(Tag(0x0018, 0x5027)), alias: "SoftTissueThermalIndex", vr: DS },
    E { tag: Single(Tag(0x0018, 0x5028)), alias: "SoftTissueFocusThermalIndex", vr: DS },
    E { tag: Single(Tag(0x0018, 0x5029)), alias: "SoftTissueSurfaceThermalIndex", vr: DS },
    E { tag: Single(Tag(0x0018, 0x5030)), alias: "DynamicRange", vr: DS }, // RET
    E { tag: Single(Tag(0x0018, 0x5040)), alias: "TotalGain", vr: DS }, // RET
    E { tag: Single(Tag(0x0018, 0x5050)), alias: "DepthOfScanField", vr: IS },
    E { tag: Single(Tag(0x0018, 0x5100)), alias: "PatientPosition", vr: CS },
    E { tag: Single(Tag(0x0018, 0x5101)), alias: "ViewPosition", vr: CS },
    E { tag: Single(Tag(0x0018, 0x5104)), alias: "ProjectionEponymousNameCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x5210)), alias: "ImageTransformationMatrix", vr: DS }, // RET (2003)
    E { tag: Single(Tag(0x0018, 0x5212)), alias: "ImageTranslationVector", vr: DS }, // RET (2003)
    E { tag: Single(Tag(0x0018, 0x6000)), alias: "Sensitivity", vr: DS },
    E { tag: Single(Tag(0x0018, 0x6011)), alias: "SequenceOfUltrasoundRegions", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x6012)), alias: "RegionSpatialFormat", vr: US },
    E { tag: Single(Tag(0x0018, 0x6014)), alias: "RegionDataType", vr: US },
    E { tag: Single(Tag(0x0018, 0x6016)), alias: "RegionFlags", vr: UL },
    E { tag: Single(Tag(0x0018, 0x6018)), alias: "RegionLocationMinX0", vr: UL },
    E { tag: Single(Tag(0x0018, 0x601A)), alias: "RegionLocationMinY0", vr: UL },
    E { tag: Single(Tag(0x0018, 0x601C)), alias: "RegionLocationMaxX1", vr: UL },
    E { tag: Single(Tag(0x0018, 0x601E)), alias: "RegionLocationMaxY1", vr: UL },
    E { tag: Single(Tag(0x0018, 0x6020)), alias: "ReferencePixelX0", vr: SL },
    E { tag: Single(Tag(0x0018, 0x6022)), alias: "ReferencePixelY0", vr: SL },
    E { tag: Single(Tag(0x0018, 0x6024)), alias: "PhysicalUnitsXDirection", vr: US },
    E { tag: Single(Tag(0x0018, 0x6026)), alias: "PhysicalUnitsYDirection", vr: US },
    E { tag: Single(Tag(0x0018, 0x6028)), alias: "ReferencePixelPhysicalValueX", vr: FD },
    E { tag: Single(Tag(0x0018, 0x602A)), alias: "ReferencePixelPhysicalValueY", vr: FD },
    E { tag: Single(Tag(0x0018, 0x602C)), alias: "PhysicalDeltaX", vr: FD },
    E { tag: Single(Tag(0x0018, 0x602E)), alias: "PhysicalDeltaY", vr: FD },
    E { tag: Single(Tag(0x0018, 0x6030)), alias: "TransducerFrequency", vr: UL },
    E { tag: Single(Tag(0x0018, 0x6031)), alias: "TransducerType", vr: CS },
    E { tag: Single(Tag(0x0018, 0x6032)), alias: "PulseRepetitionFrequency", vr: UL },
    E { tag: Single(Tag(0x0018, 0x6034)), alias: "DopplerCorrectionAngle", vr: FD },
    E { tag: Single(Tag(0x0018, 0x6036)), alias: "SteeringAngle", vr: FD },
    E { tag: Single(Tag(0x0018, 0x6038)), alias: "DopplerSampleVolumeXPositionRetired", vr: UL }, // RET (2001)
    E { tag: Single(Tag(0x0018, 0x6039)), alias: "DopplerSampleVolumeXPosition", vr: SL },
    E { tag: Single(Tag(0x0018, 0x603A)), alias: "DopplerSampleVolumeYPositionRetired", vr: UL }, // RET (2001)
    E { tag: Single(Tag(0x0018, 0x603B)), alias: "DopplerSampleVolumeYPosition", vr: SL },
    E { tag: Single(Tag(0x0018, 0x603C)), alias: "TMLinePositionX0Retired", vr: UL }, // RET (2001)
    E { tag: Single(Tag(0x0018, 0x603D)), alias: "TMLinePositionX0", vr: SL },
    E { tag: Single(Tag(0x0018, 0x603E)), alias: "TMLinePositionY0Retired", vr: UL }, // RET (2001)
    E { tag: Single(Tag(0x0018, 0x603F)), alias: "TMLinePositionY0", vr: SL },
    E { tag: Single(Tag(0x0018, 0x6040)), alias: "TMLinePositionX1Retired", vr: UL }, // RET (2001)
    E { tag: Single(Tag(0x0018, 0x6041)), alias: "TMLinePositionX1", vr: SL },
    E { tag: Single(Tag(0x0018, 0x6042)), alias: "TMLinePositionY1Retired", vr: UL }, // RET (2001)
    E { tag: Single(Tag(0x0018, 0x6043)), alias: "TMLinePositionY1", vr: SL },
    E { tag: Single(Tag(0x0018, 0x6044)), alias: "PixelComponentOrganization", vr: US },
    E { tag: Single(Tag(0x0018, 0x6046)), alias: "PixelComponentMask", vr: UL },
    E { tag: Single(Tag(0x0018, 0x6048)), alias: "PixelComponentRangeStart", vr: UL },
    E { tag: Single(Tag(0x0018, 0x604A)), alias: "PixelComponentRangeStop", vr: UL },
    E { tag: Single(Tag(0x0018, 0x604C)), alias: "PixelComponentPhysicalUnits", vr: US },
    E { tag: Single(Tag(0x0018, 0x604E)), alias: "PixelComponentDataType", vr: US },
    E { tag: Single(Tag(0x0018, 0x6050)), alias: "NumberOfTableBreakPoints", vr: UL },
    E { tag: Single(Tag(0x0018, 0x6052)), alias: "TableOfXBreakPoints", vr: UL },
    E { tag: Single(Tag(0x0018, 0x6054)), alias: "TableOfYBreakPoints", vr: FD },
    E { tag: Single(Tag(0x0018, 0x6056)), alias: "NumberOfTableEntries", vr: UL },
    E { tag: Single(Tag(0x0018, 0x6058)), alias: "TableOfPixelValues", vr: UL },
    E { tag: Single(Tag(0x0018, 0x605A)), alias: "TableOfParameterValues", vr: FL },
    E { tag: Single(Tag(0x0018, 0x6060)), alias: "RWaveTimeVector", vr: FL },
    E { tag: Single(Tag(0x0018, 0x7000)), alias: "DetectorConditionsNominalFlag", vr: CS },
    E { tag: Single(Tag(0x0018, 0x7001)), alias: "DetectorTemperature", vr: DS },
    E { tag: Single(Tag(0x0018, 0x7004)), alias: "DetectorType", vr: CS },
    E { tag: Single(Tag(0x0018, 0x7005)), alias: "DetectorConfiguration", vr: CS },
    E { tag: Single(Tag(0x0018, 0x7006)), alias: "DetectorDescription", vr: LT },
    E { tag: Single(Tag(0x0018, 0x7008)), alias: "DetectorMode", vr: LT },
    E { tag: Single(Tag(0x0018, 0x700A)), alias: "DetectorID", vr: SH },
    E { tag: Single(Tag(0x0018, 0x700C)), alias: "DateOfLastDetectorCalibration", vr: DA },
    E { tag: Single(Tag(0x0018, 0x700E)), alias: "TimeOfLastDetectorCalibration", vr: TM },
    E { tag: Single(Tag(0x0018, 0x7010)), alias: "ExposuresOnDetectorSinceLastCalibration", vr: IS },
    E { tag: Single(Tag(0x0018, 0x7011)), alias: "ExposuresOnDetectorSinceManufactured", vr: IS },
    E { tag: Single(Tag(0x0018, 0x7012)), alias: "DetectorTimeSinceLastExposure", vr: DS },
    E { tag: Single(Tag(0x0018, 0x7014)), alias: "DetectorActiveTime", vr: DS },
    E { tag: Single(Tag(0x0018, 0x7016)), alias: "DetectorActivationOffsetFromExposure", vr: DS },
    E { tag: Single(Tag(0x0018, 0x701A)), alias: "DetectorBinning", vr: DS },
    E { tag: Single(Tag(0x0018, 0x7020)), alias: "DetectorElementPhysicalSize", vr: DS },
    E { tag: Single(Tag(0x0018, 0x7022)), alias: "DetectorElementSpacing", vr: DS },
    E { tag: Single(Tag(0x0018, 0x7024)), alias: "DetectorActiveShape", vr: CS },
    E { tag: Single(Tag(0x0018, 0x7026)), alias: "DetectorActiveDimensions", vr: DS },
    E { tag: Single(Tag(0x0018, 0x7028)), alias: "DetectorActiveOrigin", vr: DS },
    E { tag: Single(Tag(0x0018, 0x702A)), alias: "DetectorManufacturerName", vr: LO },
    E { tag: Single(Tag(0x0018, 0x702B)), alias: "DetectorManufacturerModelName", vr: LO },
    E { tag: Single(Tag(0x0018, 0x7030)), alias: "FieldOfViewOrigin", vr: DS },
    E { tag: Single(Tag(0x0018, 0x7032)), alias: "FieldOfViewRotation", vr: DS },
    E { tag: Single(Tag(0x0018, 0x7034)), alias: "FieldOfViewHorizontalFlip", vr: CS },
    E { tag: Single(Tag(0x0018, 0x7036)), alias: "PixelDataAreaOriginRelativeToFOV", vr: FL },
    E { tag: Single(Tag(0x0018, 0x7038)), alias: "PixelDataAreaRotationAngleRelativeToFOV", vr: FL },
    E { tag: Single(Tag(0x0018, 0x7040)), alias: "GridAbsorbingMaterial", vr: LT },
    E { tag: Single(Tag(0x0018, 0x7041)), alias: "GridSpacingMaterial", vr: LT },
    E { tag: Single(Tag(0x0018, 0x7042)), alias: "GridThickness", vr: DS },
    E { tag: Single(Tag(0x0018, 0x7044)), alias: "GridPitch", vr: DS },
    E { tag: Single(Tag(0x0018, 0x7046)), alias: "GridAspectRatio", vr: IS },
    E { tag: Single(Tag(0x0018, 0x7048)), alias: "GridPeriod", vr: DS },
    E { tag: Single(Tag(0x0018, 0x704C)), alias: "GridFocalDistance", vr: DS },
    E { tag: Single(Tag(0x0018, 0x7050)), alias: "FilterMaterial", vr: CS },
    E { tag: Single(Tag(0x0018, 0x7052)), alias: "FilterThicknessMinimum", vr: DS },
    E { tag: Single(Tag(0x0018, 0x7054)), alias: "FilterThicknessMaximum", vr: DS },
    E { tag: Single(Tag(0x0018, 0x7056)), alias: "FilterBeamPathLengthMinimum", vr: FL },
    E { tag: Single(Tag(0x0018, 0x7058)), alias: "FilterBeamPathLengthMaximum", vr: FL },
    E { tag: Single(Tag(0x0018, 0x7060)), alias: "ExposureControlMode", vr: CS },
    E { tag: Single(Tag(0x0018, 0x7062)), alias: "ExposureControlModeDescription", vr: LT },
    E { tag: Single(Tag(0x0018, 0x7064)), alias: "ExposureStatus", vr: CS },
    E { tag: Single(Tag(0x0018, 0x7065)), alias: "PhototimerSetting", vr: DS },
    E { tag: Single(Tag(0x0018, 0x8150)), alias: "ExposureTimeInuS", vr: DS },
    E { tag: Single(Tag(0x0018, 0x8151)), alias: "XRayTubeCurrentInuA", vr: DS },
    E { tag: Single(Tag(0x0018, 0x9004)), alias: "ContentQualification", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9005)), alias: "PulseSequenceName", vr: SH },
    E { tag: Single(Tag(0x0018, 0x9006)), alias: "MRImagingModifierSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9008)), alias: "EchoPulseSequence", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9009)), alias: "InversionRecovery", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9010)), alias: "FlowCompensation", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9011)), alias: "MultipleSpinEcho", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9012)), alias: "MultiPlanarExcitation", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9014)), alias: "PhaseContrast", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9015)), alias: "TimeOfFlightContrast", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9016)), alias: "Spoiling", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9017)), alias: "SteadyStatePulseSequence", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9018)), alias: "EchoPlanarPulseSequence", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9019)), alias: "TagAngleFirstAxis", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9020)), alias: "MagnetizationTransfer", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9021)), alias: "T2Preparation", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9022)), alias: "BloodSignalNulling", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9024)), alias: "SaturationRecovery", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9025)), alias: "SpectrallySelectedSuppression", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9026)), alias: "SpectrallySelectedExcitation", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9027)), alias: "SpatialPresaturation", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9028)), alias: "Tagging", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9029)), alias: "OversamplingPhase", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9030)), alias: "TagSpacingFirstDimension", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9032)), alias: "GeometryOfKSpaceTraversal", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9033)), alias: "SegmentedKSpaceTraversal", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9034)), alias: "RectilinearPhaseEncodeReordering", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9035)), alias: "TagThickness", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9036)), alias: "PartialFourierDirection", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9037)), alias: "CardiacSynchronizationTechnique", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9041)), alias: "ReceiveCoilManufacturerName", vr: LO },
    E { tag: Single(Tag(0x0018, 0x9042)), alias: "MRReceiveCoilSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9043)), alias: "ReceiveCoilType", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9044)), alias: "QuadratureReceiveCoil", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9045)), alias: "MultiCoilDefinitionSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9046)), alias: "MultiCoilConfiguration", vr: LO },
    E { tag: Single(Tag(0x0018, 0x9047)), alias: "MultiCoilElementName", vr: SH },
    E { tag: Single(Tag(0x0018, 0x9048)), alias: "MultiCoilElementUsed", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9049)), alias: "MRTransmitCoilSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9050)), alias: "TransmitCoilManufacturerName", vr: LO },
    E { tag: Single(Tag(0x0018, 0x9051)), alias: "TransmitCoilType", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9052)), alias: "SpectralWidth", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9053)), alias: "ChemicalShiftReference", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9054)), alias: "VolumeLocalizationTechnique", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9058)), alias: "MRAcquisitionFrequencyEncodingSteps", vr: US },
    E { tag: Single(Tag(0x0018, 0x9059)), alias: "Decoupling", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9060)), alias: "DecoupledNucleus", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9061)), alias: "DecouplingFrequency", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9062)), alias: "DecouplingMethod", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9063)), alias: "DecouplingChemicalShiftReference", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9064)), alias: "KSpaceFiltering", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9065)), alias: "TimeDomainFiltering", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9066)), alias: "NumberOfZeroFills", vr: US },
    E { tag: Single(Tag(0x0018, 0x9067)), alias: "BaselineCorrection", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9069)), alias: "ParallelReductionFactorInPlane", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9070)), alias: "CardiacRRIntervalSpecified", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9073)), alias: "AcquisitionDuration", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9074)), alias: "FrameAcquisitionDateTime", vr: DT },
    E { tag: Single(Tag(0x0018, 0x9075)), alias: "DiffusionDirectionality", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9076)), alias: "DiffusionGradientDirectionSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9077)), alias: "ParallelAcquisition", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9078)), alias: "ParallelAcquisitionTechnique", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9079)), alias: "InversionTimes", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9080)), alias: "MetaboliteMapDescription", vr: ST },
    E { tag: Single(Tag(0x0018, 0x9081)), alias: "PartialFourier", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9082)), alias: "EffectiveEchoTime", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9083)), alias: "MetaboliteMapCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9084)), alias: "ChemicalShiftSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9085)), alias: "CardiacSignalSource", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9087)), alias: "DiffusionBValue", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9089)), alias: "DiffusionGradientOrientation", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9090)), alias: "VelocityEncodingDirection", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9091)), alias: "VelocityEncodingMinimumValue", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9092)), alias: "VelocityEncodingAcquisitionSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9093)), alias: "NumberOfKSpaceTrajectories", vr: US },
    E { tag: Single(Tag(0x0018, 0x9094)), alias: "CoverageOfKSpace", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9095)), alias: "SpectroscopyAcquisitionPhaseRows", vr: UL },
    E { tag: Single(Tag(0x0018, 0x9096)), alias: "ParallelReductionFactorInPlaneRetired", vr: FD }, // RET (2007)
    E { tag: Single(Tag(0x0018, 0x9098)), alias: "TransmitterFrequency", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9100)), alias: "ResonantNucleus", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9101)), alias: "FrequencyCorrection", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9103)), alias: "MRSpectroscopyFOVGeometrySequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9104)), alias: "SlabThickness", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9105)), alias: "SlabOrientation", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9106)), alias: "MidSlabPosition", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9107)), alias: "MRSpatialSaturationSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9112)), alias: "MRTimingAndRelatedParametersSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9114)), alias: "MREchoSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9115)), alias: "MRModifierSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9117)), alias: "MRDiffusionSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9118)), alias: "CardiacSynchronizationSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9119)), alias: "MRAveragesSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9125)), alias: "MRFOVGeometrySequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9126)), alias: "VolumeLocalizationSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9127)), alias: "SpectroscopyAcquisitionDataColumns", vr: UL },
    E { tag: Single(Tag(0x0018, 0x9147)), alias: "DiffusionAnisotropyType", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9151)), alias: "FrameReferenceDateTime", vr: DT },
    E { tag: Single(Tag(0x0018, 0x9152)), alias: "MRMetaboliteMapSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9155)), alias: "ParallelReductionFactorOutOfPlane", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9159)), alias: "SpectroscopyAcquisitionOutOfPlanePhaseSteps", vr: UL },
    E { tag: Single(Tag(0x0018, 0x9166)), alias: "BulkMotionStatus", vr: CS }, // RET (2007)
    E { tag: Single(Tag(0x0018, 0x9168)), alias: "ParallelReductionFactorSecondInPlane", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9169)), alias: "CardiacBeatRejectionTechnique", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9170)), alias: "RespiratoryMotionCompensationTechnique", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9171)), alias: "RespiratorySignalSource", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9172)), alias: "BulkMotionCompensationTechnique", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9173)), alias: "BulkMotionSignalSource", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9174)), alias: "ApplicableSafetyStandardAgency", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9175)), alias: "ApplicableSafetyStandardDescription", vr: LO },
    E { tag: Single(Tag(0x0018, 0x9176)), alias: "OperatingModeSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9177)), alias: "OperatingModeType", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9178)), alias: "OperatingMode", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9179)), alias: "SpecificAbsorptionRateDefinition", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9180)), alias: "GradientOutputType", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9181)), alias: "SpecificAbsorptionRateValue", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9182)), alias: "GradientOutput", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9183)), alias: "FlowCompensationDirection", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9184)), alias: "TaggingDelay", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9185)), alias: "RespiratoryMotionCompensationTechniqueDescription", vr: ST },
    E { tag: Single(Tag(0x0018, 0x9186)), alias: "RespiratorySignalSourceID", vr: SH },
    E { tag: Single(Tag(0x0018, 0x9195)), alias: "ChemicalShiftMinimumIntegrationLimitInHz", vr: FD }, // RET (2003)
    E { tag: Single(Tag(0x0018, 0x9196)), alias: "ChemicalShiftMaximumIntegrationLimitInHz", vr: FD }, // RET (2003)
    E { tag: Single(Tag(0x0018, 0x9197)), alias: "MRVelocityEncodingSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9198)), alias: "FirstOrderPhaseCorrection", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9199)), alias: "WaterReferencedPhaseCorrection", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9200)), alias: "MRSpectroscopyAcquisitionType", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9214)), alias: "RespiratoryCyclePosition", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9217)), alias: "VelocityEncodingMaximumValue", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9218)), alias: "TagSpacingSecondDimension", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9219)), alias: "TagAngleSecondAxis", vr: SS },
    E { tag: Single(Tag(0x0018, 0x9220)), alias: "FrameAcquisitionDuration", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9226)), alias: "MRImageFrameTypeSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9227)), alias: "MRSpectroscopyFrameTypeSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9231)), alias: "MRAcquisitionPhaseEncodingStepsInPlane", vr: US },
    E { tag: Single(Tag(0x0018, 0x9232)), alias: "MRAcquisitionPhaseEncodingStepsOutOfPlane", vr: US },
    E { tag: Single(Tag(0x0018, 0x9234)), alias: "SpectroscopyAcquisitionPhaseColumns", vr: UL },
    E { tag: Single(Tag(0x0018, 0x9236)), alias: "CardiacCyclePosition", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9239)), alias: "SpecificAbsorptionRateSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9240)), alias: "RFEchoTrainLength", vr: US },
    E { tag: Single(Tag(0x0018, 0x9241)), alias: "GradientEchoTrainLength", vr: US },
    E { tag: Single(Tag(0x0018, 0x9250)), alias: "ArterialSpinLabelingContrast", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9251)), alias: "MRArterialSpinLabelingSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9252)), alias: "ASLTechniqueDescription", vr: LO },
    E { tag: Single(Tag(0x0018, 0x9253)), alias: "ASLSlabNumber", vr: US },
    E { tag: Single(Tag(0x0018, 0x9254)), alias: "ASLSlabThickness", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9255)), alias: "ASLSlabOrientation", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9256)), alias: "ASLMidSlabPosition", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9257)), alias: "ASLContext", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9258)), alias: "ASLPulseTrainDuration", vr: UL },
    E { tag: Single(Tag(0x0018, 0x9259)), alias: "ASLCrusherFlag", vr: CS },
    E { tag: Single(Tag(0x0018, 0x925A)), alias: "ASLCrusherFlowLimit", vr: FD },
    E { tag: Single(Tag(0x0018, 0x925B)), alias: "ASLCrusherDescription", vr: LO },
    E { tag: Single(Tag(0x0018, 0x925C)), alias: "ASLBolusCutoffFlag", vr: CS },
    E { tag: Single(Tag(0x0018, 0x925D)), alias: "ASLBolusCutoffTimingSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x925E)), alias: "ASLBolusCutoffTechnique", vr: LO },
    E { tag: Single(Tag(0x0018, 0x925F)), alias: "ASLBolusCutoffDelayTime", vr: UL },
    E { tag: Single(Tag(0x0018, 0x9260)), alias: "ASLSlabSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9295)), alias: "ChemicalShiftMinimumIntegrationLimitInppm", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9296)), alias: "ChemicalShiftMaximumIntegrationLimitInppm", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9297)), alias: "WaterReferenceAcquisition", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9298)), alias: "EchoPeakPosition", vr: IS },
    E { tag: Single(Tag(0x0018, 0x9301)), alias: "CTAcquisitionTypeSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9302)), alias: "AcquisitionType", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9303)), alias: "TubeAngle", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9304)), alias: "CTAcquisitionDetailsSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9305)), alias: "RevolutionTime", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9306)), alias: "SingleCollimationWidth", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9307)), alias: "TotalCollimationWidth", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9308)), alias: "CTTableDynamicsSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9309)), alias: "TableSpeed", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9310)), alias: "TableFeedPerRotation", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9311)), alias: "SpiralPitchFactor", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9312)), alias: "CTGeometrySequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9313)), alias: "DataCollectionCenterPatient", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9314)), alias: "CTReconstructionSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9315)), alias: "ReconstructionAlgorithm", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9316)), alias: "ConvolutionKernelGroup", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9317)), alias: "ReconstructionFieldOfView", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9318)), alias: "ReconstructionTargetCenterPatient", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9319)), alias: "ReconstructionAngle", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9320)), alias: "ImageFilter", vr: SH },
    E { tag: Single(Tag(0x0018, 0x9321)), alias: "CTExposureSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9322)), alias: "ReconstructionPixelSpacing", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9323)), alias: "ExposureModulationType", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9324)), alias: "EstimatedDoseSaving", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9325)), alias: "CTXRayDetailsSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9326)), alias: "CTPositionSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9327)), alias: "TablePosition", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9328)), alias: "ExposureTimeInms", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9329)), alias: "CTImageFrameTypeSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9330)), alias: "XRayTubeCurrentInmA", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9332)), alias: "ExposureInmAs", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9333)), alias: "ConstantVolumeFlag", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9334)), alias: "FluoroscopyFlag", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9335)), alias: "DistanceSourceToDataCollectionCenter", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9337)), alias: "ContrastBolusAgentNumber", vr: US },
    E { tag: Single(Tag(0x0018, 0x9338)), alias: "ContrastBolusIngredientCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9340)), alias: "ContrastAdministrationProfileSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9341)), alias: "ContrastBolusUsageSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9342)), alias: "ContrastBolusAgentAdministered", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9343)), alias: "ContrastBolusAgentDetected", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9344)), alias: "ContrastBolusAgentPhase", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9345)), alias: "CTDIvol", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9346)), alias: "CTDIPhantomTypeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9351)), alias: "CalciumScoringMassFactorPatient", vr: FL },
    E { tag: Single(Tag(0x0018, 0x9352)), alias: "CalciumScoringMassFactorDevice", vr: FL },
    E { tag: Single(Tag(0x0018, 0x9353)), alias: "EnergyWeightingFactor", vr: FL },
    E { tag: Single(Tag(0x0018, 0x9360)), alias: "CTAdditionalXRaySourceSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9361)), alias: "MultienergyCTAcquisition", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9362)), alias: "MultienergyCTAcquisitionSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9363)), alias: "MultienergyCTProcessingSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9364)), alias: "MultienergyCTCharacteristicsSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9365)), alias: "MultienergyCTXRaySourceSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9366)), alias: "XRaySourceIndex", vr: US },
    E { tag: Single(Tag(0x0018, 0x9367)), alias: "XRaySourceID", vr: UC },
    E { tag: Single(Tag(0x0018, 0x9368)), alias: "MultienergySourceTechnique", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9369)), alias: "SourceStartDateTime", vr: DT },
    E { tag: Single(Tag(0x0018, 0x936A)), alias: "SourceEndDateTime", vr: DT },
    E { tag: Single(Tag(0x0018, 0x936B)), alias: "SwitchingPhaseNumber", vr: US },
    E { tag: Single(Tag(0x0018, 0x936C)), alias: "SwitchingPhaseNominalDuration", vr: DS },
    E { tag: Single(Tag(0x0018, 0x936D)), alias: "SwitchingPhaseTransitionDuration", vr: DS },
    E { tag: Single(Tag(0x0018, 0x936E)), alias: "EffectiveBinEnergy", vr: DS },
    E { tag: Single(Tag(0x0018, 0x936F)), alias: "MultienergyCTXRayDetectorSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9370)), alias: "XRayDetectorIndex", vr: US },
    E { tag: Single(Tag(0x0018, 0x9371)), alias: "XRayDetectorID", vr: UC },
    E { tag: Single(Tag(0x0018, 0x9372)), alias: "MultienergyDetectorType", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9373)), alias: "XRayDetectorLabel", vr: ST },
    E { tag: Single(Tag(0x0018, 0x9374)), alias: "NominalMaxEnergy", vr: DS },
    E { tag: Single(Tag(0x0018, 0x9375)), alias: "NominalMinEnergy", vr: DS },
    E { tag: Single(Tag(0x0018, 0x9376)), alias: "ReferencedXRayDetectorIndex", vr: US },
    E { tag: Single(Tag(0x0018, 0x9377)), alias: "ReferencedXRaySourceIndex", vr: US },
    E { tag: Single(Tag(0x0018, 0x9378)), alias: "ReferencedPathIndex", vr: US },
    E { tag: Single(Tag(0x0018, 0x9379)), alias: "MultienergyCTPathSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x937A)), alias: "MultienergyCTPathIndex", vr: US },
    E { tag: Single(Tag(0x0018, 0x937B)), alias: "MultienergyAcquisitionDescription", vr: UT },
    E { tag: Single(Tag(0x0018, 0x937C)), alias: "MonoenergeticEnergyEquivalent", vr: FD },
    E { tag: Single(Tag(0x0018, 0x937D)), alias: "MaterialCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x937E)), alias: "DecompositionMethod", vr: CS },
    E { tag: Single(Tag(0x0018, 0x937F)), alias: "DecompositionDescription", vr: UT },
    E { tag: Single(Tag(0x0018, 0x9380)), alias: "DecompositionAlgorithmIdentificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9381)), alias: "DecompositionMaterialSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9382)), alias: "MaterialAttenuationSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9383)), alias: "PhotonEnergy", vr: DS },
    E { tag: Single(Tag(0x0018, 0x9384)), alias: "XRayMassAttenuationCoefficient", vr: DS },
    E { tag: Single(Tag(0x0018, 0x9401)), alias: "ProjectionPixelCalibrationSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9402)), alias: "DistanceSourceToIsocenter", vr: FL },
    E { tag: Single(Tag(0x0018, 0x9403)), alias: "DistanceObjectToTableTop", vr: FL },
    E { tag: Single(Tag(0x0018, 0x9404)), alias: "ObjectPixelSpacingInCenterOfBeam", vr: FL },
    E { tag: Single(Tag(0x0018, 0x9405)), alias: "PositionerPositionSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9406)), alias: "TablePositionSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9407)), alias: "CollimatorShapeSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9410)), alias: "PlanesInAcquisition", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9412)), alias: "XAXRFFrameCharacteristicsSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9417)), alias: "FrameAcquisitionSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9420)), alias: "XRayReceptorType", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9423)), alias: "AcquisitionProtocolName", vr: LO },
    E { tag: Single(Tag(0x0018, 0x9424)), alias: "AcquisitionProtocolDescription", vr: LT },
    E { tag: Single(Tag(0x0018, 0x9425)), alias: "ContrastBolusIngredientOpaque", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9426)), alias: "DistanceReceptorPlaneToDetectorHousing", vr: FL },
    E { tag: Single(Tag(0x0018, 0x9427)), alias: "IntensifierActiveShape", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9428)), alias: "IntensifierActiveDimensions", vr: FL },
    E { tag: Single(Tag(0x0018, 0x9429)), alias: "PhysicalDetectorSize", vr: FL },
    E { tag: Single(Tag(0x0018, 0x9430)), alias: "PositionOfIsocenterProjection", vr: FL },
    E { tag: Single(Tag(0x0018, 0x9432)), alias: "FieldOfViewSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9433)), alias: "FieldOfViewDescription", vr: LO },
    E { tag: Single(Tag(0x0018, 0x9434)), alias: "ExposureControlSensingRegionsSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9435)), alias: "ExposureControlSensingRegionShape", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9436)), alias: "ExposureControlSensingRegionLeftVerticalEdge", vr: SS },
    E { tag: Single(Tag(0x0018, 0x9437)), alias: "ExposureControlSensingRegionRightVerticalEdge", vr: SS },
    E { tag: Single(Tag(0x0018, 0x9438)), alias: "ExposureControlSensingRegionUpperHorizontalEdge", vr: SS },
    E { tag: Single(Tag(0x0018, 0x9439)), alias: "ExposureControlSensingRegionLowerHorizontalEdge", vr: SS },
    E { tag: Single(Tag(0x0018, 0x9440)), alias: "CenterOfCircularExposureControlSensingRegion", vr: SS },
    E { tag: Single(Tag(0x0018, 0x9441)), alias: "RadiusOfCircularExposureControlSensingRegion", vr: US },
    E { tag: Single(Tag(0x0018, 0x9442)), alias: "VerticesOfThePolygonalExposureControlSensingRegion", vr: SS },
    E { tag: Single(Tag(0x0018, 0x9447)), alias: "ColumnAngulationPatient", vr: FL },
    E { tag: Single(Tag(0x0018, 0x9449)), alias: "BeamAngle", vr: FL },
    E { tag: Single(Tag(0x0018, 0x9451)), alias: "FrameDetectorParametersSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9452)), alias: "CalculatedAnatomyThickness", vr: FL },
    E { tag: Single(Tag(0x0018, 0x9455)), alias: "CalibrationSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9456)), alias: "ObjectThicknessSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9457)), alias: "PlaneIdentification", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9461)), alias: "FieldOfViewDimensionsInFloat", vr: FL },
    E { tag: Single(Tag(0x0018, 0x9462)), alias: "IsocenterReferenceSystemSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9463)), alias: "PositionerIsocenterPrimaryAngle", vr: FL },
    E { tag: Single(Tag(0x0018, 0x9464)), alias: "PositionerIsocenterSecondaryAngle", vr: FL },
    E { tag: Single(Tag(0x0018, 0x9465)), alias: "PositionerIsocenterDetectorRotationAngle", vr: FL },
    E { tag: Single(Tag(0x0018, 0x9466)), alias: "TableXPositionToIsocenter", vr: FL },
    E { tag: Single(Tag(0x0018, 0x9467)), alias: "TableYPositionToIsocenter", vr: FL },
    E { tag: Single(Tag(0x0018, 0x9468)), alias: "TableZPositionToIsocenter", vr: FL },
    E { tag: Single(Tag(0x0018, 0x9469)), alias: "TableHorizontalRotationAngle", vr: FL },
    E { tag: Single(Tag(0x0018, 0x9470)), alias: "TableHeadTiltAngle", vr: FL },
    E { tag: Single(Tag(0x0018, 0x9471)), alias: "TableCradleTiltAngle", vr: FL },
    E { tag: Single(Tag(0x0018, 0x9472)), alias: "FrameDisplayShutterSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9473)), alias: "AcquiredImageAreaDoseProduct", vr: FL },
    E { tag: Single(Tag(0x0018, 0x9474)), alias: "CArmPositionerTabletopRelationship", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9476)), alias: "XRayGeometrySequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9477)), alias: "IrradiationEventIdentificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9504)), alias: "XRay3DFrameTypeSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9506)), alias: "ContributingSourcesSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9507)), alias: "XRay3DAcquisitionSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9508)), alias: "PrimaryPositionerScanArc", vr: FL },
    E { tag: Single(Tag(0x0018, 0x9509)), alias: "SecondaryPositionerScanArc", vr: FL },
    E { tag: Single(Tag(0x0018, 0x9510)), alias: "PrimaryPositionerScanStartAngle", vr: FL },
    E { tag: Single(Tag(0x0018, 0x9511)), alias: "SecondaryPositionerScanStartAngle", vr: FL },
    E { tag: Single(Tag(0x0018, 0x9514)), alias: "PrimaryPositionerIncrement", vr: FL },
    E { tag: Single(Tag(0x0018, 0x9515)), alias: "SecondaryPositionerIncrement", vr: FL },
    E { tag: Single(Tag(0x0018, 0x9516)), alias: "StartAcquisitionDateTime", vr: DT },
    E { tag: Single(Tag(0x0018, 0x9517)), alias: "EndAcquisitionDateTime", vr: DT },
    E { tag: Single(Tag(0x0018, 0x9518)), alias: "PrimaryPositionerIncrementSign", vr: SS },
    E { tag: Single(Tag(0x0018, 0x9519)), alias: "SecondaryPositionerIncrementSign", vr: SS },
    E { tag: Single(Tag(0x0018, 0x9524)), alias: "ApplicationName", vr: LO },
    E { tag: Single(Tag(0x0018, 0x9525)), alias: "ApplicationVersion", vr: LO },
    E { tag: Single(Tag(0x0018, 0x9526)), alias: "ApplicationManufacturer", vr: LO },
    E { tag: Single(Tag(0x0018, 0x9527)), alias: "AlgorithmType", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9528)), alias: "AlgorithmDescription", vr: LO },
    E { tag: Single(Tag(0x0018, 0x9530)), alias: "XRay3DReconstructionSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9531)), alias: "ReconstructionDescription", vr: LO },
    E { tag: Single(Tag(0x0018, 0x9538)), alias: "PerProjectionAcquisitionSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9541)), alias: "DetectorPositionSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9542)), alias: "XRayAcquisitionDoseSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9543)), alias: "XRaySourceIsocenterPrimaryAngle", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9544)), alias: "XRaySourceIsocenterSecondaryAngle", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9545)), alias: "BreastSupportIsocenterPrimaryAngle", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9546)), alias: "BreastSupportIsocenterSecondaryAngle", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9547)), alias: "BreastSupportXPositionToIsocenter", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9548)), alias: "BreastSupportYPositionToIsocenter", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9549)), alias: "BreastSupportZPositionToIsocenter", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9550)), alias: "DetectorIsocenterPrimaryAngle", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9551)), alias: "DetectorIsocenterSecondaryAngle", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9552)), alias: "DetectorXPositionToIsocenter", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9553)), alias: "DetectorYPositionToIsocenter", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9554)), alias: "DetectorZPositionToIsocenter", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9555)), alias: "XRayGridSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9556)), alias: "XRayFilterSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9557)), alias: "DetectorActiveAreaTLHCPosition", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9558)), alias: "DetectorActiveAreaOrientation", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9559)), alias: "PositionerPrimaryAngleDirection", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9601)), alias: "DiffusionBMatrixSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9602)), alias: "DiffusionBValueXX", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9603)), alias: "DiffusionBValueXY", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9604)), alias: "DiffusionBValueXZ", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9605)), alias: "DiffusionBValueYY", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9606)), alias: "DiffusionBValueYZ", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9607)), alias: "DiffusionBValueZZ", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9621)), alias: "FunctionalMRSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9622)), alias: "FunctionalSettlingPhaseFramesPresent", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9623)), alias: "FunctionalSyncPulse", vr: DT },
    E { tag: Single(Tag(0x0018, 0x9624)), alias: "SettlingPhaseFrame", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9701)), alias: "DecayCorrectionDateTime", vr: DT },
    E { tag: Single(Tag(0x0018, 0x9715)), alias: "StartDensityThreshold", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9716)), alias: "StartRelativeDensityDifferenceThreshold", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9717)), alias: "StartCardiacTriggerCountThreshold", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9718)), alias: "StartRespiratoryTriggerCountThreshold", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9719)), alias: "TerminationCountsThreshold", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9720)), alias: "TerminationDensityThreshold", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9721)), alias: "TerminationRelativeDensityThreshold", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9722)), alias: "TerminationTimeThreshold", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9723)), alias: "TerminationCardiacTriggerCountThreshold", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9724)), alias: "TerminationRespiratoryTriggerCountThreshold", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9725)), alias: "DetectorGeometry", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9726)), alias: "TransverseDetectorSeparation", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9727)), alias: "AxialDetectorDimension", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9729)), alias: "RadiopharmaceuticalAgentNumber", vr: US },
    E { tag: Single(Tag(0x0018, 0x9732)), alias: "PETFrameAcquisitionSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9733)), alias: "PETDetectorMotionDetailsSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9734)), alias: "PETTableDynamicsSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9735)), alias: "PETPositionSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9736)), alias: "PETFrameCorrectionFactorsSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9737)), alias: "RadiopharmaceuticalUsageSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9738)), alias: "AttenuationCorrectionSource", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9739)), alias: "NumberOfIterations", vr: US },
    E { tag: Single(Tag(0x0018, 0x9740)), alias: "NumberOfSubsets", vr: US },
    E { tag: Single(Tag(0x0018, 0x9749)), alias: "PETReconstructionSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9751)), alias: "PETFrameTypeSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9755)), alias: "TimeOfFlightInformationUsed", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9756)), alias: "ReconstructionType", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9758)), alias: "DecayCorrected", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9759)), alias: "AttenuationCorrected", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9760)), alias: "ScatterCorrected", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9761)), alias: "DeadTimeCorrected", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9762)), alias: "GantryMotionCorrected", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9763)), alias: "PatientMotionCorrected", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9764)), alias: "CountLossNormalizationCorrected", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9765)), alias: "RandomsCorrected", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9766)), alias: "NonUniformRadialSamplingCorrected", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9767)), alias: "SensitivityCalibrated", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9768)), alias: "DetectorNormalizationCorrection", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9769)), alias: "IterativeReconstructionMethod", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9770)), alias: "AttenuationCorrectionTemporalRelationship", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9771)), alias: "PatientPhysiologicalStateSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9772)), alias: "PatientPhysiologicalStateCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9801)), alias: "DepthsOfFocus", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9803)), alias: "ExcludedIntervalsSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9804)), alias: "ExclusionStartDateTime", vr: DT },
    E { tag: Single(Tag(0x0018, 0x9805)), alias: "ExclusionDuration", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9806)), alias: "USImageDescriptionSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9807)), alias: "ImageDataTypeSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9808)), alias: "DataType", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9809)), alias: "TransducerScanPatternCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x980B)), alias: "AliasedDataType", vr: CS },
    E { tag: Single(Tag(0x0018, 0x980C)), alias: "PositionMeasuringDeviceUsed", vr: CS },
    E { tag: Single(Tag(0x0018, 0x980D)), alias: "TransducerGeometryCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x980E)), alias: "TransducerBeamSteeringCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x980F)), alias: "TransducerApplicationCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9810)), alias: "ZeroVelocityPixelValue", vr: US /* or SS */ },
    E { tag: Single(Tag(0x0018, 0x9900)), alias: "ReferenceLocationLabel", vr: LO },
    E { tag: Single(Tag(0x0018, 0x9901)), alias: "ReferenceLocationDescription", vr: UT },
    E { tag: Single(Tag(0x0018, 0x9902)), alias: "ReferenceBasisCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9903)), alias: "ReferenceGeometryCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9904)), alias: "OffsetDistance", vr: DS },
    E { tag: Single(Tag(0x0018, 0x9905)), alias: "OffsetDirection", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9906)), alias: "PotentialScheduledProtocolCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9907)), alias: "PotentialRequestedProcedureCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9908)), alias: "PotentialReasonsForProcedure", vr: UC },
    E { tag: Single(Tag(0x0018, 0x9909)), alias: "PotentialReasonsForProcedureCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x990A)), alias: "PotentialDiagnosticTasks", vr: UC },
    E { tag: Single(Tag(0x0018, 0x990B)), alias: "ContraindicationsCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x990C)), alias: "ReferencedDefinedProtocolSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x990D)), alias: "ReferencedPerformedProtocolSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x990E)), alias: "PredecessorProtocolSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x990F)), alias: "ProtocolPlanningInformation", vr: UT },
    E { tag: Single(Tag(0x0018, 0x9910)), alias: "ProtocolDesignRationale", vr: UT },
    E { tag: Single(Tag(0x0018, 0x9911)), alias: "PatientSpecificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9912)), alias: "ModelSpecificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9913)), alias: "ParametersSpecificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9914)), alias: "InstructionSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9915)), alias: "InstructionIndex", vr: US },
    E { tag: Single(Tag(0x0018, 0x9916)), alias: "InstructionText", vr: LO },
    E { tag: Single(Tag(0x0018, 0x9917)), alias: "InstructionDescription", vr: UT },
    E { tag: Single(Tag(0x0018, 0x9918)), alias: "InstructionPerformedFlag", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9919)), alias: "InstructionPerformedDateTime", vr: DT },
    E { tag: Single(Tag(0x0018, 0x991A)), alias: "InstructionPerformanceComment", vr: UT },
    E { tag: Single(Tag(0x0018, 0x991B)), alias: "PatientPositioningInstructionSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x991C)), alias: "PositioningMethodCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x991D)), alias: "PositioningLandmarkSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x991E)), alias: "TargetFrameOfReferenceUID", vr: UI },
    E { tag: Single(Tag(0x0018, 0x991F)), alias: "AcquisitionProtocolElementSpecificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9920)), alias: "AcquisitionProtocolElementSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9921)), alias: "ProtocolElementNumber", vr: US },
    E { tag: Single(Tag(0x0018, 0x9922)), alias: "ProtocolElementName", vr: LO },
    E { tag: Single(Tag(0x0018, 0x9923)), alias: "ProtocolElementCharacteristicsSummary", vr: UT },
    E { tag: Single(Tag(0x0018, 0x9924)), alias: "ProtocolElementPurpose", vr: UT },
    E { tag: Single(Tag(0x0018, 0x9930)), alias: "AcquisitionMotion", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9931)), alias: "AcquisitionStartLocationSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9932)), alias: "AcquisitionEndLocationSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9933)), alias: "ReconstructionProtocolElementSpecificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9934)), alias: "ReconstructionProtocolElementSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9935)), alias: "StorageProtocolElementSpecificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9936)), alias: "StorageProtocolElementSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9937)), alias: "RequestedSeriesDescription", vr: LO },
    E { tag: Single(Tag(0x0018, 0x9938)), alias: "SourceAcquisitionProtocolElementNumber", vr: US },
    E { tag: Single(Tag(0x0018, 0x9939)), alias: "SourceAcquisitionBeamNumber", vr: US },
    E { tag: Single(Tag(0x0018, 0x993A)), alias: "SourceReconstructionProtocolElementNumber", vr: US },
    E { tag: Single(Tag(0x0018, 0x993B)), alias: "ReconstructionStartLocationSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x993C)), alias: "ReconstructionEndLocationSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x993D)), alias: "ReconstructionAlgorithmSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x993E)), alias: "ReconstructionTargetCenterLocationSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0x9941)), alias: "ImageFilterDescription", vr: UT },
    E { tag: Single(Tag(0x0018, 0x9942)), alias: "CTDIvolNotificationTrigger", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9943)), alias: "DLPNotificationTrigger", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9944)), alias: "AutoKVPSelectionType", vr: CS },
    E { tag: Single(Tag(0x0018, 0x9945)), alias: "AutoKVPUpperBound", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9946)), alias: "AutoKVPLowerBound", vr: FD },
    E { tag: Single(Tag(0x0018, 0x9947)), alias: "ProtocolDefinedPatientPosition", vr: CS },
    E { tag: Single(Tag(0x0018, 0xA001)), alias: "ContributingEquipmentSequence", vr: SQ },
    E { tag: Single(Tag(0x0018, 0xA002)), alias: "ContributionDateTime", vr: DT },
    E { tag: Single(Tag(0x0018, 0xA003)), alias: "ContributionDescription", vr: ST },
    E { tag: Single(Tag(0x0020, 0x000D)), alias: "StudyInstanceUID", vr: UI },
    E { tag: Single(Tag(0x0020, 0x000E)), alias: "SeriesInstanceUID", vr: UI },
    E { tag: Single(Tag(0x0020, 0x0010)), alias: "StudyID", vr: SH },
    E { tag: Single(Tag(0x0020, 0x0011)), alias: "SeriesNumber", vr: IS },
    E { tag: Single(Tag(0x0020, 0x0012)), alias: "AcquisitionNumber", vr: IS },
    E { tag: Single(Tag(0x0020, 0x0013)), alias: "InstanceNumber", vr: IS },
    E { tag: Single(Tag(0x0020, 0x0014)), alias: "IsotopeNumber", vr: IS }, // RET (1993)
    E { tag: Single(Tag(0x0020, 0x0015)), alias: "PhaseNumber", vr: IS }, // RET (1993)
    E { tag: Single(Tag(0x0020, 0x0016)), alias: "IntervalNumber", vr: IS }, // RET (1993)
    E { tag: Single(Tag(0x0020, 0x0017)), alias: "TimeSlotNumber", vr: IS }, // RET (1993)
    E { tag: Single(Tag(0x0020, 0x0018)), alias: "AngleNumber", vr: IS }, // RET (1993)
    E { tag: Single(Tag(0x0020, 0x0019)), alias: "ItemNumber", vr: IS },
    E { tag: Single(Tag(0x0020, 0x0020)), alias: "PatientOrientation", vr: CS },
    E { tag: Single(Tag(0x0020, 0x0022)), alias: "OverlayNumber", vr: IS }, // RET (2004)
    E { tag: Single(Tag(0x0020, 0x0024)), alias: "CurveNumber", vr: IS }, // RET (2004)
    E { tag: Single(Tag(0x0020, 0x0026)), alias: "LUTNumber", vr: IS }, // RET (2004)
    E { tag: Single(Tag(0x0020, 0x0030)), alias: "ImagePosition", vr: DS }, // RET
    E { tag: Single(Tag(0x0020, 0x0032)), alias: "ImagePositionPatient", vr: DS },
    E { tag: Single(Tag(0x0020, 0x0035)), alias: "ImageOrientation", vr: DS }, // RET
    E { tag: Single(Tag(0x0020, 0x0037)), alias: "ImageOrientationPatient", vr: DS },
    E { tag: Single(Tag(0x0020, 0x0050)), alias: "Location", vr: DS }, // RET
    E { tag: Single(Tag(0x0020, 0x0052)), alias: "FrameOfReferenceUID", vr: UI },
    E { tag: Single(Tag(0x0020, 0x0060)), alias: "Laterality", vr: CS },
    E { tag: Single(Tag(0x0020, 0x0062)), alias: "ImageLaterality", vr: CS },
    E { tag: Single(Tag(0x0020, 0x0070)), alias: "ImageGeometryType", vr: LO }, // RET
    E { tag: Single(Tag(0x0020, 0x0080)), alias: "MaskingImage", vr: CS }, // RET
    E { tag: Single(Tag(0x0020, 0x00AA)), alias: "ReportNumber", vr: IS }, // RET (2009)
    E { tag: Single(Tag(0x0020, 0x0100)), alias: "TemporalPositionIdentifier", vr: IS },
    E { tag: Single(Tag(0x0020, 0x0105)), alias: "NumberOfTemporalPositions", vr: IS },
    E { tag: Single(Tag(0x0020, 0x0110)), alias: "TemporalResolution", vr: DS },
    E { tag: Single(Tag(0x0020, 0x0200)), alias: "SynchronizationFrameOfReferenceUID", vr: UI },
    E { tag: Single(Tag(0x0020, 0x0242)), alias: "SOPInstanceUIDOfConcatenationSource", vr: UI },
    E { tag: Single(Tag(0x0020, 0x1000)), alias: "SeriesInStudy", vr: IS }, // RET (2004)
    E { tag: Single(Tag(0x0020, 0x1001)), alias: "AcquisitionsInSeries", vr: IS }, // RET
    E { tag: Single(Tag(0x0020, 0x1002)), alias: "ImagesInAcquisition", vr: IS },
    E { tag: Single(Tag(0x0020, 0x1003)), alias: "ImagesInSeries", vr: IS }, // RET (2006)
    E { tag: Single(Tag(0x0020, 0x1004)), alias: "AcquisitionsInStudy", vr: IS }, // RET (2004)
    E { tag: Single(Tag(0x0020, 0x1005)), alias: "ImagesInStudy", vr: IS }, // RET (2006)
    E { tag: Single(Tag(0x0020, 0x1020)), alias: "Reference", vr: LO }, // RET
    E { tag: Single(Tag(0x0020, 0x103F)), alias: "TargetPositionReferenceIndicator", vr: LO },
    E { tag: Single(Tag(0x0020, 0x1040)), alias: "PositionReferenceIndicator", vr: LO },
    E { tag: Single(Tag(0x0020, 0x1041)), alias: "SliceLocation", vr: DS },
    E { tag: Single(Tag(0x0020, 0x1070)), alias: "OtherStudyNumbers", vr: IS }, // RET (2004)
    E { tag: Single(Tag(0x0020, 0x1200)), alias: "NumberOfPatientRelatedStudies", vr: IS },
    E { tag: Single(Tag(0x0020, 0x1202)), alias: "NumberOfPatientRelatedSeries", vr: IS },
    E { tag: Single(Tag(0x0020, 0x1204)), alias: "NumberOfPatientRelatedInstances", vr: IS },
    E { tag: Single(Tag(0x0020, 0x1206)), alias: "NumberOfStudyRelatedSeries", vr: IS },
    E { tag: Single(Tag(0x0020, 0x1208)), alias: "NumberOfStudyRelatedInstances", vr: IS },
    E { tag: Single(Tag(0x0020, 0x1209)), alias: "NumberOfSeriesRelatedInstances", vr: IS },
    E { tag: Single(Tag(0x0020, 0x3401)), alias: "ModifyingDeviceID", vr: CS }, // RET
    E { tag: Single(Tag(0x0020, 0x3402)), alias: "ModifiedImageID", vr: CS }, // RET
    E { tag: Single(Tag(0x0020, 0x3403)), alias: "ModifiedImageDate", vr: DA }, // RET
    E { tag: Single(Tag(0x0020, 0x3404)), alias: "ModifyingDeviceManufacturer", vr: LO }, // RET
    E { tag: Single(Tag(0x0020, 0x3405)), alias: "ModifiedImageTime", vr: TM }, // RET
    E { tag: Single(Tag(0x0020, 0x3406)), alias: "ModifiedImageDescription", vr: LO }, // RET
    E { tag: Single(Tag(0x0020, 0x4000)), alias: "ImageComments", vr: LT },
    E { tag: Single(Tag(0x0020, 0x5000)), alias: "OriginalImageIdentification", vr: AT }, // RET
    E { tag: Single(Tag(0x0020, 0x5002)), alias: "OriginalImageIdentificationNomenclature", vr: LO }, // RET
    E { tag: Single(Tag(0x0020, 0x9056)), alias: "StackID", vr: SH },
    E { tag: Single(Tag(0x0020, 0x9057)), alias: "InStackPositionNumber", vr: UL },
    E { tag: Single(Tag(0x0020, 0x9071)), alias: "FrameAnatomySequence", vr: SQ },
    E { tag: Single(Tag(0x0020, 0x9072)), alias: "FrameLaterality", vr: CS },
    E { tag: Single(Tag(0x0020, 0x9111)), alias: "FrameContentSequence", vr: SQ },
    E { tag: Single(Tag(0x0020, 0x9113)), alias: "PlanePositionSequence", vr: SQ },
    E { tag: Single(Tag(0x0020, 0x9116)), alias: "PlaneOrientationSequence", vr: SQ },
    E { tag: Single(Tag(0x0020, 0x9128)), alias: "TemporalPositionIndex", vr: UL },
    E { tag: Single(Tag(0x0020, 0x9153)), alias: "NominalCardiacTriggerDelayTime", vr: FD },
    E { tag: Single(Tag(0x0020, 0x9154)), alias: "NominalCardiacTriggerTimePriorToRPeak", vr: FL },
    E { tag: Single(Tag(0x0020, 0x9155)), alias: "ActualCardiacTriggerTimePriorToRPeak", vr: FL },
    E { tag: Single(Tag(0x0020, 0x9156)), alias: "FrameAcquisitionNumber", vr: US },
    E { tag: Single(Tag(0x0020, 0x9157)), alias: "DimensionIndexValues", vr: UL },
    E { tag: Single(Tag(0x0020, 0x9158)), alias: "FrameComments", vr: LT },
    E { tag: Single(Tag(0x0020, 0x9161)), alias: "ConcatenationUID", vr: UI },
    E { tag: Single(Tag(0x0020, 0x9162)), alias: "InConcatenationNumber", vr: US },
    E { tag: Single(Tag(0x0020, 0x9163)), alias: "InConcatenationTotalNumber", vr: US },
    E { tag: Single(Tag(0x0020, 0x9164)), alias: "DimensionOrganizationUID", vr: UI },
    E { tag: Single(Tag(0x0020, 0x9165)), alias: "DimensionIndexPointer", vr: AT },
    E { tag: Single(Tag(0x0020, 0x9167)), alias: "FunctionalGroupPointer", vr: AT },
    E { tag: Single(Tag(0x0020, 0x9170)), alias: "UnassignedSharedConvertedAttributesSequence", vr: SQ },
    E { tag: Single(Tag(0x0020, 0x9171)), alias: "UnassignedPerFrameConvertedAttributesSequence", vr: SQ },
    E { tag: Single(Tag(0x0020, 0x9172)), alias: "ConversionSourceAttributesSequence", vr: SQ },
    E { tag: Single(Tag(0x0020, 0x9213)), alias: "DimensionIndexPrivateCreator", vr: LO },
    E { tag: Single(Tag(0x0020, 0x9221)), alias: "DimensionOrganizationSequence", vr: SQ },
    E { tag: Single(Tag(0x0020, 0x9222)), alias: "DimensionIndexSequence", vr: SQ },
    E { tag: Single(Tag(0x0020, 0x9228)), alias: "ConcatenationFrameOffsetNumber", vr: UL },
    E { tag: Single(Tag(0x0020, 0x9238)), alias: "FunctionalGroupPrivateCreator", vr: LO },
    E { tag: Single(Tag(0x0020, 0x9241)), alias: "NominalPercentageOfCardiacPhase", vr: FL },
    E { tag: Single(Tag(0x0020, 0x9245)), alias: "NominalPercentageOfRespiratoryPhase", vr: FL },
    E { tag: Single(Tag(0x0020, 0x9246)), alias: "StartingRespiratoryAmplitude", vr: FL },
    E { tag: Single(Tag(0x0020, 0x9247)), alias: "StartingRespiratoryPhase", vr: CS },
    E { tag: Single(Tag(0x0020, 0x9248)), alias: "EndingRespiratoryAmplitude", vr: FL },
    E { tag: Single(Tag(0x0020, 0x9249)), alias: "EndingRespiratoryPhase", vr: CS },
    E { tag: Single(Tag(0x0020, 0x9250)), alias: "RespiratoryTriggerType", vr: CS },
    E { tag: Single(Tag(0x0020, 0x9251)), alias: "RRIntervalTimeNominal", vr: FD },
    E { tag: Single(Tag(0x0020, 0x9252)), alias: "ActualCardiacTriggerDelayTime", vr: FD },
    E { tag: Single(Tag(0x0020, 0x9253)), alias: "RespiratorySynchronizationSequence", vr: SQ },
    E { tag: Single(Tag(0x0020, 0x9254)), alias: "RespiratoryIntervalTime", vr: FD },
    E { tag: Single(Tag(0x0020, 0x9255)), alias: "NominalRespiratoryTriggerDelayTime", vr: FD },
    E { tag: Single(Tag(0x0020, 0x9256)), alias: "RespiratoryTriggerDelayThreshold", vr: FD },
    E { tag: Single(Tag(0x0020, 0x9257)), alias: "ActualRespiratoryTriggerDelayTime", vr: FD },
    E { tag: Single(Tag(0x0020, 0x9301)), alias: "ImagePositionVolume", vr: FD },
    E { tag: Single(Tag(0x0020, 0x9302)), alias: "ImageOrientationVolume", vr: FD },
    E { tag: Single(Tag(0x0020, 0x9307)), alias: "UltrasoundAcquisitionGeometry", vr: CS },
    E { tag: Single(Tag(0x0020, 0x9308)), alias: "ApexPosition", vr: FD },
    E { tag: Single(Tag(0x0020, 0x9309)), alias: "VolumeToTransducerMappingMatrix", vr: FD },
    E { tag: Single(Tag(0x0020, 0x930A)), alias: "VolumeToTableMappingMatrix", vr: FD },
    E { tag: Single(Tag(0x0020, 0x930B)), alias: "VolumeToTransducerRelationship", vr: CS },
    E { tag: Single(Tag(0x0020, 0x930C)), alias: "PatientFrameOfReferenceSource", vr: CS },
    E { tag: Single(Tag(0x0020, 0x930D)), alias: "TemporalPositionTimeOffset", vr: FD },
    E { tag: Single(Tag(0x0020, 0x930E)), alias: "PlanePositionVolumeSequence", vr: SQ },
    E { tag: Single(Tag(0x0020, 0x930F)), alias: "PlaneOrientationVolumeSequence", vr: SQ },
    E { tag: Single(Tag(0x0020, 0x9310)), alias: "TemporalPositionSequence", vr: SQ },
    E { tag: Single(Tag(0x0020, 0x9311)), alias: "DimensionOrganizationType", vr: CS },
    E { tag: Single(Tag(0x0020, 0x9312)), alias: "VolumeFrameOfReferenceUID", vr: UI },
    E { tag: Single(Tag(0x0020, 0x9313)), alias: "TableFrameOfReferenceUID", vr: UI },
    E { tag: Single(Tag(0x0020, 0x9421)), alias: "DimensionDescriptionLabel", vr: LO },
    E { tag: Single(Tag(0x0020, 0x9450)), alias: "PatientOrientationInFrameSequence", vr: SQ },
    E { tag: Single(Tag(0x0020, 0x9453)), alias: "FrameLabel", vr: LO },
    E { tag: Single(Tag(0x0020, 0x9518)), alias: "AcquisitionIndex", vr: US },
    E { tag: Single(Tag(0x0020, 0x9529)), alias: "ContributingSOPInstancesReferenceSequence", vr: SQ },
    E { tag: Single(Tag(0x0020, 0x9536)), alias: "ReconstructionIndex", vr: US },
    E { tag: Single(Tag(0x0022, 0x0001)), alias: "LightPathFilterPassThroughWavelength", vr: US },
    E { tag: Single(Tag(0x0022, 0x0002)), alias: "LightPathFilterPassBand", vr: US },
    E { tag: Single(Tag(0x0022, 0x0003)), alias: "ImagePathFilterPassThroughWavelength", vr: US },
    E { tag: Single(Tag(0x0022, 0x0004)), alias: "ImagePathFilterPassBand", vr: US },
    E { tag: Single(Tag(0x0022, 0x0005)), alias: "PatientEyeMovementCommanded", vr: CS },
    E { tag: Single(Tag(0x0022, 0x0006)), alias: "PatientEyeMovementCommandCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x0007)), alias: "SphericalLensPower", vr: FL },
    E { tag: Single(Tag(0x0022, 0x0008)), alias: "CylinderLensPower", vr: FL },
    E { tag: Single(Tag(0x0022, 0x0009)), alias: "CylinderAxis", vr: FL },
    E { tag: Single(Tag(0x0022, 0x000A)), alias: "EmmetropicMagnification", vr: FL },
    E { tag: Single(Tag(0x0022, 0x000B)), alias: "IntraOcularPressure", vr: FL },
    E { tag: Single(Tag(0x0022, 0x000C)), alias: "HorizontalFieldOfView", vr: FL },
    E { tag: Single(Tag(0x0022, 0x000D)), alias: "PupilDilated", vr: CS },
    E { tag: Single(Tag(0x0022, 0x000E)), alias: "DegreeOfDilation", vr: FL },
    E { tag: Single(Tag(0x0022, 0x0010)), alias: "StereoBaselineAngle", vr: FL },
    E { tag: Single(Tag(0x0022, 0x0011)), alias: "StereoBaselineDisplacement", vr: FL },
    E { tag: Single(Tag(0x0022, 0x0012)), alias: "StereoHorizontalPixelOffset", vr: FL },
    E { tag: Single(Tag(0x0022, 0x0013)), alias: "StereoVerticalPixelOffset", vr: FL },
    E { tag: Single(Tag(0x0022, 0x0014)), alias: "StereoRotation", vr: FL },
    E { tag: Single(Tag(0x0022, 0x0015)), alias: "AcquisitionDeviceTypeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x0016)), alias: "IlluminationTypeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x0017)), alias: "LightPathFilterTypeStackCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x0018)), alias: "ImagePathFilterTypeStackCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x0019)), alias: "LensesCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x001A)), alias: "ChannelDescriptionCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x001B)), alias: "RefractiveStateSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x001C)), alias: "MydriaticAgentCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x001D)), alias: "RelativeImagePositionCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x001E)), alias: "CameraAngleOfView", vr: FL },
    E { tag: Single(Tag(0x0022, 0x0020)), alias: "StereoPairsSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x0021)), alias: "LeftImageSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x0022)), alias: "RightImageSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x0028)), alias: "StereoPairsPresent", vr: CS },
    E { tag: Single(Tag(0x0022, 0x0030)), alias: "AxialLengthOfTheEye", vr: FL },
    E { tag: Single(Tag(0x0022, 0x0031)), alias: "OphthalmicFrameLocationSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x0032)), alias: "ReferenceCoordinates", vr: FL },
    E { tag: Single(Tag(0x0022, 0x0035)), alias: "DepthSpatialResolution", vr: FL },
    E { tag: Single(Tag(0x0022, 0x0036)), alias: "MaximumDepthDistortion", vr: FL },
    E { tag: Single(Tag(0x0022, 0x0037)), alias: "AlongScanSpatialResolution", vr: FL },
    E { tag: Single(Tag(0x0022, 0x0038)), alias: "MaximumAlongScanDistortion", vr: FL },
    E { tag: Single(Tag(0x0022, 0x0039)), alias: "OphthalmicImageOrientation", vr: CS },
    E { tag: Single(Tag(0x0022, 0x0041)), alias: "DepthOfTransverseImage", vr: FL },
    E { tag: Single(Tag(0x0022, 0x0042)), alias: "MydriaticAgentConcentrationUnitsSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x0048)), alias: "AcrossScanSpatialResolution", vr: FL },
    E { tag: Single(Tag(0x0022, 0x0049)), alias: "MaximumAcrossScanDistortion", vr: FL },
    E { tag: Single(Tag(0x0022, 0x004E)), alias: "MydriaticAgentConcentration", vr: DS },
    E { tag: Single(Tag(0x0022, 0x0055)), alias: "IlluminationWaveLength", vr: FL },
    E { tag: Single(Tag(0x0022, 0x0056)), alias: "IlluminationPower", vr: FL },
    E { tag: Single(Tag(0x0022, 0x0057)), alias: "IlluminationBandwidth", vr: FL },
    E { tag: Single(Tag(0x0022, 0x0058)), alias: "MydriaticAgentSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1007)), alias: "OphthalmicAxialMeasurementsRightEyeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1008)), alias: "OphthalmicAxialMeasurementsLeftEyeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1009)), alias: "OphthalmicAxialMeasurementsDeviceType", vr: CS },
    E { tag: Single(Tag(0x0022, 0x1010)), alias: "OphthalmicAxialLengthMeasurementsType", vr: CS },
    E { tag: Single(Tag(0x0022, 0x1012)), alias: "OphthalmicAxialLengthSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1019)), alias: "OphthalmicAxialLength", vr: FL },
    E { tag: Single(Tag(0x0022, 0x1024)), alias: "LensStatusCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1025)), alias: "VitreousStatusCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1028)), alias: "IOLFormulaCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1029)), alias: "IOLFormulaDetail", vr: LO },
    E { tag: Single(Tag(0x0022, 0x1033)), alias: "KeratometerIndex", vr: FL },
    E { tag: Single(Tag(0x0022, 0x1035)), alias: "SourceOfOphthalmicAxialLengthCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1036)), alias: "SourceOfCornealSizeDataCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1037)), alias: "TargetRefraction", vr: FL },
    E { tag: Single(Tag(0x0022, 0x1039)), alias: "RefractiveProcedureOccurred", vr: CS },
    E { tag: Single(Tag(0x0022, 0x1040)), alias: "RefractiveSurgeryTypeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1044)), alias: "OphthalmicUltrasoundMethodCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1045)), alias: "SurgicallyInducedAstigmatismSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1046)), alias: "TypeOfOpticalCorrection", vr: CS },
    E { tag: Single(Tag(0x0022, 0x1047)), alias: "ToricIOLPowerSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1048)), alias: "PredictedToricErrorSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1049)), alias: "PreSelectedForImplantation", vr: CS },
    E { tag: Single(Tag(0x0022, 0x104A)), alias: "ToricIOLPowerForExactEmmetropiaSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x104B)), alias: "ToricIOLPowerForExactTargetRefractionSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1050)), alias: "OphthalmicAxialLengthMeasurementsSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1053)), alias: "IOLPower", vr: FL },
    E { tag: Single(Tag(0x0022, 0x1054)), alias: "PredictedRefractiveError", vr: FL },
    E { tag: Single(Tag(0x0022, 0x1059)), alias: "OphthalmicAxialLengthVelocity", vr: FL },
    E { tag: Single(Tag(0x0022, 0x1065)), alias: "LensStatusDescription", vr: LO },
    E { tag: Single(Tag(0x0022, 0x1066)), alias: "VitreousStatusDescription", vr: LO },
    E { tag: Single(Tag(0x0022, 0x1090)), alias: "IOLPowerSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1092)), alias: "LensConstantSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1093)), alias: "IOLManufacturer", vr: LO },
    E { tag: Single(Tag(0x0022, 0x1094)), alias: "LensConstantDescription", vr: LO }, // RET (2011)
    E { tag: Single(Tag(0x0022, 0x1095)), alias: "ImplantName", vr: LO },
    E { tag: Single(Tag(0x0022, 0x1096)), alias: "KeratometryMeasurementTypeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1097)), alias: "ImplantPartNumber", vr: LO },
    E { tag: Single(Tag(0x0022, 0x1100)), alias: "ReferencedOphthalmicAxialMeasurementsSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1101)), alias: "OphthalmicAxialLengthMeasurementsSegmentNameCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1103)), alias: "RefractiveErrorBeforeRefractiveSurgeryCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1121)), alias: "IOLPowerForExactEmmetropia", vr: FL },
    E { tag: Single(Tag(0x0022, 0x1122)), alias: "IOLPowerForExactTargetRefraction", vr: FL },
    E { tag: Single(Tag(0x0022, 0x1125)), alias: "AnteriorChamberDepthDefinitionCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1127)), alias: "LensThicknessSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1128)), alias: "AnteriorChamberDepthSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x112A)), alias: "CalculationCommentSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x112B)), alias: "CalculationCommentType", vr: CS },
    E { tag: Single(Tag(0x0022, 0x112C)), alias: "CalculationComment", vr: LT },
    E { tag: Single(Tag(0x0022, 0x1130)), alias: "LensThickness", vr: FL },
    E { tag: Single(Tag(0x0022, 0x1131)), alias: "AnteriorChamberDepth", vr: FL },
    E { tag: Single(Tag(0x0022, 0x1132)), alias: "SourceOfLensThicknessDataCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1133)), alias: "SourceOfAnteriorChamberDepthDataCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1134)), alias: "SourceOfRefractiveMeasurementsSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1135)), alias: "SourceOfRefractiveMeasurementsCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1140)), alias: "OphthalmicAxialLengthMeasurementModified", vr: CS },
    E { tag: Single(Tag(0x0022, 0x1150)), alias: "OphthalmicAxialLengthDataSourceCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1153)), alias: "OphthalmicAxialLengthAcquisitionMethodCodeSequence", vr: SQ }, // RET (2011)
    E { tag: Single(Tag(0x0022, 0x1155)), alias: "SignalToNoiseRatio", vr: FL },
    E { tag: Single(Tag(0x0022, 0x1159)), alias: "OphthalmicAxialLengthDataSourceDescription", vr: LO },
    E { tag: Single(Tag(0x0022, 0x1210)), alias: "OphthalmicAxialLengthMeasurementsTotalLengthSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1211)), alias: "OphthalmicAxialLengthMeasurementsSegmentalLengthSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1212)), alias: "OphthalmicAxialLengthMeasurementsLengthSummationSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1220)), alias: "UltrasoundOphthalmicAxialLengthMeasurementsSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1225)), alias: "OpticalOphthalmicAxialLengthMeasurementsSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1230)), alias: "UltrasoundSelectedOphthalmicAxialLengthSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1250)), alias: "OphthalmicAxialLengthSelectionMethodCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1255)), alias: "OpticalSelectedOphthalmicAxialLengthSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1257)), alias: "SelectedSegmentalOphthalmicAxialLengthSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1260)), alias: "SelectedTotalOphthalmicAxialLengthSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1262)), alias: "OphthalmicAxialLengthQualityMetricSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1265)), alias: "OphthalmicAxialLengthQualityMetricTypeCodeSequence", vr: SQ }, // RET
    E { tag: Single(Tag(0x0022, 0x1273)), alias: "OphthalmicAxialLengthQualityMetricTypeDescription", vr: LO }, // RET (2011)
    E { tag: Single(Tag(0x0022, 0x1300)), alias: "IntraocularLensCalculationsRightEyeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1310)), alias: "IntraocularLensCalculationsLeftEyeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1330)), alias: "ReferencedOphthalmicAxialLengthMeasurementQCImageSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1415)), alias: "OphthalmicMappingDeviceType", vr: CS },
    E { tag: Single(Tag(0x0022, 0x1420)), alias: "AcquisitionMethodCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1423)), alias: "AcquisitionMethodAlgorithmSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1436)), alias: "OphthalmicThicknessMapTypeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1443)), alias: "OphthalmicThicknessMappingNormalsSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1445)), alias: "RetinalThicknessDefinitionCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1450)), alias: "PixelValueMappingToCodedConceptSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1452)), alias: "MappedPixelValue", vr: US /* or SS */ },
    E { tag: Single(Tag(0x0022, 0x1454)), alias: "PixelValueMappingExplanation", vr: LO },
    E { tag: Single(Tag(0x0022, 0x1458)), alias: "OphthalmicThicknessMapQualityThresholdSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1460)), alias: "OphthalmicThicknessMapThresholdQualityRating", vr: FL },
    E { tag: Single(Tag(0x0022, 0x1463)), alias: "AnatomicStructureReferencePoint", vr: FL },
    E { tag: Single(Tag(0x0022, 0x1465)), alias: "RegistrationToLocalizerSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1466)), alias: "RegisteredLocalizerUnits", vr: CS },
    E { tag: Single(Tag(0x0022, 0x1467)), alias: "RegisteredLocalizerTopLeftHandCorner", vr: FL },
    E { tag: Single(Tag(0x0022, 0x1468)), alias: "RegisteredLocalizerBottomRightHandCorner", vr: FL },
    E { tag: Single(Tag(0x0022, 0x1470)), alias: "OphthalmicThicknessMapQualityRatingSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1472)), alias: "RelevantOPTAttributesSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1512)), alias: "TransformationMethodCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1513)), alias: "TransformationAlgorithmSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1515)), alias: "OphthalmicAxialLengthMethod", vr: CS },
    E { tag: Single(Tag(0x0022, 0x1517)), alias: "OphthalmicFOV", vr: FL },
    E { tag: Single(Tag(0x0022, 0x1518)), alias: "TwoDimensionalToThreeDimensionalMapSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1525)), alias: "WideFieldOphthalmicPhotographyQualityRatingSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1526)), alias: "WideFieldOphthalmicPhotographyQualityThresholdSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1527)), alias: "WideFieldOphthalmicPhotographyThresholdQualityRating", vr: FL },
    E { tag: Single(Tag(0x0022, 0x1528)), alias: "XCoordinatesCenterPixelViewAngle", vr: FL },
    E { tag: Single(Tag(0x0022, 0x1529)), alias: "YCoordinatesCenterPixelViewAngle", vr: FL },
    E { tag: Single(Tag(0x0022, 0x1530)), alias: "NumberOfMapPoints", vr: UL },
    E { tag: Single(Tag(0x0022, 0x1531)), alias: "TwoDimensionalToThreeDimensionalMapData", vr: OF },
    E { tag: Single(Tag(0x0022, 0x1612)), alias: "DerivationAlgorithmSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1615)), alias: "OphthalmicImageTypeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1616)), alias: "OphthalmicImageTypeDescription", vr: LO },
    E { tag: Single(Tag(0x0022, 0x1618)), alias: "ScanPatternTypeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1620)), alias: "ReferencedSurfaceMeshIdentificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1622)), alias: "OphthalmicVolumetricPropertiesFlag", vr: CS },
    E { tag: Single(Tag(0x0022, 0x1624)), alias: "OphthalmicAnatomicReferencePointXCoordinate", vr: FL },
    E { tag: Single(Tag(0x0022, 0x1626)), alias: "OphthalmicAnatomicReferencePointYCoordinate", vr: FL },
    E { tag: Single(Tag(0x0022, 0x1628)), alias: "OphthalmicEnFaceImageQualityRatingSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1630)), alias: "QualityThreshold", vr: DS },
    E { tag: Single(Tag(0x0022, 0x1640)), alias: "OCTBscanAnalysisAcquisitionParametersSequence", vr: SQ },
    E { tag: Single(Tag(0x0022, 0x1642)), alias: "NumberofBscansPerFrame", vr: UL },
    E { tag: Single(Tag(0x0022, 0x1643)), alias: "BscanSlabThickness", vr: FL },
    E { tag: Single(Tag(0x0022, 0x1644)), alias: "DistanceBetweenBscanSlabs", vr: FL },
    E { tag: Single(Tag(0x0022, 0x1645)), alias: "BscanCycleTime", vr: FL },
    E { tag: Single(Tag(0x0022, 0x1646)), alias: "BscanCycleTimeVector", vr: FL },
    E { tag: Single(Tag(0x0022, 0x1649)), alias: "AscanRate", vr: FL },
    E { tag: Single(Tag(0x0022, 0x1650)), alias: "BscanRate", vr: FL },
    E { tag: Single(Tag(0x0022, 0x1658)), alias: "SurfaceMeshZPixelOffset", vr: UL },
    E { tag: Single(Tag(0x0024, 0x0010)), alias: "VisualFieldHorizontalExtent", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0011)), alias: "VisualFieldVerticalExtent", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0012)), alias: "VisualFieldShape", vr: CS },
    E { tag: Single(Tag(0x0024, 0x0016)), alias: "ScreeningTestModeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0024, 0x0018)), alias: "MaximumStimulusLuminance", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0020)), alias: "BackgroundLuminance", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0021)), alias: "StimulusColorCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0024, 0x0024)), alias: "BackgroundIlluminationColorCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0024, 0x0025)), alias: "StimulusArea", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0028)), alias: "StimulusPresentationTime", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0032)), alias: "FixationSequence", vr: SQ },
    E { tag: Single(Tag(0x0024, 0x0033)), alias: "FixationMonitoringCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0024, 0x0034)), alias: "VisualFieldCatchTrialSequence", vr: SQ },
    E { tag: Single(Tag(0x0024, 0x0035)), alias: "FixationCheckedQuantity", vr: US },
    E { tag: Single(Tag(0x0024, 0x0036)), alias: "PatientNotProperlyFixatedQuantity", vr: US },
    E { tag: Single(Tag(0x0024, 0x0037)), alias: "PresentedVisualStimuliDataFlag", vr: CS },
    E { tag: Single(Tag(0x0024, 0x0038)), alias: "NumberOfVisualStimuli", vr: US },
    E { tag: Single(Tag(0x0024, 0x0039)), alias: "ExcessiveFixationLossesDataFlag", vr: CS },
    E { tag: Single(Tag(0x0024, 0x0040)), alias: "ExcessiveFixationLosses", vr: CS },
    E { tag: Single(Tag(0x0024, 0x0042)), alias: "StimuliRetestingQuantity", vr: US },
    E { tag: Single(Tag(0x0024, 0x0044)), alias: "CommentsOnPatientPerformanceOfVisualField", vr: LT },
    E { tag: Single(Tag(0x0024, 0x0045)), alias: "FalseNegativesEstimateFlag", vr: CS },
    E { tag: Single(Tag(0x0024, 0x0046)), alias: "FalseNegativesEstimate", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0048)), alias: "NegativeCatchTrialsQuantity", vr: US },
    E { tag: Single(Tag(0x0024, 0x0050)), alias: "FalseNegativesQuantity", vr: US },
    E { tag: Single(Tag(0x0024, 0x0051)), alias: "ExcessiveFalseNegativesDataFlag", vr: CS },
    E { tag: Single(Tag(0x0024, 0x0052)), alias: "ExcessiveFalseNegatives", vr: CS },
    E { tag: Single(Tag(0x0024, 0x0053)), alias: "FalsePositivesEstimateFlag", vr: CS },
    E { tag: Single(Tag(0x0024, 0x0054)), alias: "FalsePositivesEstimate", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0055)), alias: "CatchTrialsDataFlag", vr: CS },
    E { tag: Single(Tag(0x0024, 0x0056)), alias: "PositiveCatchTrialsQuantity", vr: US },
    E { tag: Single(Tag(0x0024, 0x0057)), alias: "TestPointNormalsDataFlag", vr: CS },
    E { tag: Single(Tag(0x0024, 0x0058)), alias: "TestPointNormalsSequence", vr: SQ },
    E { tag: Single(Tag(0x0024, 0x0059)), alias: "GlobalDeviationProbabilityNormalsFlag", vr: CS },
    E { tag: Single(Tag(0x0024, 0x0060)), alias: "FalsePositivesQuantity", vr: US },
    E { tag: Single(Tag(0x0024, 0x0061)), alias: "ExcessiveFalsePositivesDataFlag", vr: CS },
    E { tag: Single(Tag(0x0024, 0x0062)), alias: "ExcessiveFalsePositives", vr: CS },
    E { tag: Single(Tag(0x0024, 0x0063)), alias: "VisualFieldTestNormalsFlag", vr: CS },
    E { tag: Single(Tag(0x0024, 0x0064)), alias: "ResultsNormalsSequence", vr: SQ },
    E { tag: Single(Tag(0x0024, 0x0065)), alias: "AgeCorrectedSensitivityDeviationAlgorithmSequence", vr: SQ },
    E { tag: Single(Tag(0x0024, 0x0066)), alias: "GlobalDeviationFromNormal", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0067)), alias: "GeneralizedDefectSensitivityDeviationAlgorithmSequence", vr: SQ },
    E { tag: Single(Tag(0x0024, 0x0068)), alias: "LocalizedDeviationFromNormal", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0069)), alias: "PatientReliabilityIndicator", vr: LO },
    E { tag: Single(Tag(0x0024, 0x0070)), alias: "VisualFieldMeanSensitivity", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0071)), alias: "GlobalDeviationProbability", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0072)), alias: "LocalDeviationProbabilityNormalsFlag", vr: CS },
    E { tag: Single(Tag(0x0024, 0x0073)), alias: "LocalizedDeviationProbability", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0074)), alias: "ShortTermFluctuationCalculated", vr: CS },
    E { tag: Single(Tag(0x0024, 0x0075)), alias: "ShortTermFluctuation", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0076)), alias: "ShortTermFluctuationProbabilityCalculated", vr: CS },
    E { tag: Single(Tag(0x0024, 0x0077)), alias: "ShortTermFluctuationProbability", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0078)), alias: "CorrectedLocalizedDeviationFromNormalCalculated", vr: CS },
    E { tag: Single(Tag(0x0024, 0x0079)), alias: "CorrectedLocalizedDeviationFromNormal", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0080)), alias: "CorrectedLocalizedDeviationFromNormalProbabilityCalculated", vr: CS },
    E { tag: Single(Tag(0x0024, 0x0081)), alias: "CorrectedLocalizedDeviationFromNormalProbability", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0083)), alias: "GlobalDeviationProbabilitySequence", vr: SQ },
    E { tag: Single(Tag(0x0024, 0x0085)), alias: "LocalizedDeviationProbabilitySequence", vr: SQ },
    E { tag: Single(Tag(0x0024, 0x0086)), alias: "FovealSensitivityMeasured", vr: CS },
    E { tag: Single(Tag(0x0024, 0x0087)), alias: "FovealSensitivity", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0088)), alias: "VisualFieldTestDuration", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0089)), alias: "VisualFieldTestPointSequence", vr: SQ },
    E { tag: Single(Tag(0x0024, 0x0090)), alias: "VisualFieldTestPointXCoordinate", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0091)), alias: "VisualFieldTestPointYCoordinate", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0092)), alias: "AgeCorrectedSensitivityDeviationValue", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0093)), alias: "StimulusResults", vr: CS },
    E { tag: Single(Tag(0x0024, 0x0094)), alias: "SensitivityValue", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0095)), alias: "RetestStimulusSeen", vr: CS },
    E { tag: Single(Tag(0x0024, 0x0096)), alias: "RetestSensitivityValue", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0097)), alias: "VisualFieldTestPointNormalsSequence", vr: SQ },
    E { tag: Single(Tag(0x0024, 0x0098)), alias: "QuantifiedDefect", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0100)), alias: "AgeCorrectedSensitivityDeviationProbabilityValue", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0102)), alias: "GeneralizedDefectCorrectedSensitivityDeviationFlag", vr: CS },
    E { tag: Single(Tag(0x0024, 0x0103)), alias: "GeneralizedDefectCorrectedSensitivityDeviationValue", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0104)), alias: "GeneralizedDefectCorrectedSensitivityDeviationProbabilityValue", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0105)), alias: "MinimumSensitivityValue", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0106)), alias: "BlindSpotLocalized", vr: CS },
    E { tag: Single(Tag(0x0024, 0x0107)), alias: "BlindSpotXCoordinate", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0108)), alias: "BlindSpotYCoordinate", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0110)), alias: "VisualAcuityMeasurementSequence", vr: SQ },
    E { tag: Single(Tag(0x0024, 0x0112)), alias: "RefractiveParametersUsedOnPatientSequence", vr: SQ },
    E { tag: Single(Tag(0x0024, 0x0113)), alias: "MeasurementLaterality", vr: CS },
    E { tag: Single(Tag(0x0024, 0x0114)), alias: "OphthalmicPatientClinicalInformationLeftEyeSequence", vr: SQ },
    E { tag: Single(Tag(0x0024, 0x0115)), alias: "OphthalmicPatientClinicalInformationRightEyeSequence", vr: SQ },
    E { tag: Single(Tag(0x0024, 0x0117)), alias: "FovealPointNormativeDataFlag", vr: CS },
    E { tag: Single(Tag(0x0024, 0x0118)), alias: "FovealPointProbabilityValue", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0120)), alias: "ScreeningBaselineMeasured", vr: CS },
    E { tag: Single(Tag(0x0024, 0x0122)), alias: "ScreeningBaselineMeasuredSequence", vr: SQ },
    E { tag: Single(Tag(0x0024, 0x0124)), alias: "ScreeningBaselineType", vr: CS },
    E { tag: Single(Tag(0x0024, 0x0126)), alias: "ScreeningBaselineValue", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0202)), alias: "AlgorithmSource", vr: LO },
    E { tag: Single(Tag(0x0024, 0x0306)), alias: "DataSetName", vr: LO },
    E { tag: Single(Tag(0x0024, 0x0307)), alias: "DataSetVersion", vr: LO },
    E { tag: Single(Tag(0x0024, 0x0308)), alias: "DataSetSource", vr: LO },
    E { tag: Single(Tag(0x0024, 0x0309)), alias: "DataSetDescription", vr: LO },
    E { tag: Single(Tag(0x0024, 0x0317)), alias: "VisualFieldTestReliabilityGlobalIndexSequence", vr: SQ },
    E { tag: Single(Tag(0x0024, 0x0320)), alias: "VisualFieldGlobalResultsIndexSequence", vr: SQ },
    E { tag: Single(Tag(0x0024, 0x0325)), alias: "DataObservationSequence", vr: SQ },
    E { tag: Single(Tag(0x0024, 0x0338)), alias: "IndexNormalsFlag", vr: CS },
    E { tag: Single(Tag(0x0024, 0x0341)), alias: "IndexProbability", vr: FL },
    E { tag: Single(Tag(0x0024, 0x0344)), alias: "IndexProbabilitySequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x0002)), alias: "SamplesPerPixel", vr: US },
    E { tag: Single(Tag(0x0028, 0x0003)), alias: "SamplesPerPixelUsed", vr: US },
    E { tag: Single(Tag(0x0028, 0x0004)), alias: "PhotometricInterpretation", vr: CS },
    E { tag: Single(Tag(0x0028, 0x0005)), alias: "ImageDimensions", vr: US }, // RET
    E { tag: Single(Tag(0x0028, 0x0006)), alias: "PlanarConfiguration", vr: US },
    E { tag: Single(Tag(0x0028, 0x0008)), alias: "NumberOfFrames", vr: IS },
    E { tag: Single(Tag(0x0028, 0x0009)), alias: "FrameIncrementPointer", vr: AT },
    E { tag: Single(Tag(0x0028, 0x000A)), alias: "FrameDimensionPointer", vr: AT },
    E { tag: Single(Tag(0x0028, 0x0010)), alias: "Rows", vr: US },
    E { tag: Single(Tag(0x0028, 0x0011)), alias: "Columns", vr: US },
    E { tag: Single(Tag(0x0028, 0x0012)), alias: "Planes", vr: US }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0014)), alias: "UltrasoundColorDataPresent", vr: US },
    E { tag: Single(Tag(0x0028, 0x0030)), alias: "PixelSpacing", vr: DS },
    E { tag: Single(Tag(0x0028, 0x0031)), alias: "ZoomFactor", vr: DS },
    E { tag: Single(Tag(0x0028, 0x0032)), alias: "ZoomCenter", vr: DS },
    E { tag: Single(Tag(0x0028, 0x0034)), alias: "PixelAspectRatio", vr: IS },
    E { tag: Single(Tag(0x0028, 0x0040)), alias: "ImageFormat", vr: CS }, // RET
    E { tag: Single(Tag(0x0028, 0x0050)), alias: "ManipulatedImage", vr: LO }, // RET
    E { tag: Single(Tag(0x0028, 0x0051)), alias: "CorrectedImage", vr: CS },
    E { tag: Single(Tag(0x0028, 0x005F)), alias: "CompressionRecognitionCode", vr: LO }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0060)), alias: "CompressionCode", vr: CS }, // RET
    E { tag: Single(Tag(0x0028, 0x0061)), alias: "CompressionOriginator", vr: SH }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0062)), alias: "CompressionLabel", vr: LO }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0063)), alias: "CompressionDescription", vr: SH }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0065)), alias: "CompressionSequence", vr: CS }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0066)), alias: "CompressionStepPointers", vr: AT }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0068)), alias: "RepeatInterval", vr: US }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0069)), alias: "BitsGrouped", vr: US }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0070)), alias: "PerimeterTable", vr: US }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0071)), alias: "PerimeterValue", vr: US /* or SS */ }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0080)), alias: "PredictorRows", vr: US }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0081)), alias: "PredictorColumns", vr: US }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0082)), alias: "PredictorConstants", vr: US }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0090)), alias: "BlockedPixels", vr: CS }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0091)), alias: "BlockRows", vr: US }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0092)), alias: "BlockColumns", vr: US }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0093)), alias: "RowOverlap", vr: US }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0094)), alias: "ColumnOverlap", vr: US }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0100)), alias: "BitsAllocated", vr: US },
    E { tag: Single(Tag(0x0028, 0x0101)), alias: "BitsStored", vr: US },
    E { tag: Single(Tag(0x0028, 0x0102)), alias: "HighBit", vr: US },
    E { tag: Single(Tag(0x0028, 0x0103)), alias: "PixelRepresentation", vr: US },
    E { tag: Single(Tag(0x0028, 0x0104)), alias: "SmallestValidPixelValue", vr: US /* or SS */ }, // RET
    E { tag: Single(Tag(0x0028, 0x0105)), alias: "LargestValidPixelValue", vr: US /* or SS */ }, // RET
    E { tag: Single(Tag(0x0028, 0x0106)), alias: "SmallestImagePixelValue", vr: US /* or SS */ },
    E { tag: Single(Tag(0x0028, 0x0107)), alias: "LargestImagePixelValue", vr: US /* or SS */ },
    E { tag: Single(Tag(0x0028, 0x0108)), alias: "SmallestPixelValueInSeries", vr: US /* or SS */ },
    E { tag: Single(Tag(0x0028, 0x0109)), alias: "LargestPixelValueInSeries", vr: US /* or SS */ },
    E { tag: Single(Tag(0x0028, 0x0110)), alias: "SmallestImagePixelValueInPlane", vr: US /* or SS */ }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0111)), alias: "LargestImagePixelValueInPlane", vr: US /* or SS */ }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0120)), alias: "PixelPaddingValue", vr: US /* or SS */ },
    E { tag: Single(Tag(0x0028, 0x0121)), alias: "PixelPaddingRangeLimit", vr: US /* or SS */ },
    E { tag: Single(Tag(0x0028, 0x0122)), alias: "FloatPixelPaddingValue", vr: FL },
    E { tag: Single(Tag(0x0028, 0x0123)), alias: "DoubleFloatPixelPaddingValue", vr: FD },
    E { tag: Single(Tag(0x0028, 0x0124)), alias: "FloatPixelPaddingRangeLimit", vr: FL },
    E { tag: Single(Tag(0x0028, 0x0125)), alias: "DoubleFloatPixelPaddingRangeLimit", vr: FD },
    E { tag: Single(Tag(0x0028, 0x0200)), alias: "ImageLocation", vr: US }, // RET
    E { tag: Single(Tag(0x0028, 0x0300)), alias: "QualityControlImage", vr: CS },
    E { tag: Single(Tag(0x0028, 0x0301)), alias: "BurnedInAnnotation", vr: CS },
    E { tag: Single(Tag(0x0028, 0x0302)), alias: "RecognizableVisualFeatures", vr: CS },
    E { tag: Single(Tag(0x0028, 0x0303)), alias: "LongitudinalTemporalInformationModified", vr: CS },
    E { tag: Single(Tag(0x0028, 0x0304)), alias: "ReferencedColorPaletteInstanceUID", vr: UI },
    E { tag: Single(Tag(0x0028, 0x0400)), alias: "TransformLabel", vr: LO }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0401)), alias: "TransformVersionNumber", vr: LO }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0402)), alias: "NumberOfTransformSteps", vr: US }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0403)), alias: "SequenceOfCompressedData", vr: LO }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0404)), alias: "DetailsOfCoefficients", vr: AT }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0700)), alias: "DCTLabel", vr: LO }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0701)), alias: "DataBlockDescription", vr: CS }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0702)), alias: "DataBlock", vr: AT }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0710)), alias: "NormalizationFactorFormat", vr: US }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0720)), alias: "ZonalMapNumberFormat", vr: US }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0721)), alias: "ZonalMapLocation", vr: AT }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0722)), alias: "ZonalMapFormat", vr: US }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0730)), alias: "AdaptiveMapFormat", vr: US }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0740)), alias: "CodeNumberFormat", vr: US }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x0A02)), alias: "PixelSpacingCalibrationType", vr: CS },
    E { tag: Single(Tag(0x0028, 0x0A04)), alias: "PixelSpacingCalibrationDescription", vr: LO },
    E { tag: Single(Tag(0x0028, 0x1040)), alias: "PixelIntensityRelationship", vr: CS },
    E { tag: Single(Tag(0x0028, 0x1041)), alias: "PixelIntensityRelationshipSign", vr: SS },
    E { tag: Single(Tag(0x0028, 0x1050)), alias: "WindowCenter", vr: DS },
    E { tag: Single(Tag(0x0028, 0x1051)), alias: "WindowWidth", vr: DS },
    E { tag: Single(Tag(0x0028, 0x1052)), alias: "RescaleIntercept", vr: DS },
    E { tag: Single(Tag(0x0028, 0x1053)), alias: "RescaleSlope", vr: DS },
    E { tag: Single(Tag(0x0028, 0x1054)), alias: "RescaleType", vr: LO },
    E { tag: Single(Tag(0x0028, 0x1055)), alias: "WindowCenterWidthExplanation", vr: LO },
    E { tag: Single(Tag(0x0028, 0x1056)), alias: "VOILUTFunction", vr: CS },
    E { tag: Single(Tag(0x0028, 0x1080)), alias: "GrayScale", vr: CS }, // RET
    E { tag: Single(Tag(0x0028, 0x1090)), alias: "RecommendedViewingMode", vr: CS },
    E { tag: Single(Tag(0x0028, 0x1100)), alias: "GrayLookupTableDescriptor", vr: US /* or SS */ }, // RET
    E { tag: Single(Tag(0x0028, 0x1101)), alias: "RedPaletteColorLookupTableDescriptor", vr: US /* or SS */ },
    E { tag: Single(Tag(0x0028, 0x1102)), alias: "GreenPaletteColorLookupTableDescriptor", vr: US /* or SS */ },
    E { tag: Single(Tag(0x0028, 0x1103)), alias: "BluePaletteColorLookupTableDescriptor", vr: US /* or SS */ },
    E { tag: Single(Tag(0x0028, 0x1104)), alias: "AlphaPaletteColorLookupTableDescriptor", vr: US },
    E { tag: Single(Tag(0x0028, 0x1111)), alias: "LargeRedPaletteColorLookupTableDescriptor", vr: US /* or SS */ }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x1112)), alias: "LargeGreenPaletteColorLookupTableDescriptor", vr: US /* or SS */ }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x1113)), alias: "LargeBluePaletteColorLookupTableDescriptor", vr: US /* or SS */ }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x1199)), alias: "PaletteColorLookupTableUID", vr: UI },
    E { tag: Single(Tag(0x0028, 0x1200)), alias: "GrayLookupTableData", vr: US /* or SS or OW */ }, // RET
    E { tag: Single(Tag(0x0028, 0x1201)), alias: "RedPaletteColorLookupTableData", vr: OW },
    E { tag: Single(Tag(0x0028, 0x1202)), alias: "GreenPaletteColorLookupTableData", vr: OW },
    E { tag: Single(Tag(0x0028, 0x1203)), alias: "BluePaletteColorLookupTableData", vr: OW },
    E { tag: Single(Tag(0x0028, 0x1204)), alias: "AlphaPaletteColorLookupTableData", vr: OW },
    E { tag: Single(Tag(0x0028, 0x1211)), alias: "LargeRedPaletteColorLookupTableData", vr: OW }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x1212)), alias: "LargeGreenPaletteColorLookupTableData", vr: OW }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x1213)), alias: "LargeBluePaletteColorLookupTableData", vr: OW }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x1214)), alias: "LargePaletteColorLookupTableUID", vr: UI }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x1221)), alias: "SegmentedRedPaletteColorLookupTableData", vr: OW },
    E { tag: Single(Tag(0x0028, 0x1222)), alias: "SegmentedGreenPaletteColorLookupTableData", vr: OW },
    E { tag: Single(Tag(0x0028, 0x1223)), alias: "SegmentedBluePaletteColorLookupTableData", vr: OW },
    E { tag: Single(Tag(0x0028, 0x1224)), alias: "SegmentedAlphaPaletteColorLookupTableData", vr: OW },
    E { tag: Single(Tag(0x0028, 0x1230)), alias: "StoredValueColorRangeSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x1231)), alias: "MinimumStoredValueMapped", vr: FD },
    E { tag: Single(Tag(0x0028, 0x1232)), alias: "MaximumStoredValueMapped", vr: FD },
    E { tag: Single(Tag(0x0028, 0x1300)), alias: "BreastImplantPresent", vr: CS },
    E { tag: Single(Tag(0x0028, 0x1350)), alias: "PartialView", vr: CS },
    E { tag: Single(Tag(0x0028, 0x1351)), alias: "PartialViewDescription", vr: ST },
    E { tag: Single(Tag(0x0028, 0x1352)), alias: "PartialViewCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x135A)), alias: "SpatialLocationsPreserved", vr: CS },
    E { tag: Single(Tag(0x0028, 0x1401)), alias: "DataFrameAssignmentSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x1402)), alias: "DataPathAssignment", vr: CS },
    E { tag: Single(Tag(0x0028, 0x1403)), alias: "BitsMappedToColorLookupTable", vr: US },
    E { tag: Single(Tag(0x0028, 0x1404)), alias: "BlendingLUT1Sequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x1405)), alias: "BlendingLUT1TransferFunction", vr: CS },
    E { tag: Single(Tag(0x0028, 0x1406)), alias: "BlendingWeightConstant", vr: FD },
    E { tag: Single(Tag(0x0028, 0x1407)), alias: "BlendingLookupTableDescriptor", vr: US },
    E { tag: Single(Tag(0x0028, 0x1408)), alias: "BlendingLookupTableData", vr: OW },
    E { tag: Single(Tag(0x0028, 0x140B)), alias: "EnhancedPaletteColorLookupTableSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x140C)), alias: "BlendingLUT2Sequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x140D)), alias: "BlendingLUT2TransferFunction", vr: CS },
    E { tag: Single(Tag(0x0028, 0x140E)), alias: "DataPathID", vr: CS },
    E { tag: Single(Tag(0x0028, 0x140F)), alias: "RGBLUTTransferFunction", vr: CS },
    E { tag: Single(Tag(0x0028, 0x1410)), alias: "AlphaLUTTransferFunction", vr: CS },
    E { tag: Single(Tag(0x0028, 0x2000)), alias: "ICCProfile", vr: OB },
    E { tag: Single(Tag(0x0028, 0x2002)), alias: "ColorSpace", vr: CS },
    E { tag: Single(Tag(0x0028, 0x2110)), alias: "LossyImageCompression", vr: CS },
    E { tag: Single(Tag(0x0028, 0x2112)), alias: "LossyImageCompressionRatio", vr: DS },
    E { tag: Single(Tag(0x0028, 0x2114)), alias: "LossyImageCompressionMethod", vr: CS },
    E { tag: Single(Tag(0x0028, 0x3000)), alias: "ModalityLUTSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x3002)), alias: "LUTDescriptor", vr: US /* or SS */ },
    E { tag: Single(Tag(0x0028, 0x3003)), alias: "LUTExplanation", vr: LO },
    E { tag: Single(Tag(0x0028, 0x3004)), alias: "ModalityLUTType", vr: LO },
    E { tag: Single(Tag(0x0028, 0x3006)), alias: "LUTData", vr: US /* or OW */ },
    E { tag: Single(Tag(0x0028, 0x3010)), alias: "VOILUTSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x3110)), alias: "SoftcopyVOILUTSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x4000)), alias: "ImagePresentationComments", vr: LT }, // RET
    E { tag: Single(Tag(0x0028, 0x5000)), alias: "BiPlaneAcquisitionSequence", vr: SQ }, // RET (2007)
    E { tag: Single(Tag(0x0028, 0x6010)), alias: "RepresentativeFrameNumber", vr: US },
    E { tag: Single(Tag(0x0028, 0x6020)), alias: "FrameNumbersOfInterest", vr: US },
    E { tag: Single(Tag(0x0028, 0x6022)), alias: "FrameOfInterestDescription", vr: LO },
    E { tag: Single(Tag(0x0028, 0x6023)), alias: "FrameOfInterestType", vr: CS },
    E { tag: Single(Tag(0x0028, 0x6030)), alias: "MaskPointers", vr: US }, // RET (2001)
    E { tag: Single(Tag(0x0028, 0x6040)), alias: "RWavePointer", vr: US },
    E { tag: Single(Tag(0x0028, 0x6100)), alias: "MaskSubtractionSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x6101)), alias: "MaskOperation", vr: CS },
    E { tag: Single(Tag(0x0028, 0x6102)), alias: "ApplicableFrameRange", vr: US },
    E { tag: Single(Tag(0x0028, 0x6110)), alias: "MaskFrameNumbers", vr: US },
    E { tag: Single(Tag(0x0028, 0x6112)), alias: "ContrastFrameAveraging", vr: US },
    E { tag: Single(Tag(0x0028, 0x6114)), alias: "MaskSubPixelShift", vr: FL },
    E { tag: Single(Tag(0x0028, 0x6120)), alias: "TIDOffset", vr: SS },
    E { tag: Single(Tag(0x0028, 0x6190)), alias: "MaskOperationExplanation", vr: ST },
    E { tag: Single(Tag(0x0028, 0x7000)), alias: "EquipmentAdministratorSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x7001)), alias: "NumberOfDisplaySubsystems", vr: US },
    E { tag: Single(Tag(0x0028, 0x7002)), alias: "CurrentConfigurationID", vr: US },
    E { tag: Single(Tag(0x0028, 0x7003)), alias: "DisplaySubsystemID", vr: US },
    E { tag: Single(Tag(0x0028, 0x7004)), alias: "DisplaySubsystemName", vr: SH },
    E { tag: Single(Tag(0x0028, 0x7005)), alias: "DisplaySubsystemDescription", vr: LO },
    E { tag: Single(Tag(0x0028, 0x7006)), alias: "SystemStatus", vr: CS },
    E { tag: Single(Tag(0x0028, 0x7007)), alias: "SystemStatusComment", vr: LO },
    E { tag: Single(Tag(0x0028, 0x7008)), alias: "TargetLuminanceCharacteristicsSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x7009)), alias: "LuminanceCharacteristicsID", vr: US },
    E { tag: Single(Tag(0x0028, 0x700A)), alias: "DisplaySubsystemConfigurationSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x700B)), alias: "ConfigurationID", vr: US },
    E { tag: Single(Tag(0x0028, 0x700C)), alias: "ConfigurationName", vr: SH },
    E { tag: Single(Tag(0x0028, 0x700D)), alias: "ConfigurationDescription", vr: LO },
    E { tag: Single(Tag(0x0028, 0x700E)), alias: "ReferencedTargetLuminanceCharacteristicsID", vr: US },
    E { tag: Single(Tag(0x0028, 0x700F)), alias: "QAResultsSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x7010)), alias: "DisplaySubsystemQAResultsSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x7011)), alias: "ConfigurationQAResultsSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x7012)), alias: "MeasurementEquipmentSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x7013)), alias: "MeasurementFunctions", vr: CS },
    E { tag: Single(Tag(0x0028, 0x7014)), alias: "MeasurementEquipmentType", vr: CS },
    E { tag: Single(Tag(0x0028, 0x7015)), alias: "VisualEvaluationResultSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x7016)), alias: "DisplayCalibrationResultSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x7017)), alias: "DDLValue", vr: US },
    E { tag: Single(Tag(0x0028, 0x7018)), alias: "CIExyWhitePoint", vr: FL },
    E { tag: Single(Tag(0x0028, 0x7019)), alias: "DisplayFunctionType", vr: CS },
    E { tag: Single(Tag(0x0028, 0x701A)), alias: "GammaValue", vr: FL },
    E { tag: Single(Tag(0x0028, 0x701B)), alias: "NumberOfLuminancePoints", vr: US },
    E { tag: Single(Tag(0x0028, 0x701C)), alias: "LuminanceResponseSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x701D)), alias: "TargetMinimumLuminance", vr: FL },
    E { tag: Single(Tag(0x0028, 0x701E)), alias: "TargetMaximumLuminance", vr: FL },
    E { tag: Single(Tag(0x0028, 0x701F)), alias: "LuminanceValue", vr: FL },
    E { tag: Single(Tag(0x0028, 0x7020)), alias: "LuminanceResponseDescription", vr: LO },
    E { tag: Single(Tag(0x0028, 0x7021)), alias: "WhitePointFlag", vr: CS },
    E { tag: Single(Tag(0x0028, 0x7022)), alias: "DisplayDeviceTypeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x7023)), alias: "DisplaySubsystemSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x7024)), alias: "LuminanceResultSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x7025)), alias: "AmbientLightValueSource", vr: CS },
    E { tag: Single(Tag(0x0028, 0x7026)), alias: "MeasuredCharacteristics", vr: CS },
    E { tag: Single(Tag(0x0028, 0x7027)), alias: "LuminanceUniformityResultSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x7028)), alias: "VisualEvaluationTestSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x7029)), alias: "TestResult", vr: CS },
    E { tag: Single(Tag(0x0028, 0x702A)), alias: "TestResultComment", vr: LO },
    E { tag: Single(Tag(0x0028, 0x702B)), alias: "TestImageValidation", vr: CS },
    E { tag: Single(Tag(0x0028, 0x702C)), alias: "TestPatternCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x702D)), alias: "MeasurementPatternCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x702E)), alias: "VisualEvaluationMethodCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x7FE0)), alias: "PixelDataProviderURL", vr: UR },
    E { tag: Single(Tag(0x0028, 0x9001)), alias: "DataPointRows", vr: UL },
    E { tag: Single(Tag(0x0028, 0x9002)), alias: "DataPointColumns", vr: UL },
    E { tag: Single(Tag(0x0028, 0x9003)), alias: "SignalDomainColumns", vr: CS },
    E { tag: Single(Tag(0x0028, 0x9099)), alias: "LargestMonochromePixelValue", vr: US }, // RET (2003)
    E { tag: Single(Tag(0x0028, 0x9108)), alias: "DataRepresentation", vr: CS },
    E { tag: Single(Tag(0x0028, 0x9110)), alias: "PixelMeasuresSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x9132)), alias: "FrameVOILUTSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x9145)), alias: "PixelValueTransformationSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x9235)), alias: "SignalDomainRows", vr: CS },
    E { tag: Single(Tag(0x0028, 0x9411)), alias: "DisplayFilterPercentage", vr: FL },
    E { tag: Single(Tag(0x0028, 0x9415)), alias: "FramePixelShiftSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x9416)), alias: "SubtractionItemID", vr: US },
    E { tag: Single(Tag(0x0028, 0x9422)), alias: "PixelIntensityRelationshipLUTSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x9443)), alias: "FramePixelDataPropertiesSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x9444)), alias: "GeometricalProperties", vr: CS },
    E { tag: Single(Tag(0x0028, 0x9445)), alias: "GeometricMaximumDistortion", vr: FL },
    E { tag: Single(Tag(0x0028, 0x9446)), alias: "ImageProcessingApplied", vr: CS },
    E { tag: Single(Tag(0x0028, 0x9454)), alias: "MaskSelectionMode", vr: CS },
    E { tag: Single(Tag(0x0028, 0x9474)), alias: "LUTFunction", vr: CS },
    E { tag: Single(Tag(0x0028, 0x9478)), alias: "MaskVisibilityPercentage", vr: FL },
    E { tag: Single(Tag(0x0028, 0x9501)), alias: "PixelShiftSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x9502)), alias: "RegionPixelShiftSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x9503)), alias: "VerticesOfTheRegion", vr: SS },
    E { tag: Single(Tag(0x0028, 0x9505)), alias: "MultiFramePresentationSequence", vr: SQ },
    E { tag: Single(Tag(0x0028, 0x9506)), alias: "PixelShiftFrameRange", vr: US },
    E { tag: Single(Tag(0x0028, 0x9507)), alias: "LUTFrameRange", vr: US },
    E { tag: Single(Tag(0x0028, 0x9520)), alias: "ImageToEquipmentMappingMatrix", vr: DS },
    E { tag: Single(Tag(0x0028, 0x9537)), alias: "EquipmentCoordinateSystemIdentification", vr: CS },
    E { tag: Single(Tag(0x0032, 0x000A)), alias: "StudyStatusID", vr: CS }, // RET (2004)
    E { tag: Single(Tag(0x0032, 0x000C)), alias: "StudyPriorityID", vr: CS }, // RET (2004)
    E { tag: Single(Tag(0x0032, 0x0012)), alias: "StudyIDIssuer", vr: LO }, // RET (2004)
    E { tag: Single(Tag(0x0032, 0x0032)), alias: "StudyVerifiedDate", vr: DA }, // RET (2004)
    E { tag: Single(Tag(0x0032, 0x0033)), alias: "StudyVerifiedTime", vr: TM }, // RET (2004)
    E { tag: Single(Tag(0x0032, 0x0034)), alias: "StudyReadDate", vr: DA }, // RET (2004)
    E { tag: Single(Tag(0x0032, 0x0035)), alias: "StudyReadTime", vr: TM }, // RET (2004)
    E { tag: Single(Tag(0x0032, 0x1000)), alias: "ScheduledStudyStartDate", vr: DA }, // RET (2004)
    E { tag: Single(Tag(0x0032, 0x1001)), alias: "ScheduledStudyStartTime", vr: TM }, // RET (2004)
    E { tag: Single(Tag(0x0032, 0x1010)), alias: "ScheduledStudyStopDate", vr: DA }, // RET (2004)
    E { tag: Single(Tag(0x0032, 0x1011)), alias: "ScheduledStudyStopTime", vr: TM }, // RET (2004)
    E { tag: Single(Tag(0x0032, 0x1020)), alias: "ScheduledStudyLocation", vr: LO }, // RET (2004)
    E { tag: Single(Tag(0x0032, 0x1021)), alias: "ScheduledStudyLocationAETitle", vr: AE }, // RET (2004)
    E { tag: Single(Tag(0x0032, 0x1030)), alias: "ReasonForStudy", vr: LO }, // RET (2004)
    E { tag: Single(Tag(0x0032, 0x1031)), alias: "RequestingPhysicianIdentificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0032, 0x1032)), alias: "RequestingPhysician", vr: PN },
    E { tag: Single(Tag(0x0032, 0x1033)), alias: "RequestingService", vr: LO },
    E { tag: Single(Tag(0x0032, 0x1034)), alias: "RequestingServiceCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0032, 0x1040)), alias: "StudyArrivalDate", vr: DA }, // RET (2004)
    E { tag: Single(Tag(0x0032, 0x1041)), alias: "StudyArrivalTime", vr: TM }, // RET (2004)
    E { tag: Single(Tag(0x0032, 0x1050)), alias: "StudyCompletionDate", vr: DA }, // RET (2004)
    E { tag: Single(Tag(0x0032, 0x1051)), alias: "StudyCompletionTime", vr: TM }, // RET (2004)
    E { tag: Single(Tag(0x0032, 0x1055)), alias: "StudyComponentStatusID", vr: CS }, // RET (2004)
    E { tag: Single(Tag(0x0032, 0x1060)), alias: "RequestedProcedureDescription", vr: LO },
    E { tag: Single(Tag(0x0032, 0x1064)), alias: "RequestedProcedureCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0032, 0x1066)), alias: "ReasonForVisit", vr: UT },
    E { tag: Single(Tag(0x0032, 0x1067)), alias: "ReasonForVisitCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0032, 0x1070)), alias: "RequestedContrastAgent", vr: LO },
    E { tag: Single(Tag(0x0032, 0x4000)), alias: "StudyComments", vr: LT }, // RET (2007)
    E { tag: Single(Tag(0x0038, 0x0004)), alias: "ReferencedPatientAliasSequence", vr: SQ },
    E { tag: Single(Tag(0x0038, 0x0008)), alias: "VisitStatusID", vr: CS },
    E { tag: Single(Tag(0x0038, 0x0010)), alias: "AdmissionID", vr: LO },
    E { tag: Single(Tag(0x0038, 0x0011)), alias: "IssuerOfAdmissionID", vr: LO }, // RET (2008)
    E { tag: Single(Tag(0x0038, 0x0014)), alias: "IssuerOfAdmissionIDSequence", vr: SQ },
    E { tag: Single(Tag(0x0038, 0x0016)), alias: "RouteOfAdmissions", vr: LO },
    E { tag: Single(Tag(0x0038, 0x001A)), alias: "ScheduledAdmissionDate", vr: DA }, // RET (2004)
    E { tag: Single(Tag(0x0038, 0x001B)), alias: "ScheduledAdmissionTime", vr: TM }, // RET (2004)
    E { tag: Single(Tag(0x0038, 0x001C)), alias: "ScheduledDischargeDate", vr: DA }, // RET (2004)
    E { tag: Single(Tag(0x0038, 0x001D)), alias: "ScheduledDischargeTime", vr: TM }, // RET (2004)
    E { tag: Single(Tag(0x0038, 0x001E)), alias: "ScheduledPatientInstitutionResidence", vr: LO }, // RET (2004)
    E { tag: Single(Tag(0x0038, 0x0020)), alias: "AdmittingDate", vr: DA },
    E { tag: Single(Tag(0x0038, 0x0021)), alias: "AdmittingTime", vr: TM },
    E { tag: Single(Tag(0x0038, 0x0030)), alias: "DischargeDate", vr: DA }, // RET (2004)
    E { tag: Single(Tag(0x0038, 0x0032)), alias: "DischargeTime", vr: TM }, // RET (2004)
    E { tag: Single(Tag(0x0038, 0x0040)), alias: "DischargeDiagnosisDescription", vr: LO }, // RET (2004)
    E { tag: Single(Tag(0x0038, 0x0044)), alias: "DischargeDiagnosisCodeSequence", vr: SQ }, // RET (2004)
    E { tag: Single(Tag(0x0038, 0x0050)), alias: "SpecialNeeds", vr: LO },
    E { tag: Single(Tag(0x0038, 0x0060)), alias: "ServiceEpisodeID", vr: LO },
    E { tag: Single(Tag(0x0038, 0x0061)), alias: "IssuerOfServiceEpisodeID", vr: LO }, // RET (2008)
    E { tag: Single(Tag(0x0038, 0x0062)), alias: "ServiceEpisodeDescription", vr: LO },
    E { tag: Single(Tag(0x0038, 0x0064)), alias: "IssuerOfServiceEpisodeIDSequence", vr: SQ },
    E { tag: Single(Tag(0x0038, 0x0100)), alias: "PertinentDocumentsSequence", vr: SQ },
    E { tag: Single(Tag(0x0038, 0x0101)), alias: "PertinentResourcesSequence", vr: SQ },
    E { tag: Single(Tag(0x0038, 0x0102)), alias: "ResourceDescription", vr: LO },
    E { tag: Single(Tag(0x0038, 0x0300)), alias: "CurrentPatientLocation", vr: LO },
    E { tag: Single(Tag(0x0038, 0x0400)), alias: "PatientInstitutionResidence", vr: LO },
    E { tag: Single(Tag(0x0038, 0x0500)), alias: "PatientState", vr: LO },
    E { tag: Single(Tag(0x0038, 0x0502)), alias: "PatientClinicalTrialParticipationSequence", vr: SQ },
    E { tag: Single(Tag(0x0038, 0x4000)), alias: "VisitComments", vr: LT },
    E { tag: Single(Tag(0x003A, 0x0004)), alias: "WaveformOriginality", vr: CS },
    E { tag: Single(Tag(0x003A, 0x0005)), alias: "NumberOfWaveformChannels", vr: US },
    E { tag: Single(Tag(0x003A, 0x0010)), alias: "NumberOfWaveformSamples", vr: UL },
    E { tag: Single(Tag(0x003A, 0x001A)), alias: "SamplingFrequency", vr: DS },
    E { tag: Single(Tag(0x003A, 0x0020)), alias: "MultiplexGroupLabel", vr: SH },
    E { tag: Single(Tag(0x003A, 0x0200)), alias: "ChannelDefinitionSequence", vr: SQ },
    E { tag: Single(Tag(0x003A, 0x0202)), alias: "WaveformChannelNumber", vr: IS },
    E { tag: Single(Tag(0x003A, 0x0203)), alias: "ChannelLabel", vr: SH },
    E { tag: Single(Tag(0x003A, 0x0205)), alias: "ChannelStatus", vr: CS },
    E { tag: Single(Tag(0x003A, 0x0208)), alias: "ChannelSourceSequence", vr: SQ },
    E { tag: Single(Tag(0x003A, 0x0209)), alias: "ChannelSourceModifiersSequence", vr: SQ },
    E { tag: Single(Tag(0x003A, 0x020A)), alias: "SourceWaveformSequence", vr: SQ },
    E { tag: Single(Tag(0x003A, 0x020C)), alias: "ChannelDerivationDescription", vr: LO },
    E { tag: Single(Tag(0x003A, 0x0210)), alias: "ChannelSensitivity", vr: DS },
    E { tag: Single(Tag(0x003A, 0x0211)), alias: "ChannelSensitivityUnitsSequence", vr: SQ },
    E { tag: Single(Tag(0x003A, 0x0212)), alias: "ChannelSensitivityCorrectionFactor", vr: DS },
    E { tag: Single(Tag(0x003A, 0x0213)), alias: "ChannelBaseline", vr: DS },
    E { tag: Single(Tag(0x003A, 0x0214)), alias: "ChannelTimeSkew", vr: DS },
    E { tag: Single(Tag(0x003A, 0x0215)), alias: "ChannelSampleSkew", vr: DS },
    E { tag: Single(Tag(0x003A, 0x0218)), alias: "ChannelOffset", vr: DS },
    E { tag: Single(Tag(0x003A, 0x021A)), alias: "WaveformBitsStored", vr: US },
    E { tag: Single(Tag(0x003A, 0x0220)), alias: "FilterLowFrequency", vr: DS },
    E { tag: Single(Tag(0x003A, 0x0221)), alias: "FilterHighFrequency", vr: DS },
    E { tag: Single(Tag(0x003A, 0x0222)), alias: "NotchFilterFrequency", vr: DS },
    E { tag: Single(Tag(0x003A, 0x0223)), alias: "NotchFilterBandwidth", vr: DS },
    E { tag: Single(Tag(0x003A, 0x0230)), alias: "WaveformDataDisplayScale", vr: FL },
    E { tag: Single(Tag(0x003A, 0x0231)), alias: "WaveformDisplayBackgroundCIELabValue", vr: US },
    E { tag: Single(Tag(0x003A, 0x0240)), alias: "WaveformPresentationGroupSequence", vr: SQ },
    E { tag: Single(Tag(0x003A, 0x0241)), alias: "PresentationGroupNumber", vr: US },
    E { tag: Single(Tag(0x003A, 0x0242)), alias: "ChannelDisplaySequence", vr: SQ },
    E { tag: Single(Tag(0x003A, 0x0244)), alias: "ChannelRecommendedDisplayCIELabValue", vr: US },
    E { tag: Single(Tag(0x003A, 0x0245)), alias: "ChannelPosition", vr: FL },
    E { tag: Single(Tag(0x003A, 0x0246)), alias: "DisplayShadingFlag", vr: CS },
    E { tag: Single(Tag(0x003A, 0x0247)), alias: "FractionalChannelDisplayScale", vr: FL },
    E { tag: Single(Tag(0x003A, 0x0248)), alias: "AbsoluteChannelDisplayScale", vr: FL },
    E { tag: Single(Tag(0x003A, 0x0300)), alias: "MultiplexedAudioChannelsDescriptionCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x003A, 0x0301)), alias: "ChannelIdentificationCode", vr: IS },
    E { tag: Single(Tag(0x003A, 0x0302)), alias: "ChannelMode", vr: CS },
    E { tag: Single(Tag(0x0040, 0x0001)), alias: "ScheduledStationAETitle", vr: AE },
    E { tag: Single(Tag(0x0040, 0x0002)), alias: "ScheduledProcedureStepStartDate", vr: DA },
    E { tag: Single(Tag(0x0040, 0x0003)), alias: "ScheduledProcedureStepStartTime", vr: TM },
    E { tag: Single(Tag(0x0040, 0x0004)), alias: "ScheduledProcedureStepEndDate", vr: DA },
    E { tag: Single(Tag(0x0040, 0x0005)), alias: "ScheduledProcedureStepEndTime", vr: TM },
    E { tag: Single(Tag(0x0040, 0x0006)), alias: "ScheduledPerformingPhysicianName", vr: PN },
    E { tag: Single(Tag(0x0040, 0x0007)), alias: "ScheduledProcedureStepDescription", vr: LO },
    E { tag: Single(Tag(0x0040, 0x0008)), alias: "ScheduledProtocolCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x0009)), alias: "ScheduledProcedureStepID", vr: SH },
    E { tag: Single(Tag(0x0040, 0x000A)), alias: "StageCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x000B)), alias: "ScheduledPerformingPhysicianIdentificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x0010)), alias: "ScheduledStationName", vr: SH },
    E { tag: Single(Tag(0x0040, 0x0011)), alias: "ScheduledProcedureStepLocation", vr: SH },
    E { tag: Single(Tag(0x0040, 0x0012)), alias: "PreMedication", vr: LO },
    E { tag: Single(Tag(0x0040, 0x0020)), alias: "ScheduledProcedureStepStatus", vr: CS },
    E { tag: Single(Tag(0x0040, 0x0026)), alias: "OrderPlacerIdentifierSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x0027)), alias: "OrderFillerIdentifierSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x0031)), alias: "LocalNamespaceEntityID", vr: UT },
    E { tag: Single(Tag(0x0040, 0x0032)), alias: "UniversalEntityID", vr: UT },
    E { tag: Single(Tag(0x0040, 0x0033)), alias: "UniversalEntityIDType", vr: CS },
    E { tag: Single(Tag(0x0040, 0x0035)), alias: "IdentifierTypeCode", vr: CS },
    E { tag: Single(Tag(0x0040, 0x0036)), alias: "AssigningFacilitySequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x0039)), alias: "AssigningJurisdictionCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x003A)), alias: "AssigningAgencyOrDepartmentCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x0100)), alias: "ScheduledProcedureStepSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x0220)), alias: "ReferencedNonImageCompositeSOPInstanceSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x0241)), alias: "PerformedStationAETitle", vr: AE },
    E { tag: Single(Tag(0x0040, 0x0242)), alias: "PerformedStationName", vr: SH },
    E { tag: Single(Tag(0x0040, 0x0243)), alias: "PerformedLocation", vr: SH },
    E { tag: Single(Tag(0x0040, 0x0244)), alias: "PerformedProcedureStepStartDate", vr: DA },
    E { tag: Single(Tag(0x0040, 0x0245)), alias: "PerformedProcedureStepStartTime", vr: TM },
    E { tag: Single(Tag(0x0040, 0x0250)), alias: "PerformedProcedureStepEndDate", vr: DA },
    E { tag: Single(Tag(0x0040, 0x0251)), alias: "PerformedProcedureStepEndTime", vr: TM },
    E { tag: Single(Tag(0x0040, 0x0252)), alias: "PerformedProcedureStepStatus", vr: CS },
    E { tag: Single(Tag(0x0040, 0x0253)), alias: "PerformedProcedureStepID", vr: SH },
    E { tag: Single(Tag(0x0040, 0x0254)), alias: "PerformedProcedureStepDescription", vr: LO },
    E { tag: Single(Tag(0x0040, 0x0255)), alias: "PerformedProcedureTypeDescription", vr: LO },
    E { tag: Single(Tag(0x0040, 0x0260)), alias: "PerformedProtocolCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x0261)), alias: "PerformedProtocolType", vr: CS },
    E { tag: Single(Tag(0x0040, 0x0270)), alias: "ScheduledStepAttributesSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x0275)), alias: "RequestAttributesSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x0280)), alias: "CommentsOnThePerformedProcedureStep", vr: ST },
    E { tag: Single(Tag(0x0040, 0x0281)), alias: "PerformedProcedureStepDiscontinuationReasonCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x0293)), alias: "QuantitySequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x0294)), alias: "Quantity", vr: DS },
    E { tag: Single(Tag(0x0040, 0x0295)), alias: "MeasuringUnitsSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x0296)), alias: "BillingItemSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x0300)), alias: "TotalTimeOfFluoroscopy", vr: US }, // RET (2017c)
    E { tag: Single(Tag(0x0040, 0x0301)), alias: "TotalNumberOfExposures", vr: US }, // RET (2017c)
    E { tag: Single(Tag(0x0040, 0x0302)), alias: "EntranceDose", vr: US },
    E { tag: Single(Tag(0x0040, 0x0303)), alias: "ExposedArea", vr: US },
    E { tag: Single(Tag(0x0040, 0x0306)), alias: "DistanceSourceToEntrance", vr: DS },
    E { tag: Single(Tag(0x0040, 0x0307)), alias: "DistanceSourceToSupport", vr: DS }, // RET (2001)
    E { tag: Single(Tag(0x0040, 0x030E)), alias: "ExposureDoseSequence", vr: SQ }, // RET (2017c)
    E { tag: Single(Tag(0x0040, 0x0310)), alias: "CommentsOnRadiationDose", vr: ST },
    E { tag: Single(Tag(0x0040, 0x0312)), alias: "XRayOutput", vr: DS },
    E { tag: Single(Tag(0x0040, 0x0314)), alias: "HalfValueLayer", vr: DS },
    E { tag: Single(Tag(0x0040, 0x0316)), alias: "OrganDose", vr: DS },
    E { tag: Single(Tag(0x0040, 0x0318)), alias: "OrganExposed", vr: CS },
    E { tag: Single(Tag(0x0040, 0x0320)), alias: "BillingProcedureStepSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x0321)), alias: "FilmConsumptionSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x0324)), alias: "BillingSuppliesAndDevicesSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x0330)), alias: "ReferencedProcedureStepSequence", vr: SQ }, // RET (2001)
    E { tag: Single(Tag(0x0040, 0x0340)), alias: "PerformedSeriesSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x0400)), alias: "CommentsOnTheScheduledProcedureStep", vr: LT },
    E { tag: Single(Tag(0x0040, 0x0440)), alias: "ProtocolContextSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x0441)), alias: "ContentItemModifierSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x0500)), alias: "ScheduledSpecimenSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x050A)), alias: "SpecimenAccessionNumber", vr: LO }, // RET (2008)
    E { tag: Single(Tag(0x0040, 0x0512)), alias: "ContainerIdentifier", vr: LO },
    E { tag: Single(Tag(0x0040, 0x0513)), alias: "IssuerOfTheContainerIdentifierSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x0515)), alias: "AlternateContainerIdentifierSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x0518)), alias: "ContainerTypeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x051A)), alias: "ContainerDescription", vr: LO },
    E { tag: Single(Tag(0x0040, 0x0520)), alias: "ContainerComponentSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x0550)), alias: "SpecimenSequence", vr: SQ }, // RET (2008)
    E { tag: Single(Tag(0x0040, 0x0551)), alias: "SpecimenIdentifier", vr: LO },
    E { tag: Single(Tag(0x0040, 0x0552)), alias: "SpecimenDescriptionSequenceTrial", vr: SQ }, // RET (2007)
    E { tag: Single(Tag(0x0040, 0x0553)), alias: "SpecimenDescriptionTrial", vr: ST }, // RET (2007)
    E { tag: Single(Tag(0x0040, 0x0554)), alias: "SpecimenUID", vr: UI },
    E { tag: Single(Tag(0x0040, 0x0555)), alias: "AcquisitionContextSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x0556)), alias: "AcquisitionContextDescription", vr: ST },
    E { tag: Single(Tag(0x0040, 0x059A)), alias: "SpecimenTypeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x0560)), alias: "SpecimenDescriptionSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x0562)), alias: "IssuerOfTheSpecimenIdentifierSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x0600)), alias: "SpecimenShortDescription", vr: LO },
    E { tag: Single(Tag(0x0040, 0x0602)), alias: "SpecimenDetailedDescription", vr: UT },
    E { tag: Single(Tag(0x0040, 0x0610)), alias: "SpecimenPreparationSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x0612)), alias: "SpecimenPreparationStepContentItemSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x0620)), alias: "SpecimenLocalizationContentItemSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x06FA)), alias: "SlideIdentifier", vr: LO }, // RET (2008)
    E { tag: Single(Tag(0x0040, 0x0710)), alias: "WholeSlideMicroscopyImageFrameTypeSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x071A)), alias: "ImageCenterPointCoordinatesSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x072A)), alias: "XOffsetInSlideCoordinateSystem", vr: DS },
    E { tag: Single(Tag(0x0040, 0x073A)), alias: "YOffsetInSlideCoordinateSystem", vr: DS },
    E { tag: Single(Tag(0x0040, 0x074A)), alias: "ZOffsetInSlideCoordinateSystem", vr: DS },
    E { tag: Single(Tag(0x0040, 0x08D8)), alias: "PixelSpacingSequence", vr: SQ }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0x08DA)), alias: "CoordinateSystemAxisCodeSequence", vr: SQ }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0x08EA)), alias: "MeasurementUnitsCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x09F8)), alias: "VitalStainCodeSequenceTrial", vr: SQ }, // RET (2007)
    E { tag: Single(Tag(0x0040, 0x1001)), alias: "RequestedProcedureID", vr: SH },
    E { tag: Single(Tag(0x0040, 0x1002)), alias: "ReasonForTheRequestedProcedure", vr: LO },
    E { tag: Single(Tag(0x0040, 0x1003)), alias: "RequestedProcedurePriority", vr: SH },
    E { tag: Single(Tag(0x0040, 0x1004)), alias: "PatientTransportArrangements", vr: LO },
    E { tag: Single(Tag(0x0040, 0x1005)), alias: "RequestedProcedureLocation", vr: LO },
    E { tag: Single(Tag(0x0040, 0x1006)), alias: "PlacerOrderNumberProcedure", vr: SH }, // RET (1998)
    E { tag: Single(Tag(0x0040, 0x1007)), alias: "FillerOrderNumberProcedure", vr: SH }, // RET (1998)
    E { tag: Single(Tag(0x0040, 0x1008)), alias: "ConfidentialityCode", vr: LO },
    E { tag: Single(Tag(0x0040, 0x1009)), alias: "ReportingPriority", vr: SH },
    E { tag: Single(Tag(0x0040, 0x100A)), alias: "ReasonForRequestedProcedureCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x1010)), alias: "NamesOfIntendedRecipientsOfResults", vr: PN },
    E { tag: Single(Tag(0x0040, 0x1011)), alias: "IntendedRecipientsOfResultsIdentificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x1012)), alias: "ReasonForPerformedProcedureCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x1060)), alias: "RequestedProcedureDescriptionTrial", vr: LO }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0x1101)), alias: "PersonIdentificationCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x1102)), alias: "PersonAddress", vr: ST },
    E { tag: Single(Tag(0x0040, 0x1103)), alias: "PersonTelephoneNumbers", vr: LO },
    E { tag: Single(Tag(0x0040, 0x1104)), alias: "PersonTelecomInformation", vr: LT },
    E { tag: Single(Tag(0x0040, 0x1400)), alias: "RequestedProcedureComments", vr: LT },
    E { tag: Single(Tag(0x0040, 0x2001)), alias: "ReasonForTheImagingServiceRequest", vr: LO }, // RET (2003)
    E { tag: Single(Tag(0x0040, 0x2004)), alias: "IssueDateOfImagingServiceRequest", vr: DA },
    E { tag: Single(Tag(0x0040, 0x2005)), alias: "IssueTimeOfImagingServiceRequest", vr: TM },
    E { tag: Single(Tag(0x0040, 0x2006)), alias: "PlacerOrderNumberImagingServiceRequestRetired", vr: SH }, // RET (1998)
    E { tag: Single(Tag(0x0040, 0x2007)), alias: "FillerOrderNumberImagingServiceRequestRetired", vr: SH }, // RET (1998)
    E { tag: Single(Tag(0x0040, 0x2008)), alias: "OrderEnteredBy", vr: PN },
    E { tag: Single(Tag(0x0040, 0x2009)), alias: "OrderEntererLocation", vr: SH },
    E { tag: Single(Tag(0x0040, 0x2010)), alias: "OrderCallbackPhoneNumber", vr: SH },
    E { tag: Single(Tag(0x0040, 0x2011)), alias: "OrderCallbackTelecomInformation", vr: LT },
    E { tag: Single(Tag(0x0040, 0x2016)), alias: "PlacerOrderNumberImagingServiceRequest", vr: LO },
    E { tag: Single(Tag(0x0040, 0x2017)), alias: "FillerOrderNumberImagingServiceRequest", vr: LO },
    E { tag: Single(Tag(0x0040, 0x2400)), alias: "ImagingServiceRequestComments", vr: LT },
    E { tag: Single(Tag(0x0040, 0x3001)), alias: "ConfidentialityConstraintOnPatientDataDescription", vr: LO },
    E { tag: Single(Tag(0x0040, 0x4001)), alias: "GeneralPurposeScheduledProcedureStepStatus", vr: CS }, // RET (2011)
    E { tag: Single(Tag(0x0040, 0x4002)), alias: "GeneralPurposePerformedProcedureStepStatus", vr: CS }, // RET (2011)
    E { tag: Single(Tag(0x0040, 0x4003)), alias: "GeneralPurposeScheduledProcedureStepPriority", vr: CS }, // RET (2011)
    E { tag: Single(Tag(0x0040, 0x4004)), alias: "ScheduledProcessingApplicationsCodeSequence", vr: SQ }, // RET (2011)
    E { tag: Single(Tag(0x0040, 0x4005)), alias: "ScheduledProcedureStepStartDateTime", vr: DT },
    E { tag: Single(Tag(0x0040, 0x4006)), alias: "MultipleCopiesFlag", vr: CS }, // RET (2011)
    E { tag: Single(Tag(0x0040, 0x4007)), alias: "PerformedProcessingApplicationsCodeSequence", vr: SQ }, // RET (2017e)
    E { tag: Single(Tag(0x0040, 0x4008)), alias: "ScheduledProcedureStepExpirationDateTime", vr: DT },
    E { tag: Single(Tag(0x0040, 0x4009)), alias: "HumanPerformerCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x4010)), alias: "ScheduledProcedureStepModificationDateTime", vr: DT },
    E { tag: Single(Tag(0x0040, 0x4011)), alias: "ExpectedCompletionDateTime", vr: DT },
    E { tag: Single(Tag(0x0040, 0x4015)), alias: "ResultingGeneralPurposePerformedProcedureStepsSequence", vr: SQ }, // RET (2011)
    E { tag: Single(Tag(0x0040, 0x4016)), alias: "ReferencedGeneralPurposeScheduledProcedureStepSequence", vr: SQ }, // RET (2011)
    E { tag: Single(Tag(0x0040, 0x4018)), alias: "ScheduledWorkitemCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x4019)), alias: "PerformedWorkitemCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x4020)), alias: "InputAvailabilityFlag", vr: CS }, // RET (2017b)
    E { tag: Single(Tag(0x0040, 0x4021)), alias: "InputInformationSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x4022)), alias: "RelevantInformationSequence", vr: SQ }, // RET (2011)
    E { tag: Single(Tag(0x0040, 0x4023)), alias: "ReferencedGeneralPurposeScheduledProcedureStepTransactionUID", vr: UI }, // RET (2011)
    E { tag: Single(Tag(0x0040, 0x4025)), alias: "ScheduledStationNameCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x4026)), alias: "ScheduledStationClassCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x4027)), alias: "ScheduledStationGeographicLocationCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x4028)), alias: "PerformedStationNameCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x4029)), alias: "PerformedStationClassCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x4030)), alias: "PerformedStationGeographicLocationCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x4031)), alias: "RequestedSubsequentWorkitemCodeSequence", vr: SQ }, // RET (2011)
    E { tag: Single(Tag(0x0040, 0x4032)), alias: "NonDICOMOutputCodeSequence", vr: SQ }, // RET (2011)
    E { tag: Single(Tag(0x0040, 0x4033)), alias: "OutputInformationSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x4034)), alias: "ScheduledHumanPerformersSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x4035)), alias: "ActualHumanPerformersSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x4036)), alias: "HumanPerformerOrganization", vr: LO },
    E { tag: Single(Tag(0x0040, 0x4037)), alias: "HumanPerformerName", vr: PN },
    E { tag: Single(Tag(0x0040, 0x4040)), alias: "RawDataHandling", vr: CS },
    E { tag: Single(Tag(0x0040, 0x4041)), alias: "InputReadinessState", vr: CS },
    E { tag: Single(Tag(0x0040, 0x4050)), alias: "PerformedProcedureStepStartDateTime", vr: DT },
    E { tag: Single(Tag(0x0040, 0x4051)), alias: "PerformedProcedureStepEndDateTime", vr: DT },
    E { tag: Single(Tag(0x0040, 0x4052)), alias: "ProcedureStepCancellationDateTime", vr: DT },
    E { tag: Single(Tag(0x0040, 0x4070)), alias: "OutputDestinationSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x4071)), alias: "DICOMStorageSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x4072)), alias: "STOWRSStorageSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x4073)), alias: "StorageURL", vr: UR },
    E { tag: Single(Tag(0x0040, 0x4074)), alias: "XDSStorageSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x8302)), alias: "EntranceDoseInmGy", vr: DS },
    E { tag: Single(Tag(0x0040, 0x8303)), alias: "EntranceDoseDerivation", vr: CS },
    E { tag: Single(Tag(0x0040, 0x9092)), alias: "ParametricMapFrameTypeSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x9094)), alias: "ReferencedImageRealWorldValueMappingSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x9096)), alias: "RealWorldValueMappingSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x9098)), alias: "PixelValueMappingCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x9210)), alias: "LUTLabel", vr: SH },
    E { tag: Single(Tag(0x0040, 0x9211)), alias: "RealWorldValueLastValueMapped", vr: US /* or SS */ },
    E { tag: Single(Tag(0x0040, 0x9212)), alias: "RealWorldValueLUTData", vr: FD },
    E { tag: Single(Tag(0x0040, 0x9213)), alias: "DoubleFloatRealWorldValueLastValueMapped", vr: FD },
    E { tag: Single(Tag(0x0040, 0x9214)), alias: "DoubleFloatRealWorldValueFirstValueMapped", vr: FD },
    E { tag: Single(Tag(0x0040, 0x9216)), alias: "RealWorldValueFirstValueMapped", vr: US /* or SS */ },
    E { tag: Single(Tag(0x0040, 0x9220)), alias: "QuantityDefinitionSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0x9224)), alias: "RealWorldValueIntercept", vr: FD },
    E { tag: Single(Tag(0x0040, 0x9225)), alias: "RealWorldValueSlope", vr: FD },
    E { tag: Single(Tag(0x0040, 0xA007)), alias: "FindingsFlagTrial", vr: CS }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA010)), alias: "RelationshipType", vr: CS },
    E { tag: Single(Tag(0x0040, 0xA020)), alias: "FindingsSequenceTrial", vr: SQ }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA021)), alias: "FindingsGroupUIDTrial", vr: UI }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA022)), alias: "ReferencedFindingsGroupUIDTrial", vr: UI }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA023)), alias: "FindingsGroupRecordingDateTrial", vr: DA }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA024)), alias: "FindingsGroupRecordingTimeTrial", vr: TM }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA026)), alias: "FindingsSourceCategoryCodeSequenceTrial", vr: SQ }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA027)), alias: "VerifyingOrganization", vr: LO },
    E { tag: Single(Tag(0x0040, 0xA028)), alias: "DocumentingOrganizationIdentifierCodeSequenceTrial", vr: SQ }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA030)), alias: "VerificationDateTime", vr: DT },
    E { tag: Single(Tag(0x0040, 0xA032)), alias: "ObservationDateTime", vr: DT },
    E { tag: Single(Tag(0x0040, 0xA040)), alias: "ValueType", vr: CS },
    E { tag: Single(Tag(0x0040, 0xA043)), alias: "ConceptNameCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0xA047)), alias: "MeasurementPrecisionDescriptionTrial", vr: LO }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA050)), alias: "ContinuityOfContent", vr: CS },
    E { tag: Single(Tag(0x0040, 0xA057)), alias: "UrgencyOrPriorityAlertsTrial", vr: CS }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA060)), alias: "SequencingIndicatorTrial", vr: LO }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA066)), alias: "DocumentIdentifierCodeSequenceTrial", vr: SQ }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA067)), alias: "DocumentAuthorTrial", vr: PN }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA068)), alias: "DocumentAuthorIdentifierCodeSequenceTrial", vr: SQ }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA070)), alias: "IdentifierCodeSequenceTrial", vr: SQ }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA073)), alias: "VerifyingObserverSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0xA074)), alias: "ObjectBinaryIdentifierTrial", vr: OB }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA075)), alias: "VerifyingObserverName", vr: PN },
    E { tag: Single(Tag(0x0040, 0xA076)), alias: "DocumentingObserverIdentifierCodeSequenceTrial", vr: SQ }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA078)), alias: "AuthorObserverSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0xA07A)), alias: "ParticipantSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0xA07C)), alias: "CustodialOrganizationSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0xA080)), alias: "ParticipationType", vr: CS },
    E { tag: Single(Tag(0x0040, 0xA082)), alias: "ParticipationDateTime", vr: DT },
    E { tag: Single(Tag(0x0040, 0xA084)), alias: "ObserverType", vr: CS },
    E { tag: Single(Tag(0x0040, 0xA085)), alias: "ProcedureIdentifierCodeSequenceTrial", vr: SQ }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA088)), alias: "VerifyingObserverIdentificationCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0xA089)), alias: "ObjectDirectoryBinaryIdentifierTrial", vr: OB }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA090)), alias: "EquivalentCDADocumentSequence", vr: SQ }, // RET (2006)
    E { tag: Single(Tag(0x0040, 0xA0B0)), alias: "ReferencedWaveformChannels", vr: US },
    E { tag: Single(Tag(0x0040, 0xA110)), alias: "DateOfDocumentOrVerbalTransactionTrial", vr: DA }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA112)), alias: "TimeOfDocumentCreationOrVerbalTransactionTrial", vr: TM }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA120)), alias: "DateTime", vr: DT },
    E { tag: Single(Tag(0x0040, 0xA121)), alias: "Date", vr: DA },
    E { tag: Single(Tag(0x0040, 0xA122)), alias: "Time", vr: TM },
    E { tag: Single(Tag(0x0040, 0xA123)), alias: "PersonName", vr: PN },
    E { tag: Single(Tag(0x0040, 0xA124)), alias: "UID", vr: UI },
    E { tag: Single(Tag(0x0040, 0xA125)), alias: "ReportStatusIDTrial", vr: CS }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA130)), alias: "TemporalRangeType", vr: CS },
    E { tag: Single(Tag(0x0040, 0xA132)), alias: "ReferencedSamplePositions", vr: UL },
    E { tag: Single(Tag(0x0040, 0xA136)), alias: "ReferencedFrameNumbers", vr: US }, // RET (2019)
    E { tag: Single(Tag(0x0040, 0xA138)), alias: "ReferencedTimeOffsets", vr: DS },
    E { tag: Single(Tag(0x0040, 0xA13A)), alias: "ReferencedDateTime", vr: DT },
    E { tag: Single(Tag(0x0040, 0xA160)), alias: "TextValue", vr: UT },
    E { tag: Single(Tag(0x0040, 0xA161)), alias: "FloatingPointValue", vr: FD },
    E { tag: Single(Tag(0x0040, 0xA162)), alias: "RationalNumeratorValue", vr: SL },
    E { tag: Single(Tag(0x0040, 0xA163)), alias: "RationalDenominatorValue", vr: UL },
    E { tag: Single(Tag(0x0040, 0xA167)), alias: "ObservationCategoryCodeSequenceTrial", vr: SQ }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA168)), alias: "ConceptCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0xA16A)), alias: "BibliographicCitationTrial", vr: ST }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA170)), alias: "PurposeOfReferenceCodeSequence", vr: SQ }, // See Note
    E { tag: Single(Tag(0x0040, 0xA171)), alias: "ObservationUID", vr: UI },
    E { tag: Single(Tag(0x0040, 0xA172)), alias: "ReferencedObservationUIDTrial", vr: UI }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA173)), alias: "ReferencedObservationClassTrial", vr: CS }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA174)), alias: "ReferencedObjectObservationClassTrial", vr: CS }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA180)), alias: "AnnotationGroupNumber", vr: US },
    E { tag: Single(Tag(0x0040, 0xA192)), alias: "ObservationDateTrial", vr: DA }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA193)), alias: "ObservationTimeTrial", vr: TM }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA194)), alias: "MeasurementAutomationTrial", vr: CS }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA195)), alias: "ModifierCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0xA224)), alias: "IdentificationDescriptionTrial", vr: ST }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA290)), alias: "CoordinatesSetGeometricTypeTrial", vr: CS }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA296)), alias: "AlgorithmCodeSequenceTrial", vr: SQ }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA297)), alias: "AlgorithmDescriptionTrial", vr: ST }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA29A)), alias: "PixelCoordinatesSetTrial", vr: SL }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA300)), alias: "MeasuredValueSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0xA301)), alias: "NumericValueQualifierCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0xA307)), alias: "CurrentObserverTrial", vr: PN }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA30A)), alias: "NumericValue", vr: DS },
    E { tag: Single(Tag(0x0040, 0xA313)), alias: "ReferencedAccessionSequenceTrial", vr: SQ }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA33A)), alias: "ReportStatusCommentTrial", vr: ST }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA340)), alias: "ProcedureContextSequenceTrial", vr: SQ }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA352)), alias: "VerbalSourceTrial", vr: PN }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA353)), alias: "AddressTrial", vr: ST }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA354)), alias: "TelephoneNumberTrial", vr: LO }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA358)), alias: "VerbalSourceIdentifierCodeSequenceTrial", vr: SQ }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA360)), alias: "PredecessorDocumentsSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0xA370)), alias: "ReferencedRequestSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0xA372)), alias: "PerformedProcedureCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0xA375)), alias: "CurrentRequestedProcedureEvidenceSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0xA380)), alias: "ReportDetailSequenceTrial", vr: SQ }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA385)), alias: "PertinentOtherEvidenceSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0xA390)), alias: "HL7StructuredDocumentReferenceSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0xA402)), alias: "ObservationSubjectUIDTrial", vr: UI }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA403)), alias: "ObservationSubjectClassTrial", vr: CS }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA404)), alias: "ObservationSubjectTypeCodeSequenceTrial", vr: SQ }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA491)), alias: "CompletionFlag", vr: CS },
    E { tag: Single(Tag(0x0040, 0xA492)), alias: "CompletionFlagDescription", vr: LO },
    E { tag: Single(Tag(0x0040, 0xA493)), alias: "VerificationFlag", vr: CS },
    E { tag: Single(Tag(0x0040, 0xA494)), alias: "ArchiveRequested", vr: CS },
    E { tag: Single(Tag(0x0040, 0xA496)), alias: "PreliminaryFlag", vr: CS },
    E { tag: Single(Tag(0x0040, 0xA504)), alias: "ContentTemplateSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0xA525)), alias: "IdenticalDocumentsSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0xA600)), alias: "ObservationSubjectContextFlagTrial", vr: CS }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA601)), alias: "ObserverContextFlagTrial", vr: CS }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA603)), alias: "ProcedureContextFlagTrial", vr: CS }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA730)), alias: "ContentSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0xA731)), alias: "RelationshipSequenceTrial", vr: SQ }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA732)), alias: "RelationshipTypeCodeSequenceTrial", vr: SQ }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA744)), alias: "LanguageCodeSequenceTrial", vr: SQ }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xA992)), alias: "UniformResourceLocatorTrial", vr: ST }, // RET (2009)
    E { tag: Single(Tag(0x0040, 0xB020)), alias: "WaveformAnnotationSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0xDB00)), alias: "TemplateIdentifier", vr: CS },
    E { tag: Single(Tag(0x0040, 0xDB06)), alias: "TemplateVersion", vr: DT }, // RET (2001)
    E { tag: Single(Tag(0x0040, 0xDB07)), alias: "TemplateLocalVersion", vr: DT }, // RET (2001)
    E { tag: Single(Tag(0x0040, 0xDB0B)), alias: "TemplateExtensionFlag", vr: CS }, // RET (2001)
    E { tag: Single(Tag(0x0040, 0xDB0C)), alias: "TemplateExtensionOrganizationUID", vr: UI }, // RET (2001)
    E { tag: Single(Tag(0x0040, 0xDB0D)), alias: "TemplateExtensionCreatorUID", vr: UI }, // RET (2001)
    E { tag: Single(Tag(0x0040, 0xDB73)), alias: "ReferencedContentItemIdentifier", vr: UL },
    E { tag: Single(Tag(0x0040, 0xE001)), alias: "HL7InstanceIdentifier", vr: ST },
    E { tag: Single(Tag(0x0040, 0xE004)), alias: "HL7DocumentEffectiveTime", vr: DT },
    E { tag: Single(Tag(0x0040, 0xE006)), alias: "HL7DocumentTypeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0xE008)), alias: "DocumentClassCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0xE010)), alias: "RetrieveURI", vr: UR },
    E { tag: Single(Tag(0x0040, 0xE011)), alias: "RetrieveLocationUID", vr: UI },
    E { tag: Single(Tag(0x0040, 0xE020)), alias: "TypeOfInstances", vr: CS },
    E { tag: Single(Tag(0x0040, 0xE021)), alias: "DICOMRetrievalSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0xE022)), alias: "DICOMMediaRetrievalSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0xE023)), alias: "WADORetrievalSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0xE024)), alias: "XDSRetrievalSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0xE025)), alias: "WADORSRetrievalSequence", vr: SQ },
    E { tag: Single(Tag(0x0040, 0xE030)), alias: "RepositoryUniqueID", vr: UI },
    E { tag: Single(Tag(0x0040, 0xE031)), alias: "HomeCommunityID", vr: UI },
    E { tag: Single(Tag(0x0042, 0x0010)), alias: "DocumentTitle", vr: ST },
    E { tag: Single(Tag(0x0042, 0x0011)), alias: "EncapsulatedDocument", vr: OB },
    E { tag: Single(Tag(0x0042, 0x0012)), alias: "MIMETypeOfEncapsulatedDocument", vr: LO },
    E { tag: Single(Tag(0x0042, 0x0013)), alias: "SourceInstanceSequence", vr: SQ },
    E { tag: Single(Tag(0x0042, 0x0014)), alias: "ListOfMIMETypes", vr: LO },
    E { tag: Single(Tag(0x0042, 0x0015)), alias: "EncapsulatedDocumentLength", vr: UL },
    E { tag: Single(Tag(0x0044, 0x0001)), alias: "ProductPackageIdentifier", vr: ST },
    E { tag: Single(Tag(0x0044, 0x0002)), alias: "SubstanceAdministrationApproval", vr: CS },
    E { tag: Single(Tag(0x0044, 0x0003)), alias: "ApprovalStatusFurtherDescription", vr: LT },
    E { tag: Single(Tag(0x0044, 0x0004)), alias: "ApprovalStatusDateTime", vr: DT },
    E { tag: Single(Tag(0x0044, 0x0007)), alias: "ProductTypeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0044, 0x0008)), alias: "ProductName", vr: LO },
    E { tag: Single(Tag(0x0044, 0x0009)), alias: "ProductDescription", vr: LT },
    E { tag: Single(Tag(0x0044, 0x000A)), alias: "ProductLotIdentifier", vr: LO },
    E { tag: Single(Tag(0x0044, 0x000B)), alias: "ProductExpirationDateTime", vr: DT },
    E { tag: Single(Tag(0x0044, 0x0010)), alias: "SubstanceAdministrationDateTime", vr: DT },
    E { tag: Single(Tag(0x0044, 0x0011)), alias: "SubstanceAdministrationNotes", vr: LO },
    E { tag: Single(Tag(0x0044, 0x0012)), alias: "SubstanceAdministrationDeviceID", vr: LO },
    E { tag: Single(Tag(0x0044, 0x0013)), alias: "ProductParameterSequence", vr: SQ },
    E { tag: Single(Tag(0x0044, 0x0019)), alias: "SubstanceAdministrationParameterSequence", vr: SQ },
    E { tag: Single(Tag(0x0044, 0x0100)), alias: "ApprovalSequence", vr: SQ },
    E { tag: Single(Tag(0x0044, 0x0101)), alias: "AssertionCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0044, 0x0102)), alias: "AssertionUID", vr: UI },
    E { tag: Single(Tag(0x0044, 0x0103)), alias: "AsserterIdentificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0044, 0x0104)), alias: "AssertionDateTime", vr: DT },
    E { tag: Single(Tag(0x0044, 0x0105)), alias: "AssertionExpirationDateTime", vr: DT },
    E { tag: Single(Tag(0x0044, 0x0106)), alias: "AssertionComments", vr: UT },
    E { tag: Single(Tag(0x0044, 0x0107)), alias: "RelatedAssertionSequence", vr: SQ },
    E { tag: Single(Tag(0x0044, 0x0108)), alias: "ReferencedAssertionUID", vr: UI },
    E { tag: Single(Tag(0x0044, 0x0109)), alias: "ApprovalSubjectSequence", vr: SQ },
    E { tag: Single(Tag(0x0044, 0x010A)), alias: "OrganizationalRoleCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0012)), alias: "LensDescription", vr: LO },
    E { tag: Single(Tag(0x0046, 0x0014)), alias: "RightLensSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0015)), alias: "LeftLensSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0016)), alias: "UnspecifiedLateralityLensSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0018)), alias: "CylinderSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0028)), alias: "PrismSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0030)), alias: "HorizontalPrismPower", vr: FD },
    E { tag: Single(Tag(0x0046, 0x0032)), alias: "HorizontalPrismBase", vr: CS },
    E { tag: Single(Tag(0x0046, 0x0034)), alias: "VerticalPrismPower", vr: FD },
    E { tag: Single(Tag(0x0046, 0x0036)), alias: "VerticalPrismBase", vr: CS },
    E { tag: Single(Tag(0x0046, 0x0038)), alias: "LensSegmentType", vr: CS },
    E { tag: Single(Tag(0x0046, 0x0040)), alias: "OpticalTransmittance", vr: FD },
    E { tag: Single(Tag(0x0046, 0x0042)), alias: "ChannelWidth", vr: FD },
    E { tag: Single(Tag(0x0046, 0x0044)), alias: "PupilSize", vr: FD },
    E { tag: Single(Tag(0x0046, 0x0046)), alias: "CornealSize", vr: FD },
    E { tag: Single(Tag(0x0046, 0x0047)), alias: "CornealSizeSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0050)), alias: "AutorefractionRightEyeSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0052)), alias: "AutorefractionLeftEyeSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0060)), alias: "DistancePupillaryDistance", vr: FD },
    E { tag: Single(Tag(0x0046, 0x0062)), alias: "NearPupillaryDistance", vr: FD },
    E { tag: Single(Tag(0x0046, 0x0063)), alias: "IntermediatePupillaryDistance", vr: FD },
    E { tag: Single(Tag(0x0046, 0x0064)), alias: "OtherPupillaryDistance", vr: FD },
    E { tag: Single(Tag(0x0046, 0x0070)), alias: "KeratometryRightEyeSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0071)), alias: "KeratometryLeftEyeSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0074)), alias: "SteepKeratometricAxisSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0075)), alias: "RadiusOfCurvature", vr: FD },
    E { tag: Single(Tag(0x0046, 0x0076)), alias: "KeratometricPower", vr: FD },
    E { tag: Single(Tag(0x0046, 0x0077)), alias: "KeratometricAxis", vr: FD },
    E { tag: Single(Tag(0x0046, 0x0080)), alias: "FlatKeratometricAxisSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0092)), alias: "BackgroundColor", vr: CS },
    E { tag: Single(Tag(0x0046, 0x0094)), alias: "Optotype", vr: CS },
    E { tag: Single(Tag(0x0046, 0x0095)), alias: "OptotypePresentation", vr: CS },
    E { tag: Single(Tag(0x0046, 0x0097)), alias: "SubjectiveRefractionRightEyeSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0098)), alias: "SubjectiveRefractionLeftEyeSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0100)), alias: "AddNearSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0101)), alias: "AddIntermediateSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0102)), alias: "AddOtherSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0104)), alias: "AddPower", vr: FD },
    E { tag: Single(Tag(0x0046, 0x0106)), alias: "ViewingDistance", vr: FD },
    E { tag: Single(Tag(0x0046, 0x0110)), alias: "CorneaMeasurementsSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0111)), alias: "SourceOfCorneaMeasurementDataCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0112)), alias: "SteepCornealAxisSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0113)), alias: "FlatCornealAxisSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0114)), alias: "CornealPower", vr: FD },
    E { tag: Single(Tag(0x0046, 0x0115)), alias: "CornealAxis", vr: FD },
    E { tag: Single(Tag(0x0046, 0x0116)), alias: "CorneaMeasurementMethodCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0117)), alias: "RefractiveIndexOfCornea", vr: FL },
    E { tag: Single(Tag(0x0046, 0x0118)), alias: "RefractiveIndexOfAqueousHumor", vr: FL },
    E { tag: Single(Tag(0x0046, 0x0121)), alias: "VisualAcuityTypeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0122)), alias: "VisualAcuityRightEyeSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0123)), alias: "VisualAcuityLeftEyeSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0124)), alias: "VisualAcuityBothEyesOpenSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0125)), alias: "ViewingDistanceType", vr: CS },
    E { tag: Single(Tag(0x0046, 0x0135)), alias: "VisualAcuityModifiers", vr: SS },
    E { tag: Single(Tag(0x0046, 0x0137)), alias: "DecimalVisualAcuity", vr: FD },
    E { tag: Single(Tag(0x0046, 0x0139)), alias: "OptotypeDetailedDefinition", vr: LO },
    E { tag: Single(Tag(0x0046, 0x0145)), alias: "ReferencedRefractiveMeasurementsSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0146)), alias: "SpherePower", vr: FD },
    E { tag: Single(Tag(0x0046, 0x0147)), alias: "CylinderPower", vr: FD },
    E { tag: Single(Tag(0x0046, 0x0201)), alias: "CornealTopographySurface", vr: CS },
    E { tag: Single(Tag(0x0046, 0x0202)), alias: "CornealVertexLocation", vr: FL },
    E { tag: Single(Tag(0x0046, 0x0203)), alias: "PupilCentroidXCoordinate", vr: FL },
    E { tag: Single(Tag(0x0046, 0x0204)), alias: "PupilCentroidYCoordinate", vr: FL },
    E { tag: Single(Tag(0x0046, 0x0205)), alias: "EquivalentPupilRadius", vr: FL },
    E { tag: Single(Tag(0x0046, 0x0207)), alias: "CornealTopographyMapTypeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0208)), alias: "VerticesOfTheOutlineOfPupil", vr: IS },
    E { tag: Single(Tag(0x0046, 0x0210)), alias: "CornealTopographyMappingNormalsSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0211)), alias: "MaximumCornealCurvatureSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0212)), alias: "MaximumCornealCurvature", vr: FL },
    E { tag: Single(Tag(0x0046, 0x0213)), alias: "MaximumCornealCurvatureLocation", vr: FL },
    E { tag: Single(Tag(0x0046, 0x0215)), alias: "MinimumKeratometricSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0218)), alias: "SimulatedKeratometricCylinderSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0220)), alias: "AverageCornealPower", vr: FL },
    E { tag: Single(Tag(0x0046, 0x0224)), alias: "CornealISValue", vr: FL },
    E { tag: Single(Tag(0x0046, 0x0227)), alias: "AnalyzedArea", vr: FL },
    E { tag: Single(Tag(0x0046, 0x0230)), alias: "SurfaceRegularityIndex", vr: FL },
    E { tag: Single(Tag(0x0046, 0x0232)), alias: "SurfaceAsymmetryIndex", vr: FL },
    E { tag: Single(Tag(0x0046, 0x0234)), alias: "CornealEccentricityIndex", vr: FL },
    E { tag: Single(Tag(0x0046, 0x0236)), alias: "KeratoconusPredictionIndex", vr: FL },
    E { tag: Single(Tag(0x0046, 0x0238)), alias: "DecimalPotentialVisualAcuity", vr: FL },
    E { tag: Single(Tag(0x0046, 0x0242)), alias: "CornealTopographyMapQualityEvaluation", vr: CS },
    E { tag: Single(Tag(0x0046, 0x0244)), alias: "SourceImageCornealProcessedDataSequence", vr: SQ },
    E { tag: Single(Tag(0x0046, 0x0247)), alias: "CornealPointLocation", vr: FL },
    E { tag: Single(Tag(0x0046, 0x0248)), alias: "CornealPointEstimated", vr: CS },
    E { tag: Single(Tag(0x0046, 0x0249)), alias: "AxialPower", vr: FL },
    E { tag: Single(Tag(0x0046, 0x0250)), alias: "TangentialPower", vr: FL },
    E { tag: Single(Tag(0x0046, 0x0251)), alias: "RefractivePower", vr: FL },
    E { tag: Single(Tag(0x0046, 0x0252)), alias: "RelativeElevation", vr: FL },
    E { tag: Single(Tag(0x0046, 0x0253)), alias: "CornealWavefront", vr: FL },
    E { tag: Single(Tag(0x0048, 0x0001)), alias: "ImagedVolumeWidth", vr: FL },
    E { tag: Single(Tag(0x0048, 0x0002)), alias: "ImagedVolumeHeight", vr: FL },
    E { tag: Single(Tag(0x0048, 0x0003)), alias: "ImagedVolumeDepth", vr: FL },
    E { tag: Single(Tag(0x0048, 0x0006)), alias: "TotalPixelMatrixColumns", vr: UL },
    E { tag: Single(Tag(0x0048, 0x0007)), alias: "TotalPixelMatrixRows", vr: UL },
    E { tag: Single(Tag(0x0048, 0x0008)), alias: "TotalPixelMatrixOriginSequence", vr: SQ },
    E { tag: Single(Tag(0x0048, 0x0010)), alias: "SpecimenLabelInImage", vr: CS },
    E { tag: Single(Tag(0x0048, 0x0011)), alias: "FocusMethod", vr: CS },
    E { tag: Single(Tag(0x0048, 0x0012)), alias: "ExtendedDepthOfField", vr: CS },
    E { tag: Single(Tag(0x0048, 0x0013)), alias: "NumberOfFocalPlanes", vr: US },
    E { tag: Single(Tag(0x0048, 0x0014)), alias: "DistanceBetweenFocalPlanes", vr: FL },
    E { tag: Single(Tag(0x0048, 0x0015)), alias: "RecommendedAbsentPixelCIELabValue", vr: US },
    E { tag: Single(Tag(0x0048, 0x0100)), alias: "IlluminatorTypeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0048, 0x0102)), alias: "ImageOrientationSlide", vr: DS },
    E { tag: Single(Tag(0x0048, 0x0105)), alias: "OpticalPathSequence", vr: SQ },
    E { tag: Single(Tag(0x0048, 0x0106)), alias: "OpticalPathIdentifier", vr: SH },
    E { tag: Single(Tag(0x0048, 0x0107)), alias: "OpticalPathDescription", vr: ST },
    E { tag: Single(Tag(0x0048, 0x0108)), alias: "IlluminationColorCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0048, 0x0110)), alias: "SpecimenReferenceSequence", vr: SQ },
    E { tag: Single(Tag(0x0048, 0x0111)), alias: "CondenserLensPower", vr: DS },
    E { tag: Single(Tag(0x0048, 0x0112)), alias: "ObjectiveLensPower", vr: DS },
    E { tag: Single(Tag(0x0048, 0x0113)), alias: "ObjectiveLensNumericalAperture", vr: DS },
    E { tag: Single(Tag(0x0048, 0x0120)), alias: "PaletteColorLookupTableSequence", vr: SQ },
    E { tag: Single(Tag(0x0048, 0x0200)), alias: "ReferencedImageNavigationSequence", vr: SQ },
    E { tag: Single(Tag(0x0048, 0x0201)), alias: "TopLeftHandCornerOfLocalizerArea", vr: US },
    E { tag: Single(Tag(0x0048, 0x0202)), alias: "BottomRightHandCornerOfLocalizerArea", vr: US },
    E { tag: Single(Tag(0x0048, 0x0207)), alias: "OpticalPathIdentificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0048, 0x021A)), alias: "PlanePositionSlideSequence", vr: SQ },
    E { tag: Single(Tag(0x0048, 0x021E)), alias: "ColumnPositionInTotalImagePixelMatrix", vr: SL },
    E { tag: Single(Tag(0x0048, 0x021F)), alias: "RowPositionInTotalImagePixelMatrix", vr: SL },
    E { tag: Single(Tag(0x0048, 0x0301)), alias: "PixelOriginInterpretation", vr: CS },
    E { tag: Single(Tag(0x0048, 0x0302)), alias: "NumberOfOpticalPaths", vr: UL },
    E { tag: Single(Tag(0x0048, 0x0303)), alias: "TotalPixelMatrixFocalPlanes", vr: UL },
    E { tag: Single(Tag(0x0050, 0x0004)), alias: "CalibrationImage", vr: CS },
    E { tag: Single(Tag(0x0050, 0x0010)), alias: "DeviceSequence", vr: SQ },
    E { tag: Single(Tag(0x0050, 0x0012)), alias: "ContainerComponentTypeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0050, 0x0013)), alias: "ContainerComponentThickness", vr: FD },
    E { tag: Single(Tag(0x0050, 0x0014)), alias: "DeviceLength", vr: DS },
    E { tag: Single(Tag(0x0050, 0x0015)), alias: "ContainerComponentWidth", vr: FD },
    E { tag: Single(Tag(0x0050, 0x0016)), alias: "DeviceDiameter", vr: DS },
    E { tag: Single(Tag(0x0050, 0x0017)), alias: "DeviceDiameterUnits", vr: CS },
    E { tag: Single(Tag(0x0050, 0x0018)), alias: "DeviceVolume", vr: DS },
    E { tag: Single(Tag(0x0050, 0x0019)), alias: "InterMarkerDistance", vr: DS },
    E { tag: Single(Tag(0x0050, 0x001A)), alias: "ContainerComponentMaterial", vr: CS },
    E { tag: Single(Tag(0x0050, 0x001B)), alias: "ContainerComponentID", vr: LO },
    E { tag: Single(Tag(0x0050, 0x001C)), alias: "ContainerComponentLength", vr: FD },
    E { tag: Single(Tag(0x0050, 0x001D)), alias: "ContainerComponentDiameter", vr: FD },
    E { tag: Single(Tag(0x0050, 0x001E)), alias: "ContainerComponentDescription", vr: LO },
    E { tag: Single(Tag(0x0050, 0x0020)), alias: "DeviceDescription", vr: LO },
    E { tag: Single(Tag(0x0050, 0x0021)), alias: "LongDeviceDescription", vr: ST },
    E { tag: Single(Tag(0x0052, 0x0001)), alias: "ContrastBolusIngredientPercentByVolume", vr: FL },
    E { tag: Single(Tag(0x0052, 0x0002)), alias: "OCTFocalDistance", vr: FD },
    E { tag: Single(Tag(0x0052, 0x0003)), alias: "BeamSpotSize", vr: FD },
    E { tag: Single(Tag(0x0052, 0x0004)), alias: "EffectiveRefractiveIndex", vr: FD },
    E { tag: Single(Tag(0x0052, 0x0006)), alias: "OCTAcquisitionDomain", vr: CS },
    E { tag: Single(Tag(0x0052, 0x0007)), alias: "OCTOpticalCenterWavelength", vr: FD },
    E { tag: Single(Tag(0x0052, 0x0008)), alias: "AxialResolution", vr: FD },
    E { tag: Single(Tag(0x0052, 0x0009)), alias: "RangingDepth", vr: FD },
    E { tag: Single(Tag(0x0052, 0x0011)), alias: "ALineRate", vr: FD },
    E { tag: Single(Tag(0x0052, 0x0012)), alias: "ALinesPerFrame", vr: US },
    E { tag: Single(Tag(0x0052, 0x0013)), alias: "CatheterRotationalRate", vr: FD },
    E { tag: Single(Tag(0x0052, 0x0014)), alias: "ALinePixelSpacing", vr: FD },
    E { tag: Single(Tag(0x0052, 0x0016)), alias: "ModeOfPercutaneousAccessSequence", vr: SQ },
    E { tag: Single(Tag(0x0052, 0x0025)), alias: "IntravascularOCTFrameTypeSequence", vr: SQ },
    E { tag: Single(Tag(0x0052, 0x0026)), alias: "OCTZOffsetApplied", vr: CS },
    E { tag: Single(Tag(0x0052, 0x0027)), alias: "IntravascularFrameContentSequence", vr: SQ },
    E { tag: Single(Tag(0x0052, 0x0028)), alias: "IntravascularLongitudinalDistance", vr: FD },
    E { tag: Single(Tag(0x0052, 0x0029)), alias: "IntravascularOCTFrameContentSequence", vr: SQ },
    E { tag: Single(Tag(0x0052, 0x0030)), alias: "OCTZOffsetCorrection", vr: SS },
    E { tag: Single(Tag(0x0052, 0x0031)), alias: "CatheterDirectionOfRotation", vr: CS },
    E { tag: Single(Tag(0x0052, 0x0033)), alias: "SeamLineLocation", vr: FD },
    E { tag: Single(Tag(0x0052, 0x0034)), alias: "FirstALineLocation", vr: FD },
    E { tag: Single(Tag(0x0052, 0x0036)), alias: "SeamLineIndex", vr: US },
    E { tag: Single(Tag(0x0052, 0x0038)), alias: "NumberOfPaddedALines", vr: US },
    E { tag: Single(Tag(0x0052, 0x0039)), alias: "InterpolationType", vr: CS },
    E { tag: Single(Tag(0x0052, 0x003A)), alias: "RefractiveIndexApplied", vr: CS },
    E { tag: Single(Tag(0x0054, 0x0010)), alias: "EnergyWindowVector", vr: US },
    E { tag: Single(Tag(0x0054, 0x0011)), alias: "NumberOfEnergyWindows", vr: US },
    E { tag: Single(Tag(0x0054, 0x0012)), alias: "EnergyWindowInformationSequence", vr: SQ },
    E { tag: Single(Tag(0x0054, 0x0013)), alias: "EnergyWindowRangeSequence", vr: SQ },
    E { tag: Single(Tag(0x0054, 0x0014)), alias: "EnergyWindowLowerLimit", vr: DS },
    E { tag: Single(Tag(0x0054, 0x0015)), alias: "EnergyWindowUpperLimit", vr: DS },
    E { tag: Single(Tag(0x0054, 0x0016)), alias: "RadiopharmaceuticalInformationSequence", vr: SQ },
    E { tag: Single(Tag(0x0054, 0x0017)), alias: "ResidualSyringeCounts", vr: IS },
    E { tag: Single(Tag(0x0054, 0x0018)), alias: "EnergyWindowName", vr: SH },
    E { tag: Single(Tag(0x0054, 0x0020)), alias: "DetectorVector", vr: US },
    E { tag: Single(Tag(0x0054, 0x0021)), alias: "NumberOfDetectors", vr: US },
    E { tag: Single(Tag(0x0054, 0x0022)), alias: "DetectorInformationSequence", vr: SQ },
    E { tag: Single(Tag(0x0054, 0x0030)), alias: "PhaseVector", vr: US },
    E { tag: Single(Tag(0x0054, 0x0031)), alias: "NumberOfPhases", vr: US },
    E { tag: Single(Tag(0x0054, 0x0032)), alias: "PhaseInformationSequence", vr: SQ },
    E { tag: Single(Tag(0x0054, 0x0033)), alias: "NumberOfFramesInPhase", vr: US },
    E { tag: Single(Tag(0x0054, 0x0036)), alias: "PhaseDelay", vr: IS },
    E { tag: Single(Tag(0x0054, 0x0038)), alias: "PauseBetweenFrames", vr: IS },
    E { tag: Single(Tag(0x0054, 0x0039)), alias: "PhaseDescription", vr: CS },
    E { tag: Single(Tag(0x0054, 0x0050)), alias: "RotationVector", vr: US },
    E { tag: Single(Tag(0x0054, 0x0051)), alias: "NumberOfRotations", vr: US },
    E { tag: Single(Tag(0x0054, 0x0052)), alias: "RotationInformationSequence", vr: SQ },
    E { tag: Single(Tag(0x0054, 0x0053)), alias: "NumberOfFramesInRotation", vr: US },
    E { tag: Single(Tag(0x0054, 0x0060)), alias: "RRIntervalVector", vr: US },
    E { tag: Single(Tag(0x0054, 0x0061)), alias: "NumberOfRRIntervals", vr: US },
    E { tag: Single(Tag(0x0054, 0x0062)), alias: "GatedInformationSequence", vr: SQ },
    E { tag: Single(Tag(0x0054, 0x0063)), alias: "DataInformationSequence", vr: SQ },
    E { tag: Single(Tag(0x0054, 0x0070)), alias: "TimeSlotVector", vr: US },
    E { tag: Single(Tag(0x0054, 0x0071)), alias: "NumberOfTimeSlots", vr: US },
    E { tag: Single(Tag(0x0054, 0x0072)), alias: "TimeSlotInformationSequence", vr: SQ },
    E { tag: Single(Tag(0x0054, 0x0073)), alias: "TimeSlotTime", vr: DS },
    E { tag: Single(Tag(0x0054, 0x0080)), alias: "SliceVector", vr: US },
    E { tag: Single(Tag(0x0054, 0x0081)), alias: "NumberOfSlices", vr: US },
    E { tag: Single(Tag(0x0054, 0x0090)), alias: "AngularViewVector", vr: US },
    E { tag: Single(Tag(0x0054, 0x0100)), alias: "TimeSliceVector", vr: US },
    E { tag: Single(Tag(0x0054, 0x0101)), alias: "NumberOfTimeSlices", vr: US },
    E { tag: Single(Tag(0x0054, 0x0200)), alias: "StartAngle", vr: DS },
    E { tag: Single(Tag(0x0054, 0x0202)), alias: "TypeOfDetectorMotion", vr: CS },
    E { tag: Single(Tag(0x0054, 0x0210)), alias: "TriggerVector", vr: IS },
    E { tag: Single(Tag(0x0054, 0x0211)), alias: "NumberOfTriggersInPhase", vr: US },
    E { tag: Single(Tag(0x0054, 0x0220)), alias: "ViewCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0054, 0x0222)), alias: "ViewModifierCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0054, 0x0300)), alias: "RadionuclideCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0054, 0x0302)), alias: "AdministrationRouteCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0054, 0x0304)), alias: "RadiopharmaceuticalCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0054, 0x0306)), alias: "CalibrationDataSequence", vr: SQ },
    E { tag: Single(Tag(0x0054, 0x0308)), alias: "EnergyWindowNumber", vr: US },
    E { tag: Single(Tag(0x0054, 0x0400)), alias: "ImageID", vr: SH },
    E { tag: Single(Tag(0x0054, 0x0410)), alias: "PatientOrientationCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0054, 0x0412)), alias: "PatientOrientationModifierCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0054, 0x0414)), alias: "PatientGantryRelationshipCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0054, 0x0500)), alias: "SliceProgressionDirection", vr: CS },
    E { tag: Single(Tag(0x0054, 0x0501)), alias: "ScanProgressionDirection", vr: CS },
    E { tag: Single(Tag(0x0054, 0x1000)), alias: "SeriesType", vr: CS },
    E { tag: Single(Tag(0x0054, 0x1001)), alias: "Units", vr: CS },
    E { tag: Single(Tag(0x0054, 0x1002)), alias: "CountsSource", vr: CS },
    E { tag: Single(Tag(0x0054, 0x1004)), alias: "ReprojectionMethod", vr: CS },
    E { tag: Single(Tag(0x0054, 0x1006)), alias: "SUVType", vr: CS },
    E { tag: Single(Tag(0x0054, 0x1100)), alias: "RandomsCorrectionMethod", vr: CS },
    E { tag: Single(Tag(0x0054, 0x1101)), alias: "AttenuationCorrectionMethod", vr: LO },
    E { tag: Single(Tag(0x0054, 0x1102)), alias: "DecayCorrection", vr: CS },
    E { tag: Single(Tag(0x0054, 0x1103)), alias: "ReconstructionMethod", vr: LO },
    E { tag: Single(Tag(0x0054, 0x1104)), alias: "DetectorLinesOfResponseUsed", vr: LO },
    E { tag: Single(Tag(0x0054, 0x1105)), alias: "ScatterCorrectionMethod", vr: LO },
    E { tag: Single(Tag(0x0054, 0x1200)), alias: "AxialAcceptance", vr: DS },
    E { tag: Single(Tag(0x0054, 0x1201)), alias: "AxialMash", vr: IS },
    E { tag: Single(Tag(0x0054, 0x1202)), alias: "TransverseMash", vr: IS },
    E { tag: Single(Tag(0x0054, 0x1203)), alias: "DetectorElementSize", vr: DS },
    E { tag: Single(Tag(0x0054, 0x1210)), alias: "CoincidenceWindowWidth", vr: DS },
    E { tag: Single(Tag(0x0054, 0x1220)), alias: "SecondaryCountsType", vr: CS },
    E { tag: Single(Tag(0x0054, 0x1300)), alias: "FrameReferenceTime", vr: DS },
    E { tag: Single(Tag(0x0054, 0x1310)), alias: "PrimaryPromptsCountsAccumulated", vr: IS },
    E { tag: Single(Tag(0x0054, 0x1311)), alias: "SecondaryCountsAccumulated", vr: IS },
    E { tag: Single(Tag(0x0054, 0x1320)), alias: "SliceSensitivityFactor", vr: DS },
    E { tag: Single(Tag(0x0054, 0x1321)), alias: "DecayFactor", vr: DS },
    E { tag: Single(Tag(0x0054, 0x1322)), alias: "DoseCalibrationFactor", vr: DS },
    E { tag: Single(Tag(0x0054, 0x1323)), alias: "ScatterFractionFactor", vr: DS },
    E { tag: Single(Tag(0x0054, 0x1324)), alias: "DeadTimeFactor", vr: DS },
    E { tag: Single(Tag(0x0054, 0x1330)), alias: "ImageIndex", vr: US },
    E { tag: Single(Tag(0x0054, 0x1400)), alias: "CountsIncluded", vr: CS }, // RET (2007)
    E { tag: Single(Tag(0x0054, 0x1401)), alias: "DeadTimeCorrectionFlag", vr: CS }, // RET (2007)
    E { tag: Single(Tag(0x0060, 0x3000)), alias: "HistogramSequence", vr: SQ },
    E { tag: Single(Tag(0x0060, 0x3002)), alias: "HistogramNumberOfBins", vr: US },
    E { tag: Single(Tag(0x0060, 0x3004)), alias: "HistogramFirstBinValue", vr: US /* or SS */ },
    E { tag: Single(Tag(0x0060, 0x3006)), alias: "HistogramLastBinValue", vr: US /* or SS */ },
    E { tag: Single(Tag(0x0060, 0x3008)), alias: "HistogramBinWidth", vr: US },
    E { tag: Single(Tag(0x0060, 0x3010)), alias: "HistogramExplanation", vr: LO },
    E { tag: Single(Tag(0x0060, 0x3020)), alias: "HistogramData", vr: UL },
    E { tag: Single(Tag(0x0062, 0x0001)), alias: "SegmentationType", vr: CS },
    E { tag: Single(Tag(0x0062, 0x0002)), alias: "SegmentSequence", vr: SQ },
    E { tag: Single(Tag(0x0062, 0x0003)), alias: "SegmentedPropertyCategoryCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0062, 0x0004)), alias: "SegmentNumber", vr: US },
    E { tag: Single(Tag(0x0062, 0x0005)), alias: "SegmentLabel", vr: LO },
    E { tag: Single(Tag(0x0062, 0x0006)), alias: "SegmentDescription", vr: ST },
    E { tag: Single(Tag(0x0062, 0x0007)), alias: "SegmentationAlgorithmIdentificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0062, 0x0008)), alias: "SegmentAlgorithmType", vr: CS },
    E { tag: Single(Tag(0x0062, 0x0009)), alias: "SegmentAlgorithmName", vr: LO },
    E { tag: Single(Tag(0x0062, 0x000A)), alias: "SegmentIdentificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0062, 0x000B)), alias: "ReferencedSegmentNumber", vr: US },
    E { tag: Single(Tag(0x0062, 0x000C)), alias: "RecommendedDisplayGrayscaleValue", vr: US },
    E { tag: Single(Tag(0x0062, 0x000D)), alias: "RecommendedDisplayCIELabValue", vr: US },
    E { tag: Single(Tag(0x0062, 0x000E)), alias: "MaximumFractionalValue", vr: US },
    E { tag: Single(Tag(0x0062, 0x000F)), alias: "SegmentedPropertyTypeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0062, 0x0010)), alias: "SegmentationFractionalType", vr: CS },
    E { tag: Single(Tag(0x0062, 0x0011)), alias: "SegmentedPropertyTypeModifierCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0062, 0x0012)), alias: "UsedSegmentsSequence", vr: SQ },
    E { tag: Single(Tag(0x0062, 0x0013)), alias: "SegmentsOverlap", vr: CS },
    E { tag: Single(Tag(0x0062, 0x0020)), alias: "TrackingID", vr: UT },
    E { tag: Single(Tag(0x0062, 0x0021)), alias: "TrackingUID", vr: UI },
    E { tag: Single(Tag(0x0064, 0x0002)), alias: "DeformableRegistrationSequence", vr: SQ },
    E { tag: Single(Tag(0x0064, 0x0003)), alias: "SourceFrameOfReferenceUID", vr: UI },
    E { tag: Single(Tag(0x0064, 0x0005)), alias: "DeformableRegistrationGridSequence", vr: SQ },
    E { tag: Single(Tag(0x0064, 0x0007)), alias: "GridDimensions", vr: UL },
    E { tag: Single(Tag(0x0064, 0x0008)), alias: "GridResolution", vr: FD },
    E { tag: Single(Tag(0x0064, 0x0009)), alias: "VectorGridData", vr: OF },
    E { tag: Single(Tag(0x0064, 0x000F)), alias: "PreDeformationMatrixRegistrationSequence", vr: SQ },
    E { tag: Single(Tag(0x0064, 0x0010)), alias: "PostDeformationMatrixRegistrationSequence", vr: SQ },
    E { tag: Single(Tag(0x0066, 0x0001)), alias: "NumberOfSurfaces", vr: UL },
    E { tag: Single(Tag(0x0066, 0x0002)), alias: "SurfaceSequence", vr: SQ },
    E { tag: Single(Tag(0x0066, 0x0003)), alias: "SurfaceNumber", vr: UL },
    E { tag: Single(Tag(0x0066, 0x0004)), alias: "SurfaceComments", vr: LT },
    E { tag: Single(Tag(0x0066, 0x0009)), alias: "SurfaceProcessing", vr: CS },
    E { tag: Single(Tag(0x0066, 0x000A)), alias: "SurfaceProcessingRatio", vr: FL },
    E { tag: Single(Tag(0x0066, 0x000B)), alias: "SurfaceProcessingDescription", vr: LO },
    E { tag: Single(Tag(0x0066, 0x000C)), alias: "RecommendedPresentationOpacity", vr: FL },
    E { tag: Single(Tag(0x0066, 0x000D)), alias: "RecommendedPresentationType", vr: CS },
    E { tag: Single(Tag(0x0066, 0x000E)), alias: "FiniteVolume", vr: CS },
    E { tag: Single(Tag(0x0066, 0x0010)), alias: "Manifold", vr: CS },
    E { tag: Single(Tag(0x0066, 0x0011)), alias: "SurfacePointsSequence", vr: SQ },
    E { tag: Single(Tag(0x0066, 0x0012)), alias: "SurfacePointsNormalsSequence", vr: SQ },
    E { tag: Single(Tag(0x0066, 0x0013)), alias: "SurfaceMeshPrimitivesSequence", vr: SQ },
    E { tag: Single(Tag(0x0066, 0x0015)), alias: "NumberOfSurfacePoints", vr: UL },
    E { tag: Single(Tag(0x0066, 0x0016)), alias: "PointCoordinatesData", vr: OF },
    E { tag: Single(Tag(0x0066, 0x0017)), alias: "PointPositionAccuracy", vr: FL },
    E { tag: Single(Tag(0x0066, 0x0018)), alias: "MeanPointDistance", vr: FL },
    E { tag: Single(Tag(0x0066, 0x0019)), alias: "MaximumPointDistance", vr: FL },
    E { tag: Single(Tag(0x0066, 0x001A)), alias: "PointsBoundingBoxCoordinates", vr: FL },
    E { tag: Single(Tag(0x0066, 0x001B)), alias: "AxisOfRotation", vr: FL },
    E { tag: Single(Tag(0x0066, 0x001C)), alias: "CenterOfRotation", vr: FL },
    E { tag: Single(Tag(0x0066, 0x001E)), alias: "NumberOfVectors", vr: UL },
    E { tag: Single(Tag(0x0066, 0x001F)), alias: "VectorDimensionality", vr: US },
    E { tag: Single(Tag(0x0066, 0x0020)), alias: "VectorAccuracy", vr: FL },
    E { tag: Single(Tag(0x0066, 0x0021)), alias: "VectorCoordinateData", vr: OF },
    E { tag: Single(Tag(0x0066, 0x0023)), alias: "TrianglePointIndexList", vr: OW }, // RET (2015c)
    E { tag: Single(Tag(0x0066, 0x0024)), alias: "EdgePointIndexList", vr: OW }, // RET (2015c)
    E { tag: Single(Tag(0x0066, 0x0025)), alias: "VertexPointIndexList", vr: OW }, // RET (2015c)
    E { tag: Single(Tag(0x0066, 0x0026)), alias: "TriangleStripSequence", vr: SQ },
    E { tag: Single(Tag(0x0066, 0x0027)), alias: "TriangleFanSequence", vr: SQ },
    E { tag: Single(Tag(0x0066, 0x0028)), alias: "LineSequence", vr: SQ },
    E { tag: Single(Tag(0x0066, 0x0029)), alias: "PrimitivePointIndexList", vr: OW }, // RET (2015c)
    E { tag: Single(Tag(0x0066, 0x002A)), alias: "SurfaceCount", vr: UL },
    E { tag: Single(Tag(0x0066, 0x002B)), alias: "ReferencedSurfaceSequence", vr: SQ },
    E { tag: Single(Tag(0x0066, 0x002C)), alias: "ReferencedSurfaceNumber", vr: UL },
    E { tag: Single(Tag(0x0066, 0x002D)), alias: "SegmentSurfaceGenerationAlgorithmIdentificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0066, 0x002E)), alias: "SegmentSurfaceSourceInstanceSequence", vr: SQ },
    E { tag: Single(Tag(0x0066, 0x002F)), alias: "AlgorithmFamilyCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0066, 0x0030)), alias: "AlgorithmNameCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0066, 0x0031)), alias: "AlgorithmVersion", vr: LO },
    E { tag: Single(Tag(0x0066, 0x0032)), alias: "AlgorithmParameters", vr: LT },
    E { tag: Single(Tag(0x0066, 0x0034)), alias: "FacetSequence", vr: SQ },
    E { tag: Single(Tag(0x0066, 0x0035)), alias: "SurfaceProcessingAlgorithmIdentificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0066, 0x0036)), alias: "AlgorithmName", vr: LO },
    E { tag: Single(Tag(0x0066, 0x0037)), alias: "RecommendedPointRadius", vr: FL },
    E { tag: Single(Tag(0x0066, 0x0038)), alias: "RecommendedLineThickness", vr: FL },
    E { tag: Single(Tag(0x0066, 0x0040)), alias: "LongPrimitivePointIndexList", vr: OL },
    E { tag: Single(Tag(0x0066, 0x0041)), alias: "LongTrianglePointIndexList", vr: OL },
    E { tag: Single(Tag(0x0066, 0x0042)), alias: "LongEdgePointIndexList", vr: OL },
    E { tag: Single(Tag(0x0066, 0x0043)), alias: "LongVertexPointIndexList", vr: OL },
    E { tag: Single(Tag(0x0066, 0x0101)), alias: "TrackSetSequence", vr: SQ },
    E { tag: Single(Tag(0x0066, 0x0102)), alias: "TrackSequence", vr: SQ },
    E { tag: Single(Tag(0x0066, 0x0103)), alias: "RecommendedDisplayCIELabValueList", vr: OW },
    E { tag: Single(Tag(0x0066, 0x0104)), alias: "TrackingAlgorithmIdentificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0066, 0x0105)), alias: "TrackSetNumber", vr: UL },
    E { tag: Single(Tag(0x0066, 0x0106)), alias: "TrackSetLabel", vr: LO },
    E { tag: Single(Tag(0x0066, 0x0107)), alias: "TrackSetDescription", vr: UT },
    E { tag: Single(Tag(0x0066, 0x0108)), alias: "TrackSetAnatomicalTypeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0066, 0x0121)), alias: "MeasurementsSequence", vr: SQ },
    E { tag: Single(Tag(0x0066, 0x0124)), alias: "TrackSetStatisticsSequence", vr: SQ },
    E { tag: Single(Tag(0x0066, 0x0125)), alias: "FloatingPointValues", vr: OF },
    E { tag: Single(Tag(0x0066, 0x0129)), alias: "TrackPointIndexList", vr: OL },
    E { tag: Single(Tag(0x0066, 0x0130)), alias: "TrackStatisticsSequence", vr: SQ },
    E { tag: Single(Tag(0x0066, 0x0132)), alias: "MeasurementValuesSequence", vr: SQ },
    E { tag: Single(Tag(0x0066, 0x0133)), alias: "DiffusionAcquisitionCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0066, 0x0134)), alias: "DiffusionModelCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0068, 0x6210)), alias: "ImplantSize", vr: LO },
    E { tag: Single(Tag(0x0068, 0x6221)), alias: "ImplantTemplateVersion", vr: LO },
    E { tag: Single(Tag(0x0068, 0x6222)), alias: "ReplacedImplantTemplateSequence", vr: SQ },
    E { tag: Single(Tag(0x0068, 0x6223)), alias: "ImplantType", vr: CS },
    E { tag: Single(Tag(0x0068, 0x6224)), alias: "DerivationImplantTemplateSequence", vr: SQ },
    E { tag: Single(Tag(0x0068, 0x6225)), alias: "OriginalImplantTemplateSequence", vr: SQ },
    E { tag: Single(Tag(0x0068, 0x6226)), alias: "EffectiveDateTime", vr: DT },
    E { tag: Single(Tag(0x0068, 0x6230)), alias: "ImplantTargetAnatomySequence", vr: SQ },
    E { tag: Single(Tag(0x0068, 0x6260)), alias: "InformationFromManufacturerSequence", vr: SQ },
    E { tag: Single(Tag(0x0068, 0x6265)), alias: "NotificationFromManufacturerSequence", vr: SQ },
    E { tag: Single(Tag(0x0068, 0x6270)), alias: "InformationIssueDateTime", vr: DT },
    E { tag: Single(Tag(0x0068, 0x6280)), alias: "InformationSummary", vr: ST },
    E { tag: Single(Tag(0x0068, 0x62A0)), alias: "ImplantRegulatoryDisapprovalCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0068, 0x62A5)), alias: "OverallTemplateSpatialTolerance", vr: FD },
    E { tag: Single(Tag(0x0068, 0x62C0)), alias: "HPGLDocumentSequence", vr: SQ },
    E { tag: Single(Tag(0x0068, 0x62D0)), alias: "HPGLDocumentID", vr: US },
    E { tag: Single(Tag(0x0068, 0x62D5)), alias: "HPGLDocumentLabel", vr: LO },
    E { tag: Single(Tag(0x0068, 0x62E0)), alias: "ViewOrientationCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0068, 0x62F0)), alias: "ViewOrientationModifierCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0068, 0x62F2)), alias: "HPGLDocumentScaling", vr: FD },
    E { tag: Single(Tag(0x0068, 0x6300)), alias: "HPGLDocument", vr: OB },
    E { tag: Single(Tag(0x0068, 0x6310)), alias: "HPGLContourPenNumber", vr: US },
    E { tag: Single(Tag(0x0068, 0x6320)), alias: "HPGLPenSequence", vr: SQ },
    E { tag: Single(Tag(0x0068, 0x6330)), alias: "HPGLPenNumber", vr: US },
    E { tag: Single(Tag(0x0068, 0x6340)), alias: "HPGLPenLabel", vr: LO },
    E { tag: Single(Tag(0x0068, 0x6345)), alias: "HPGLPenDescription", vr: ST },
    E { tag: Single(Tag(0x0068, 0x6346)), alias: "RecommendedRotationPoint", vr: FD },
    E { tag: Single(Tag(0x0068, 0x6347)), alias: "BoundingRectangle", vr: FD },
    E { tag: Single(Tag(0x0068, 0x6350)), alias: "ImplantTemplate3DModelSurfaceNumber", vr: US },
    E { tag: Single(Tag(0x0068, 0x6360)), alias: "SurfaceModelDescriptionSequence", vr: SQ },
    E { tag: Single(Tag(0x0068, 0x6380)), alias: "SurfaceModelLabel", vr: LO },
    E { tag: Single(Tag(0x0068, 0x6390)), alias: "SurfaceModelScalingFactor", vr: FD },
    E { tag: Single(Tag(0x0068, 0x63A0)), alias: "MaterialsCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0068, 0x63A4)), alias: "CoatingMaterialsCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0068, 0x63A8)), alias: "ImplantTypeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0068, 0x63AC)), alias: "FixationMethodCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0068, 0x63B0)), alias: "MatingFeatureSetsSequence", vr: SQ },
    E { tag: Single(Tag(0x0068, 0x63C0)), alias: "MatingFeatureSetID", vr: US },
    E { tag: Single(Tag(0x0068, 0x63D0)), alias: "MatingFeatureSetLabel", vr: LO },
    E { tag: Single(Tag(0x0068, 0x63E0)), alias: "MatingFeatureSequence", vr: SQ },
    E { tag: Single(Tag(0x0068, 0x63F0)), alias: "MatingFeatureID", vr: US },
    E { tag: Single(Tag(0x0068, 0x6400)), alias: "MatingFeatureDegreeOfFreedomSequence", vr: SQ },
    E { tag: Single(Tag(0x0068, 0x6410)), alias: "DegreeOfFreedomID", vr: US },
    E { tag: Single(Tag(0x0068, 0x6420)), alias: "DegreeOfFreedomType", vr: CS },
    E { tag: Single(Tag(0x0068, 0x6430)), alias: "TwoDMatingFeatureCoordinatesSequence", vr: SQ },
    E { tag: Single(Tag(0x0068, 0x6440)), alias: "ReferencedHPGLDocumentID", vr: US },
    E { tag: Single(Tag(0x0068, 0x6450)), alias: "TwoDMatingPoint", vr: FD },
    E { tag: Single(Tag(0x0068, 0x6460)), alias: "TwoDMatingAxes", vr: FD },
    E { tag: Single(Tag(0x0068, 0x6470)), alias: "TwoDDegreeOfFreedomSequence", vr: SQ },
    E { tag: Single(Tag(0x0068, 0x6490)), alias: "ThreeDDegreeOfFreedomAxis", vr: FD },
    E { tag: Single(Tag(0x0068, 0x64A0)), alias: "RangeOfFreedom", vr: FD },
    E { tag: Single(Tag(0x0068, 0x64C0)), alias: "ThreeDMatingPoint", vr: FD },
    E { tag: Single(Tag(0x0068, 0x64D0)), alias: "ThreeDMatingAxes", vr: FD },
    E { tag: Single(Tag(0x0068, 0x64F0)), alias: "TwoDDegreeOfFreedomAxis", vr: FD },
    E { tag: Single(Tag(0x0068, 0x6500)), alias: "PlanningLandmarkPointSequence", vr: SQ },
    E { tag: Single(Tag(0x0068, 0x6510)), alias: "PlanningLandmarkLineSequence", vr: SQ },
    E { tag: Single(Tag(0x0068, 0x6520)), alias: "PlanningLandmarkPlaneSequence", vr: SQ },
    E { tag: Single(Tag(0x0068, 0x6530)), alias: "PlanningLandmarkID", vr: US },
    E { tag: Single(Tag(0x0068, 0x6540)), alias: "PlanningLandmarkDescription", vr: LO },
    E { tag: Single(Tag(0x0068, 0x6545)), alias: "PlanningLandmarkIdentificationCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0068, 0x6550)), alias: "TwoDPointCoordinatesSequence", vr: SQ },
    E { tag: Single(Tag(0x0068, 0x6560)), alias: "TwoDPointCoordinates", vr: FD },
    E { tag: Single(Tag(0x0068, 0x6590)), alias: "ThreeDPointCoordinates", vr: FD },
    E { tag: Single(Tag(0x0068, 0x65A0)), alias: "TwoDLineCoordinatesSequence", vr: SQ },
    E { tag: Single(Tag(0x0068, 0x65B0)), alias: "TwoDLineCoordinates", vr: FD },
    E { tag: Single(Tag(0x0068, 0x65D0)), alias: "ThreeDLineCoordinates", vr: FD },
    E { tag: Single(Tag(0x0068, 0x65E0)), alias: "TwoDPlaneCoordinatesSequence", vr: SQ },
    E { tag: Single(Tag(0x0068, 0x65F0)), alias: "TwoDPlaneIntersection", vr: FD },
    E { tag: Single(Tag(0x0068, 0x6610)), alias: "ThreeDPlaneOrigin", vr: FD },
    E { tag: Single(Tag(0x0068, 0x6620)), alias: "ThreeDPlaneNormal", vr: FD },
    E { tag: Single(Tag(0x0068, 0x7001)), alias: "ModelModification", vr: CS },
    E { tag: Single(Tag(0x0068, 0x7002)), alias: "ModelMirroring", vr: CS },
    E { tag: Single(Tag(0x0068, 0x7003)), alias: "ModelUsageCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x0001)), alias: "GraphicAnnotationSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x0002)), alias: "GraphicLayer", vr: CS },
    E { tag: Single(Tag(0x0070, 0x0003)), alias: "BoundingBoxAnnotationUnits", vr: CS },
    E { tag: Single(Tag(0x0070, 0x0004)), alias: "AnchorPointAnnotationUnits", vr: CS },
    E { tag: Single(Tag(0x0070, 0x0005)), alias: "GraphicAnnotationUnits", vr: CS },
    E { tag: Single(Tag(0x0070, 0x0006)), alias: "UnformattedTextValue", vr: ST },
    E { tag: Single(Tag(0x0070, 0x0008)), alias: "TextObjectSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x0009)), alias: "GraphicObjectSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x0010)), alias: "BoundingBoxTopLeftHandCorner", vr: FL },
    E { tag: Single(Tag(0x0070, 0x0011)), alias: "BoundingBoxBottomRightHandCorner", vr: FL },
    E { tag: Single(Tag(0x0070, 0x0012)), alias: "BoundingBoxTextHorizontalJustification", vr: CS },
    E { tag: Single(Tag(0x0070, 0x0014)), alias: "AnchorPoint", vr: FL },
    E { tag: Single(Tag(0x0070, 0x0015)), alias: "AnchorPointVisibility", vr: CS },
    E { tag: Single(Tag(0x0070, 0x0020)), alias: "GraphicDimensions", vr: US },
    E { tag: Single(Tag(0x0070, 0x0021)), alias: "NumberOfGraphicPoints", vr: US },
    E { tag: Single(Tag(0x0070, 0x0022)), alias: "GraphicData", vr: FL },
    E { tag: Single(Tag(0x0070, 0x0023)), alias: "GraphicType", vr: CS },
    E { tag: Single(Tag(0x0070, 0x0024)), alias: "GraphicFilled", vr: CS },
    E { tag: Single(Tag(0x0070, 0x0040)), alias: "ImageRotationRetired", vr: IS }, // RET (2007)
    E { tag: Single(Tag(0x0070, 0x0041)), alias: "ImageHorizontalFlip", vr: CS },
    E { tag: Single(Tag(0x0070, 0x0042)), alias: "ImageRotation", vr: US },
    E { tag: Single(Tag(0x0070, 0x0050)), alias: "DisplayedAreaTopLeftHandCornerTrial", vr: US }, // RET (2007)
    E { tag: Single(Tag(0x0070, 0x0051)), alias: "DisplayedAreaBottomRightHandCornerTrial", vr: US }, // RET (2007)
    E { tag: Single(Tag(0x0070, 0x0052)), alias: "DisplayedAreaTopLeftHandCorner", vr: SL },
    E { tag: Single(Tag(0x0070, 0x0053)), alias: "DisplayedAreaBottomRightHandCorner", vr: SL },
    E { tag: Single(Tag(0x0070, 0x005A)), alias: "DisplayedAreaSelectionSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x0060)), alias: "GraphicLayerSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x0062)), alias: "GraphicLayerOrder", vr: IS },
    E { tag: Single(Tag(0x0070, 0x0066)), alias: "GraphicLayerRecommendedDisplayGrayscaleValue", vr: US },
    E { tag: Single(Tag(0x0070, 0x0067)), alias: "GraphicLayerRecommendedDisplayRGBValue", vr: US }, // RET (2004)
    E { tag: Single(Tag(0x0070, 0x0068)), alias: "GraphicLayerDescription", vr: LO },
    E { tag: Single(Tag(0x0070, 0x0080)), alias: "ContentLabel", vr: CS },
    E { tag: Single(Tag(0x0070, 0x0081)), alias: "ContentDescription", vr: LO },
    E { tag: Single(Tag(0x0070, 0x0082)), alias: "PresentationCreationDate", vr: DA },
    E { tag: Single(Tag(0x0070, 0x0083)), alias: "PresentationCreationTime", vr: TM },
    E { tag: Single(Tag(0x0070, 0x0084)), alias: "ContentCreatorName", vr: PN },
    E { tag: Single(Tag(0x0070, 0x0086)), alias: "ContentCreatorIdentificationCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x0087)), alias: "AlternateContentDescriptionSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x0100)), alias: "PresentationSizeMode", vr: CS },
    E { tag: Single(Tag(0x0070, 0x0101)), alias: "PresentationPixelSpacing", vr: DS },
    E { tag: Single(Tag(0x0070, 0x0102)), alias: "PresentationPixelAspectRatio", vr: IS },
    E { tag: Single(Tag(0x0070, 0x0103)), alias: "PresentationPixelMagnificationRatio", vr: FL },
    E { tag: Single(Tag(0x0070, 0x0207)), alias: "GraphicGroupLabel", vr: LO },
    E { tag: Single(Tag(0x0070, 0x0208)), alias: "GraphicGroupDescription", vr: ST },
    E { tag: Single(Tag(0x0070, 0x0209)), alias: "CompoundGraphicSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x0226)), alias: "CompoundGraphicInstanceID", vr: UL },
    E { tag: Single(Tag(0x0070, 0x0227)), alias: "FontName", vr: LO },
    E { tag: Single(Tag(0x0070, 0x0228)), alias: "FontNameType", vr: CS },
    E { tag: Single(Tag(0x0070, 0x0229)), alias: "CSSFontName", vr: LO },
    E { tag: Single(Tag(0x0070, 0x0230)), alias: "RotationAngle", vr: FD },
    E { tag: Single(Tag(0x0070, 0x0231)), alias: "TextStyleSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x0232)), alias: "LineStyleSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x0233)), alias: "FillStyleSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x0234)), alias: "GraphicGroupSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x0241)), alias: "TextColorCIELabValue", vr: US },
    E { tag: Single(Tag(0x0070, 0x0242)), alias: "HorizontalAlignment", vr: CS },
    E { tag: Single(Tag(0x0070, 0x0243)), alias: "VerticalAlignment", vr: CS },
    E { tag: Single(Tag(0x0070, 0x0244)), alias: "ShadowStyle", vr: CS },
    E { tag: Single(Tag(0x0070, 0x0245)), alias: "ShadowOffsetX", vr: FL },
    E { tag: Single(Tag(0x0070, 0x0246)), alias: "ShadowOffsetY", vr: FL },
    E { tag: Single(Tag(0x0070, 0x0247)), alias: "ShadowColorCIELabValue", vr: US },
    E { tag: Single(Tag(0x0070, 0x0248)), alias: "Underlined", vr: CS },
    E { tag: Single(Tag(0x0070, 0x0249)), alias: "Bold", vr: CS },
    E { tag: Single(Tag(0x0070, 0x0250)), alias: "Italic", vr: CS },
    E { tag: Single(Tag(0x0070, 0x0251)), alias: "PatternOnColorCIELabValue", vr: US },
    E { tag: Single(Tag(0x0070, 0x0252)), alias: "PatternOffColorCIELabValue", vr: US },
    E { tag: Single(Tag(0x0070, 0x0253)), alias: "LineThickness", vr: FL },
    E { tag: Single(Tag(0x0070, 0x0254)), alias: "LineDashingStyle", vr: CS },
    E { tag: Single(Tag(0x0070, 0x0255)), alias: "LinePattern", vr: UL },
    E { tag: Single(Tag(0x0070, 0x0256)), alias: "FillPattern", vr: OB },
    E { tag: Single(Tag(0x0070, 0x0257)), alias: "FillMode", vr: CS },
    E { tag: Single(Tag(0x0070, 0x0258)), alias: "ShadowOpacity", vr: FL },
    E { tag: Single(Tag(0x0070, 0x0261)), alias: "GapLength", vr: FL },
    E { tag: Single(Tag(0x0070, 0x0262)), alias: "DiameterOfVisibility", vr: FL },
    E { tag: Single(Tag(0x0070, 0x0273)), alias: "RotationPoint", vr: FL },
    E { tag: Single(Tag(0x0070, 0x0274)), alias: "TickAlignment", vr: CS },
    E { tag: Single(Tag(0x0070, 0x0278)), alias: "ShowTickLabel", vr: CS },
    E { tag: Single(Tag(0x0070, 0x0279)), alias: "TickLabelAlignment", vr: CS },
    E { tag: Single(Tag(0x0070, 0x0282)), alias: "CompoundGraphicUnits", vr: CS },
    E { tag: Single(Tag(0x0070, 0x0284)), alias: "PatternOnOpacity", vr: FL },
    E { tag: Single(Tag(0x0070, 0x0285)), alias: "PatternOffOpacity", vr: FL },
    E { tag: Single(Tag(0x0070, 0x0287)), alias: "MajorTicksSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x0288)), alias: "TickPosition", vr: FL },
    E { tag: Single(Tag(0x0070, 0x0289)), alias: "TickLabel", vr: SH },
    E { tag: Single(Tag(0x0070, 0x0294)), alias: "CompoundGraphicType", vr: CS },
    E { tag: Single(Tag(0x0070, 0x0295)), alias: "GraphicGroupID", vr: UL },
    E { tag: Single(Tag(0x0070, 0x0306)), alias: "ShapeType", vr: CS },
    E { tag: Single(Tag(0x0070, 0x0308)), alias: "RegistrationSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x0309)), alias: "MatrixRegistrationSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x030A)), alias: "MatrixSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x030B)), alias: "FrameOfReferenceToDisplayedCoordinateSystemTransformationMatrix", vr: FD },
    E { tag: Single(Tag(0x0070, 0x030C)), alias: "FrameOfReferenceTransformationMatrixType", vr: CS },
    E { tag: Single(Tag(0x0070, 0x030D)), alias: "RegistrationTypeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x030F)), alias: "FiducialDescription", vr: ST },
    E { tag: Single(Tag(0x0070, 0x0310)), alias: "FiducialIdentifier", vr: SH },
    E { tag: Single(Tag(0x0070, 0x0311)), alias: "FiducialIdentifierCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x0312)), alias: "ContourUncertaintyRadius", vr: FD },
    E { tag: Single(Tag(0x0070, 0x0314)), alias: "UsedFiducialsSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x0318)), alias: "GraphicCoordinatesDataSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x031A)), alias: "FiducialUID", vr: UI },
    E { tag: Single(Tag(0x0070, 0x031B)), alias: "ReferencedFiducialUID", vr: UI },
    E { tag: Single(Tag(0x0070, 0x031C)), alias: "FiducialSetSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x031E)), alias: "FiducialSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x031F)), alias: "FiducialsPropertyCategoryCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x0401)), alias: "GraphicLayerRecommendedDisplayCIELabValue", vr: US },
    E { tag: Single(Tag(0x0070, 0x0402)), alias: "BlendingSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x0403)), alias: "RelativeOpacity", vr: FL },
    E { tag: Single(Tag(0x0070, 0x0404)), alias: "ReferencedSpatialRegistrationSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x0405)), alias: "BlendingPosition", vr: CS },
    E { tag: Single(Tag(0x0070, 0x1101)), alias: "PresentationDisplayCollectionUID", vr: UI },
    E { tag: Single(Tag(0x0070, 0x1102)), alias: "PresentationSequenceCollectionUID", vr: UI },
    E { tag: Single(Tag(0x0070, 0x1103)), alias: "PresentationSequencePositionIndex", vr: US },
    E { tag: Single(Tag(0x0070, 0x1104)), alias: "RenderedImageReferenceSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x1201)), alias: "VolumetricPresentationStateInputSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x1202)), alias: "PresentationInputType", vr: CS },
    E { tag: Single(Tag(0x0070, 0x1203)), alias: "InputSequencePositionIndex", vr: US },
    E { tag: Single(Tag(0x0070, 0x1204)), alias: "Crop", vr: CS },
    E { tag: Single(Tag(0x0070, 0x1205)), alias: "CroppingSpecificationIndex", vr: US },
    E { tag: Single(Tag(0x0070, 0x1206)), alias: "CompositingMethod", vr: CS }, // RET (2017a)
    E { tag: Single(Tag(0x0070, 0x1207)), alias: "VolumetricPresentationInputNumber", vr: US },
    E { tag: Single(Tag(0x0070, 0x1208)), alias: "ImageVolumeGeometry", vr: CS },
    E { tag: Single(Tag(0x0070, 0x1209)), alias: "VolumetricPresentationInputSetUID", vr: UI },
    E { tag: Single(Tag(0x0070, 0x120A)), alias: "VolumetricPresentationInputSetSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x120B)), alias: "GlobalCrop", vr: CS },
    E { tag: Single(Tag(0x0070, 0x120C)), alias: "GlobalCroppingSpecificationIndex", vr: US },
    E { tag: Single(Tag(0x0070, 0x120D)), alias: "RenderingMethod", vr: CS },
    E { tag: Single(Tag(0x0070, 0x1301)), alias: "VolumeCroppingSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x1302)), alias: "VolumeCroppingMethod", vr: CS },
    E { tag: Single(Tag(0x0070, 0x1303)), alias: "BoundingBoxCrop", vr: FD },
    E { tag: Single(Tag(0x0070, 0x1304)), alias: "ObliqueCroppingPlaneSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x1305)), alias: "Plane", vr: FD },
    E { tag: Single(Tag(0x0070, 0x1306)), alias: "PlaneNormal", vr: FD },
    E { tag: Single(Tag(0x0070, 0x1309)), alias: "CroppingSpecificationNumber", vr: US },
    E { tag: Single(Tag(0x0070, 0x1501)), alias: "MultiPlanarReconstructionStyle", vr: CS },
    E { tag: Single(Tag(0x0070, 0x1502)), alias: "MPRThicknessType", vr: CS },
    E { tag: Single(Tag(0x0070, 0x1503)), alias: "MPRSlabThickness", vr: FD },
    E { tag: Single(Tag(0x0070, 0x1505)), alias: "MPRTopLeftHandCorner", vr: FD },
    E { tag: Single(Tag(0x0070, 0x1507)), alias: "MPRViewWidthDirection", vr: FD },
    E { tag: Single(Tag(0x0070, 0x1508)), alias: "MPRViewWidth", vr: FD },
    E { tag: Single(Tag(0x0070, 0x150C)), alias: "NumberOfVolumetricCurvePoints", vr: UL },
    E { tag: Single(Tag(0x0070, 0x150D)), alias: "VolumetricCurvePoints", vr: OD },
    E { tag: Single(Tag(0x0070, 0x1511)), alias: "MPRViewHeightDirection", vr: FD },
    E { tag: Single(Tag(0x0070, 0x1512)), alias: "MPRViewHeight", vr: FD },
    E { tag: Single(Tag(0x0070, 0x1602)), alias: "RenderProjection", vr: CS },
    E { tag: Single(Tag(0x0070, 0x1603)), alias: "ViewpointPosition", vr: FD },
    E { tag: Single(Tag(0x0070, 0x1604)), alias: "ViewpointLookAtPoint", vr: FD },
    E { tag: Single(Tag(0x0070, 0x1605)), alias: "ViewpointUpDirection", vr: FD },
    E { tag: Single(Tag(0x0070, 0x1606)), alias: "RenderFieldOfView", vr: FD },
    E { tag: Single(Tag(0x0070, 0x1607)), alias: "SamplingStepSize", vr: FD },
    E { tag: Single(Tag(0x0070, 0x1701)), alias: "ShadingStyle", vr: CS },
    E { tag: Single(Tag(0x0070, 0x1702)), alias: "AmbientReflectionIntensity", vr: FD },
    E { tag: Single(Tag(0x0070, 0x1703)), alias: "LightDirection", vr: FD },
    E { tag: Single(Tag(0x0070, 0x1704)), alias: "DiffuseReflectionIntensity", vr: FD },
    E { tag: Single(Tag(0x0070, 0x1705)), alias: "SpecularReflectionIntensity", vr: FD },
    E { tag: Single(Tag(0x0070, 0x1706)), alias: "Shininess", vr: FD },
    E { tag: Single(Tag(0x0070, 0x1801)), alias: "PresentationStateClassificationComponentSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x1802)), alias: "ComponentType", vr: CS },
    E { tag: Single(Tag(0x0070, 0x1803)), alias: "ComponentInputSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x1804)), alias: "VolumetricPresentationInputIndex", vr: US },
    E { tag: Single(Tag(0x0070, 0x1805)), alias: "PresentationStateCompositorComponentSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x1806)), alias: "WeightingTransferFunctionSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x1807)), alias: "WeightingLookupTableDescriptor", vr: US },
    E { tag: Single(Tag(0x0070, 0x1808)), alias: "WeightingLookupTableData", vr: OB },
    E { tag: Single(Tag(0x0070, 0x1901)), alias: "VolumetricAnnotationSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x1903)), alias: "ReferencedStructuredContextSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x1904)), alias: "ReferencedContentItem", vr: UI },
    E { tag: Single(Tag(0x0070, 0x1905)), alias: "VolumetricPresentationInputAnnotationSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x1907)), alias: "AnnotationClipping", vr: CS },
    E { tag: Single(Tag(0x0070, 0x1A01)), alias: "PresentationAnimationStyle", vr: CS },
    E { tag: Single(Tag(0x0070, 0x1A03)), alias: "RecommendedAnimationRate", vr: FD },
    E { tag: Single(Tag(0x0070, 0x1A04)), alias: "AnimationCurveSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x1A05)), alias: "AnimationStepSize", vr: FD },
    E { tag: Single(Tag(0x0070, 0x1A06)), alias: "SwivelRange", vr: FD },
    E { tag: Single(Tag(0x0070, 0x1A07)), alias: "VolumetricCurveUpDirections", vr: OD },
    E { tag: Single(Tag(0x0070, 0x1A08)), alias: "VolumeStreamSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x1A09)), alias: "RGBATransferFunctionDescription", vr: LO },
    E { tag: Single(Tag(0x0070, 0x1B01)), alias: "AdvancedBlendingSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x1B02)), alias: "BlendingInputNumber", vr: US },
    E { tag: Single(Tag(0x0070, 0x1B03)), alias: "BlendingDisplayInputSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x1B04)), alias: "BlendingDisplaySequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x1B06)), alias: "BlendingMode", vr: CS },
    E { tag: Single(Tag(0x0070, 0x1B07)), alias: "TimeSeriesBlending", vr: CS },
    E { tag: Single(Tag(0x0070, 0x1B08)), alias: "GeometryForDisplay", vr: CS },
    E { tag: Single(Tag(0x0070, 0x1B11)), alias: "ThresholdSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x1B12)), alias: "ThresholdValueSequence", vr: SQ },
    E { tag: Single(Tag(0x0070, 0x1B13)), alias: "ThresholdType", vr: CS },
    E { tag: Single(Tag(0x0070, 0x1B14)), alias: "ThresholdValue", vr: FD },
    E { tag: Single(Tag(0x0072, 0x0002)), alias: "HangingProtocolName", vr: SH },
    E { tag: Single(Tag(0x0072, 0x0004)), alias: "HangingProtocolDescription", vr: LO },
    E { tag: Single(Tag(0x0072, 0x0006)), alias: "HangingProtocolLevel", vr: CS },
    E { tag: Single(Tag(0x0072, 0x0008)), alias: "HangingProtocolCreator", vr: LO },
    E { tag: Single(Tag(0x0072, 0x000A)), alias: "HangingProtocolCreationDateTime", vr: DT },
    E { tag: Single(Tag(0x0072, 0x000C)), alias: "HangingProtocolDefinitionSequence", vr: SQ },
    E { tag: Single(Tag(0x0072, 0x000E)), alias: "HangingProtocolUserIdentificationCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0072, 0x0010)), alias: "HangingProtocolUserGroupName", vr: LO },
    E { tag: Single(Tag(0x0072, 0x0012)), alias: "SourceHangingProtocolSequence", vr: SQ },
    E { tag: Single(Tag(0x0072, 0x0014)), alias: "NumberOfPriorsReferenced", vr: US },
    E { tag: Single(Tag(0x0072, 0x0020)), alias: "ImageSetsSequence", vr: SQ },
    E { tag: Single(Tag(0x0072, 0x0022)), alias: "ImageSetSelectorSequence", vr: SQ },
    E { tag: Single(Tag(0x0072, 0x0024)), alias: "ImageSetSelectorUsageFlag", vr: CS },
    E { tag: Single(Tag(0x0072, 0x0026)), alias: "SelectorAttribute", vr: AT },
    E { tag: Single(Tag(0x0072, 0x0028)), alias: "SelectorValueNumber", vr: US },
    E { tag: Single(Tag(0x0072, 0x0030)), alias: "TimeBasedImageSetsSequence", vr: SQ },
    E { tag: Single(Tag(0x0072, 0x0032)), alias: "ImageSetNumber", vr: US },
    E { tag: Single(Tag(0x0072, 0x0034)), alias: "ImageSetSelectorCategory", vr: CS },
    E { tag: Single(Tag(0x0072, 0x0038)), alias: "RelativeTime", vr: US },
    E { tag: Single(Tag(0x0072, 0x003A)), alias: "RelativeTimeUnits", vr: CS },
    E { tag: Single(Tag(0x0072, 0x003C)), alias: "AbstractPriorValue", vr: SS },
    E { tag: Single(Tag(0x0072, 0x003E)), alias: "AbstractPriorCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0072, 0x0040)), alias: "ImageSetLabel", vr: LO },
    E { tag: Single(Tag(0x0072, 0x0050)), alias: "SelectorAttributeVR", vr: CS },
    E { tag: Single(Tag(0x0072, 0x0052)), alias: "SelectorSequencePointer", vr: AT },
    E { tag: Single(Tag(0x0072, 0x0054)), alias: "SelectorSequencePointerPrivateCreator", vr: LO },
    E { tag: Single(Tag(0x0072, 0x0056)), alias: "SelectorAttributePrivateCreator", vr: LO },
    E { tag: Single(Tag(0x0072, 0x005E)), alias: "SelectorAEValue", vr: AE },
    E { tag: Single(Tag(0x0072, 0x005F)), alias: "SelectorASValue", vr: AS },
    E { tag: Single(Tag(0x0072, 0x0060)), alias: "SelectorATValue", vr: AT },
    E { tag: Single(Tag(0x0072, 0x0061)), alias: "SelectorDAValue", vr: DA },
    E { tag: Single(Tag(0x0072, 0x0062)), alias: "SelectorCSValue", vr: CS },
    E { tag: Single(Tag(0x0072, 0x0063)), alias: "SelectorDTValue", vr: DT },
    E { tag: Single(Tag(0x0072, 0x0064)), alias: "SelectorISValue", vr: IS },
    E { tag: Single(Tag(0x0072, 0x0065)), alias: "SelectorOBValue", vr: OB },
    E { tag: Single(Tag(0x0072, 0x0066)), alias: "SelectorLOValue", vr: LO },
    E { tag: Single(Tag(0x0072, 0x0067)), alias: "SelectorOFValue", vr: OF },
    E { tag: Single(Tag(0x0072, 0x0068)), alias: "SelectorLTValue", vr: LT },
    E { tag: Single(Tag(0x0072, 0x0069)), alias: "SelectorOWValue", vr: OW },
    E { tag: Single(Tag(0x0072, 0x006A)), alias: "SelectorPNValue", vr: PN },
    E { tag: Single(Tag(0x0072, 0x006B)), alias: "SelectorTMValue", vr: TM },
    E { tag: Single(Tag(0x0072, 0x006C)), alias: "SelectorSHValue", vr: SH },
    E { tag: Single(Tag(0x0072, 0x006D)), alias: "SelectorUNValue", vr: UN },
    E { tag: Single(Tag(0x0072, 0x006E)), alias: "SelectorSTValue", vr: ST },
    E { tag: Single(Tag(0x0072, 0x006F)), alias: "SelectorUCValue", vr: UC },
    E { tag: Single(Tag(0x0072, 0x0070)), alias: "SelectorUTValue", vr: UT },
    E { tag: Single(Tag(0x0072, 0x0071)), alias: "SelectorURValue", vr: UR },
    E { tag: Single(Tag(0x0072, 0x0072)), alias: "SelectorDSValue", vr: DS },
    E { tag: Single(Tag(0x0072, 0x0073)), alias: "SelectorODValue", vr: OD },
    E { tag: Single(Tag(0x0072, 0x0074)), alias: "SelectorFDValue", vr: FD },
    E { tag: Single(Tag(0x0072, 0x0075)), alias: "SelectorOLValue", vr: OL },
    E { tag: Single(Tag(0x0072, 0x0076)), alias: "SelectorFLValue", vr: FL },
    E { tag: Single(Tag(0x0072, 0x0078)), alias: "SelectorULValue", vr: UL },
    E { tag: Single(Tag(0x0072, 0x007A)), alias: "SelectorUSValue", vr: US },
    E { tag: Single(Tag(0x0072, 0x007C)), alias: "SelectorSLValue", vr: SL },
    E { tag: Single(Tag(0x0072, 0x007E)), alias: "SelectorSSValue", vr: SS },
    E { tag: Single(Tag(0x0072, 0x007F)), alias: "SelectorUIValue", vr: UI },
    E { tag: Single(Tag(0x0072, 0x0080)), alias: "SelectorCodeSequenceValue", vr: SQ },
    E { tag: Single(Tag(0x0072, 0x0100)), alias: "NumberOfScreens", vr: US },
    E { tag: Single(Tag(0x0072, 0x0102)), alias: "NominalScreenDefinitionSequence", vr: SQ },
    E { tag: Single(Tag(0x0072, 0x0104)), alias: "NumberOfVerticalPixels", vr: US },
    E { tag: Single(Tag(0x0072, 0x0106)), alias: "NumberOfHorizontalPixels", vr: US },
    E { tag: Single(Tag(0x0072, 0x0108)), alias: "DisplayEnvironmentSpatialPosition", vr: FD },
    E { tag: Single(Tag(0x0072, 0x010A)), alias: "ScreenMinimumGrayscaleBitDepth", vr: US },
    E { tag: Single(Tag(0x0072, 0x010C)), alias: "ScreenMinimumColorBitDepth", vr: US },
    E { tag: Single(Tag(0x0072, 0x010E)), alias: "ApplicationMaximumRepaintTime", vr: US },
    E { tag: Single(Tag(0x0072, 0x0200)), alias: "DisplaySetsSequence", vr: SQ },
    E { tag: Single(Tag(0x0072, 0x0202)), alias: "DisplaySetNumber", vr: US },
    E { tag: Single(Tag(0x0072, 0x0203)), alias: "DisplaySetLabel", vr: LO },
    E { tag: Single(Tag(0x0072, 0x0204)), alias: "DisplaySetPresentationGroup", vr: US },
    E { tag: Single(Tag(0x0072, 0x0206)), alias: "DisplaySetPresentationGroupDescription", vr: LO },
    E { tag: Single(Tag(0x0072, 0x0208)), alias: "PartialDataDisplayHandling", vr: CS },
    E { tag: Single(Tag(0x0072, 0x0210)), alias: "SynchronizedScrollingSequence", vr: SQ },
    E { tag: Single(Tag(0x0072, 0x0212)), alias: "DisplaySetScrollingGroup", vr: US },
    E { tag: Single(Tag(0x0072, 0x0214)), alias: "NavigationIndicatorSequence", vr: SQ },
    E { tag: Single(Tag(0x0072, 0x0216)), alias: "NavigationDisplaySet", vr: US },
    E { tag: Single(Tag(0x0072, 0x0218)), alias: "ReferenceDisplaySets", vr: US },
    E { tag: Single(Tag(0x0072, 0x0300)), alias: "ImageBoxesSequence", vr: SQ },
    E { tag: Single(Tag(0x0072, 0x0302)), alias: "ImageBoxNumber", vr: US },
    E { tag: Single(Tag(0x0072, 0x0304)), alias: "ImageBoxLayoutType", vr: CS },
    E { tag: Single(Tag(0x0072, 0x0306)), alias: "ImageBoxTileHorizontalDimension", vr: US },
    E { tag: Single(Tag(0x0072, 0x0308)), alias: "ImageBoxTileVerticalDimension", vr: US },
    E { tag: Single(Tag(0x0072, 0x0310)), alias: "ImageBoxScrollDirection", vr: CS },
    E { tag: Single(Tag(0x0072, 0x0312)), alias: "ImageBoxSmallScrollType", vr: CS },
    E { tag: Single(Tag(0x0072, 0x0314)), alias: "ImageBoxSmallScrollAmount", vr: US },
    E { tag: Single(Tag(0x0072, 0x0316)), alias: "ImageBoxLargeScrollType", vr: CS },
    E { tag: Single(Tag(0x0072, 0x0318)), alias: "ImageBoxLargeScrollAmount", vr: US },
    E { tag: Single(Tag(0x0072, 0x0320)), alias: "ImageBoxOverlapPriority", vr: US },
    E { tag: Single(Tag(0x0072, 0x0330)), alias: "CineRelativeToRealTime", vr: FD },
    E { tag: Single(Tag(0x0072, 0x0400)), alias: "FilterOperationsSequence", vr: SQ },
    E { tag: Single(Tag(0x0072, 0x0402)), alias: "FilterByCategory", vr: CS },
    E { tag: Single(Tag(0x0072, 0x0404)), alias: "FilterByAttributePresence", vr: CS },
    E { tag: Single(Tag(0x0072, 0x0406)), alias: "FilterByOperator", vr: CS },
    E { tag: Single(Tag(0x0072, 0x0420)), alias: "StructuredDisplayBackgroundCIELabValue", vr: US },
    E { tag: Single(Tag(0x0072, 0x0421)), alias: "EmptyImageBoxCIELabValue", vr: US },
    E { tag: Single(Tag(0x0072, 0x0422)), alias: "StructuredDisplayImageBoxSequence", vr: SQ },
    E { tag: Single(Tag(0x0072, 0x0424)), alias: "StructuredDisplayTextBoxSequence", vr: SQ },
    E { tag: Single(Tag(0x0072, 0x0427)), alias: "ReferencedFirstFrameSequence", vr: SQ },
    E { tag: Single(Tag(0x0072, 0x0430)), alias: "ImageBoxSynchronizationSequence", vr: SQ },
    E { tag: Single(Tag(0x0072, 0x0432)), alias: "SynchronizedImageBoxList", vr: US },
    E { tag: Single(Tag(0x0072, 0x0434)), alias: "TypeOfSynchronization", vr: CS },
    E { tag: Single(Tag(0x0072, 0x0500)), alias: "BlendingOperationType", vr: CS },
    E { tag: Single(Tag(0x0072, 0x0510)), alias: "ReformattingOperationType", vr: CS },
    E { tag: Single(Tag(0x0072, 0x0512)), alias: "ReformattingThickness", vr: FD },
    E { tag: Single(Tag(0x0072, 0x0514)), alias: "ReformattingInterval", vr: FD },
    E { tag: Single(Tag(0x0072, 0x0516)), alias: "ReformattingOperationInitialViewDirection", vr: CS },
    E { tag: Single(Tag(0x0072, 0x0520)), alias: "ThreeDRenderingType", vr: CS },
    E { tag: Single(Tag(0x0072, 0x0600)), alias: "SortingOperationsSequence", vr: SQ },
    E { tag: Single(Tag(0x0072, 0x0602)), alias: "SortByCategory", vr: CS },
    E { tag: Single(Tag(0x0072, 0x0604)), alias: "SortingDirection", vr: CS },
    E { tag: Single(Tag(0x0072, 0x0700)), alias: "DisplaySetPatientOrientation", vr: CS },
    E { tag: Single(Tag(0x0072, 0x0702)), alias: "VOIType", vr: CS },
    E { tag: Single(Tag(0x0072, 0x0704)), alias: "PseudoColorType", vr: CS },
    E { tag: Single(Tag(0x0072, 0x0705)), alias: "PseudoColorPaletteInstanceReferenceSequence", vr: SQ },
    E { tag: Single(Tag(0x0072, 0x0706)), alias: "ShowGrayscaleInverted", vr: CS },
    E { tag: Single(Tag(0x0072, 0x0710)), alias: "ShowImageTrueSizeFlag", vr: CS },
    E { tag: Single(Tag(0x0072, 0x0712)), alias: "ShowGraphicAnnotationFlag", vr: CS },
    E { tag: Single(Tag(0x0072, 0x0714)), alias: "ShowPatientDemographicsFlag", vr: CS },
    E { tag: Single(Tag(0x0072, 0x0716)), alias: "ShowAcquisitionTechniquesFlag", vr: CS },
    E { tag: Single(Tag(0x0072, 0x0717)), alias: "DisplaySetHorizontalJustification", vr: CS },
    E { tag: Single(Tag(0x0072, 0x0718)), alias: "DisplaySetVerticalJustification", vr: CS },
    E { tag: Single(Tag(0x0074, 0x0120)), alias: "ContinuationStartMeterset", vr: FD },
    E { tag: Single(Tag(0x0074, 0x0121)), alias: "ContinuationEndMeterset", vr: FD },
    E { tag: Single(Tag(0x0074, 0x1000)), alias: "ProcedureStepState", vr: CS },
    E { tag: Single(Tag(0x0074, 0x1002)), alias: "ProcedureStepProgressInformationSequence", vr: SQ },
    E { tag: Single(Tag(0x0074, 0x1004)), alias: "ProcedureStepProgress", vr: DS },
    E { tag: Single(Tag(0x0074, 0x1006)), alias: "ProcedureStepProgressDescription", vr: ST },
    E { tag: Single(Tag(0x0074, 0x1007)), alias: "ProcedureStepProgressParametersSequence", vr: SQ },
    E { tag: Single(Tag(0x0074, 0x1008)), alias: "ProcedureStepCommunicationsURISequence", vr: SQ },
    E { tag: Single(Tag(0x0074, 0x100A)), alias: "ContactURI", vr: UR },
    E { tag: Single(Tag(0x0074, 0x100C)), alias: "ContactDisplayName", vr: LO },
    E { tag: Single(Tag(0x0074, 0x100E)), alias: "ProcedureStepDiscontinuationReasonCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0074, 0x1020)), alias: "BeamTaskSequence", vr: SQ },
    E { tag: Single(Tag(0x0074, 0x1022)), alias: "BeamTaskType", vr: CS },
    E { tag: Single(Tag(0x0074, 0x1024)), alias: "BeamOrderIndexTrial", vr: IS }, // RET (2009)
    E { tag: Single(Tag(0x0074, 0x1025)), alias: "AutosequenceFlag", vr: CS },
    E { tag: Single(Tag(0x0074, 0x1026)), alias: "TableTopVerticalAdjustedPosition", vr: FD },
    E { tag: Single(Tag(0x0074, 0x1027)), alias: "TableTopLongitudinalAdjustedPosition", vr: FD },
    E { tag: Single(Tag(0x0074, 0x1028)), alias: "TableTopLateralAdjustedPosition", vr: FD },
    E { tag: Single(Tag(0x0074, 0x102A)), alias: "PatientSupportAdjustedAngle", vr: FD },
    E { tag: Single(Tag(0x0074, 0x102B)), alias: "TableTopEccentricAdjustedAngle", vr: FD },
    E { tag: Single(Tag(0x0074, 0x102C)), alias: "TableTopPitchAdjustedAngle", vr: FD },
    E { tag: Single(Tag(0x0074, 0x102D)), alias: "TableTopRollAdjustedAngle", vr: FD },
    E { tag: Single(Tag(0x0074, 0x1030)), alias: "DeliveryVerificationImageSequence", vr: SQ },
    E { tag: Single(Tag(0x0074, 0x1032)), alias: "VerificationImageTiming", vr: CS },
    E { tag: Single(Tag(0x0074, 0x1034)), alias: "DoubleExposureFlag", vr: CS },
    E { tag: Single(Tag(0x0074, 0x1036)), alias: "DoubleExposureOrdering", vr: CS },
    E { tag: Single(Tag(0x0074, 0x1038)), alias: "DoubleExposureMetersetTrial", vr: DS }, // RET (2009)
    E { tag: Single(Tag(0x0074, 0x103A)), alias: "DoubleExposureFieldDeltaTrial", vr: DS }, // RET (2009)
    E { tag: Single(Tag(0x0074, 0x1040)), alias: "RelatedReferenceRTImageSequence", vr: SQ },
    E { tag: Single(Tag(0x0074, 0x1042)), alias: "GeneralMachineVerificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0074, 0x1044)), alias: "ConventionalMachineVerificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0074, 0x1046)), alias: "IonMachineVerificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0074, 0x1048)), alias: "FailedAttributesSequence", vr: SQ },
    E { tag: Single(Tag(0x0074, 0x104A)), alias: "OverriddenAttributesSequence", vr: SQ },
    E { tag: Single(Tag(0x0074, 0x104C)), alias: "ConventionalControlPointVerificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0074, 0x104E)), alias: "IonControlPointVerificationSequence", vr: SQ },
    E { tag: Single(Tag(0x0074, 0x1050)), alias: "AttributeOccurrenceSequence", vr: SQ },
    E { tag: Single(Tag(0x0074, 0x1052)), alias: "AttributeOccurrencePointer", vr: AT },
    E { tag: Single(Tag(0x0074, 0x1054)), alias: "AttributeItemSelector", vr: UL },
    E { tag: Single(Tag(0x0074, 0x1056)), alias: "AttributeOccurrencePrivateCreator", vr: LO },
    E { tag: Single(Tag(0x0074, 0x1057)), alias: "SelectorSequencePointerItems", vr: IS },
    E { tag: Single(Tag(0x0074, 0x1200)), alias: "ScheduledProcedureStepPriority", vr: CS },
    E { tag: Single(Tag(0x0074, 0x1202)), alias: "WorklistLabel", vr: LO },
    E { tag: Single(Tag(0x0074, 0x1204)), alias: "ProcedureStepLabel", vr: LO },
    E { tag: Single(Tag(0x0074, 0x1210)), alias: "ScheduledProcessingParametersSequence", vr: SQ },
    E { tag: Single(Tag(0x0074, 0x1212)), alias: "PerformedProcessingParametersSequence", vr: SQ },
    E { tag: Single(Tag(0x0074, 0x1216)), alias: "UnifiedProcedureStepPerformedProcedureSequence", vr: SQ },
    E { tag: Single(Tag(0x0074, 0x1220)), alias: "RelatedProcedureStepSequence", vr: SQ }, // RET (2009)
    E { tag: Single(Tag(0x0074, 0x1222)), alias: "ProcedureStepRelationshipType", vr: LO }, // RET (2009)
    E { tag: Single(Tag(0x0074, 0x1224)), alias: "ReplacedProcedureStepSequence", vr: SQ },
    E { tag: Single(Tag(0x0074, 0x1230)), alias: "DeletionLock", vr: LO },
    E { tag: Single(Tag(0x0074, 0x1234)), alias: "ReceivingAE", vr: AE },
    E { tag: Single(Tag(0x0074, 0x1236)), alias: "RequestingAE", vr: AE },
    E { tag: Single(Tag(0x0074, 0x1238)), alias: "ReasonForCancellation", vr: LT },
    E { tag: Single(Tag(0x0074, 0x1242)), alias: "SCPStatus", vr: CS },
    E { tag: Single(Tag(0x0074, 0x1244)), alias: "SubscriptionListStatus", vr: CS },
    E { tag: Single(Tag(0x0074, 0x1246)), alias: "UnifiedProcedureStepListStatus", vr: CS },
    E { tag: Single(Tag(0x0074, 0x1324)), alias: "BeamOrderIndex", vr: UL },
    E { tag: Single(Tag(0x0074, 0x1338)), alias: "DoubleExposureMeterset", vr: FD },
    E { tag: Single(Tag(0x0074, 0x133A)), alias: "DoubleExposureFieldDelta", vr: FD },
    E { tag: Single(Tag(0x0074, 0x1401)), alias: "BrachyTaskSequence", vr: SQ },
    E { tag: Single(Tag(0x0074, 0x1402)), alias: "ContinuationStartTotalReferenceAirKerma", vr: DS },
    E { tag: Single(Tag(0x0074, 0x1403)), alias: "ContinuationEndTotalReferenceAirKerma", vr: DS },
    E { tag: Single(Tag(0x0074, 0x1404)), alias: "ContinuationPulseNumber", vr: IS },
    E { tag: Single(Tag(0x0074, 0x1405)), alias: "ChannelDeliveryOrderSequence", vr: SQ },
    E { tag: Single(Tag(0x0074, 0x1406)), alias: "ReferencedChannelNumber", vr: IS },
    E { tag: Single(Tag(0x0074, 0x1407)), alias: "StartCumulativeTimeWeight", vr: DS },
    E { tag: Single(Tag(0x0074, 0x1408)), alias: "EndCumulativeTimeWeight", vr: DS },
    E { tag: Single(Tag(0x0074, 0x1409)), alias: "OmittedChannelSequence", vr: SQ },
    E { tag: Single(Tag(0x0074, 0x140A)), alias: "ReasonForChannelOmission", vr: CS },
    E { tag: Single(Tag(0x0074, 0x140B)), alias: "ReasonForChannelOmissionDescription", vr: LO },
    E { tag: Single(Tag(0x0074, 0x140C)), alias: "ChannelDeliveryOrderIndex", vr: IS },
    E { tag: Single(Tag(0x0074, 0x140D)), alias: "ChannelDeliveryContinuationSequence", vr: SQ },
    E { tag: Single(Tag(0x0074, 0x140E)), alias: "OmittedApplicationSetupSequence", vr: SQ },
    E { tag: Single(Tag(0x0076, 0x0001)), alias: "ImplantAssemblyTemplateName", vr: LO },
    E { tag: Single(Tag(0x0076, 0x0003)), alias: "ImplantAssemblyTemplateIssuer", vr: LO },
    E { tag: Single(Tag(0x0076, 0x0006)), alias: "ImplantAssemblyTemplateVersion", vr: LO },
    E { tag: Single(Tag(0x0076, 0x0008)), alias: "ReplacedImplantAssemblyTemplateSequence", vr: SQ },
    E { tag: Single(Tag(0x0076, 0x000A)), alias: "ImplantAssemblyTemplateType", vr: CS },
    E { tag: Single(Tag(0x0076, 0x000C)), alias: "OriginalImplantAssemblyTemplateSequence", vr: SQ },
    E { tag: Single(Tag(0x0076, 0x000E)), alias: "DerivationImplantAssemblyTemplateSequence", vr: SQ },
    E { tag: Single(Tag(0x0076, 0x0010)), alias: "ImplantAssemblyTemplateTargetAnatomySequence", vr: SQ },
    E { tag: Single(Tag(0x0076, 0x0020)), alias: "ProcedureTypeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0076, 0x0030)), alias: "SurgicalTechnique", vr: LO },
    E { tag: Single(Tag(0x0076, 0x0032)), alias: "ComponentTypesSequence", vr: SQ },
    E { tag: Single(Tag(0x0076, 0x0034)), alias: "ComponentTypeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0076, 0x0036)), alias: "ExclusiveComponentType", vr: CS },
    E { tag: Single(Tag(0x0076, 0x0038)), alias: "MandatoryComponentType", vr: CS },
    E { tag: Single(Tag(0x0076, 0x0040)), alias: "ComponentSequence", vr: SQ },
    E { tag: Single(Tag(0x0076, 0x0055)), alias: "ComponentID", vr: US },
    E { tag: Single(Tag(0x0076, 0x0060)), alias: "ComponentAssemblySequence", vr: SQ },
    E { tag: Single(Tag(0x0076, 0x0070)), alias: "Component1ReferencedID", vr: US },
    E { tag: Single(Tag(0x0076, 0x0080)), alias: "Component1ReferencedMatingFeatureSetID", vr: US },
    E { tag: Single(Tag(0x0076, 0x0090)), alias: "Component1ReferencedMatingFeatureID", vr: US },
    E { tag: Single(Tag(0x0076, 0x00A0)), alias: "Component2ReferencedID", vr: US },
    E { tag: Single(Tag(0x0076, 0x00B0)), alias: "Component2ReferencedMatingFeatureSetID", vr: US },
    E { tag: Single(Tag(0x0076, 0x00C0)), alias: "Component2ReferencedMatingFeatureID", vr: US },
    E { tag: Single(Tag(0x0078, 0x0001)), alias: "ImplantTemplateGroupName", vr: LO },
    E { tag: Single(Tag(0x0078, 0x0010)), alias: "ImplantTemplateGroupDescription", vr: ST },
    E { tag: Single(Tag(0x0078, 0x0020)), alias: "ImplantTemplateGroupIssuer", vr: LO },
    E { tag: Single(Tag(0x0078, 0x0024)), alias: "ImplantTemplateGroupVersion", vr: LO },
    E { tag: Single(Tag(0x0078, 0x0026)), alias: "ReplacedImplantTemplateGroupSequence", vr: SQ },
    E { tag: Single(Tag(0x0078, 0x0028)), alias: "ImplantTemplateGroupTargetAnatomySequence", vr: SQ },
    E { tag: Single(Tag(0x0078, 0x002A)), alias: "ImplantTemplateGroupMembersSequence", vr: SQ },
    E { tag: Single(Tag(0x0078, 0x002E)), alias: "ImplantTemplateGroupMemberID", vr: US },
    E { tag: Single(Tag(0x0078, 0x0050)), alias: "ThreeDImplantTemplateGroupMemberMatchingPoint", vr: FD },
    E { tag: Single(Tag(0x0078, 0x0060)), alias: "ThreeDImplantTemplateGroupMemberMatchingAxes", vr: FD },
    E { tag: Single(Tag(0x0078, 0x0070)), alias: "ImplantTemplateGroupMemberMatching2DCoordinatesSequence", vr: SQ },
    E { tag: Single(Tag(0x0078, 0x0090)), alias: "TwoDImplantTemplateGroupMemberMatchingPoint", vr: FD },
    E { tag: Single(Tag(0x0078, 0x00A0)), alias: "TwoDImplantTemplateGroupMemberMatchingAxes", vr: FD },
    E { tag: Single(Tag(0x0078, 0x00B0)), alias: "ImplantTemplateGroupVariationDimensionSequence", vr: SQ },
    E { tag: Single(Tag(0x0078, 0x00B2)), alias: "ImplantTemplateGroupVariationDimensionName", vr: LO },
    E { tag: Single(Tag(0x0078, 0x00B4)), alias: "ImplantTemplateGroupVariationDimensionRankSequence", vr: SQ },
    E { tag: Single(Tag(0x0078, 0x00B6)), alias: "ReferencedImplantTemplateGroupMemberID", vr: US },
    E { tag: Single(Tag(0x0078, 0x00B8)), alias: "ImplantTemplateGroupVariationDimensionRank", vr: US },
    E { tag: Single(Tag(0x0080, 0x0001)), alias: "SurfaceScanAcquisitionTypeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0080, 0x0002)), alias: "SurfaceScanModeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0080, 0x0003)), alias: "RegistrationMethodCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0080, 0x0004)), alias: "ShotDurationTime", vr: FD },
    E { tag: Single(Tag(0x0080, 0x0005)), alias: "ShotOffsetTime", vr: FD },
    E { tag: Single(Tag(0x0080, 0x0006)), alias: "SurfacePointPresentationValueData", vr: US },
    E { tag: Single(Tag(0x0080, 0x0007)), alias: "SurfacePointColorCIELabValueData", vr: US },
    E { tag: Single(Tag(0x0080, 0x0008)), alias: "UVMappingSequence", vr: SQ },
    E { tag: Single(Tag(0x0080, 0x0009)), alias: "TextureLabel", vr: SH },
    E { tag: Single(Tag(0x0080, 0x0010)), alias: "UValueData", vr: OF },
    E { tag: Single(Tag(0x0080, 0x0011)), alias: "VValueData", vr: OF },
    E { tag: Single(Tag(0x0080, 0x0012)), alias: "ReferencedTextureSequence", vr: SQ },
    E { tag: Single(Tag(0x0080, 0x0013)), alias: "ReferencedSurfaceDataSequence", vr: SQ },
    E { tag: Single(Tag(0x0082, 0x0001)), alias: "AssessmentSummary", vr: CS },
    E { tag: Single(Tag(0x0082, 0x0003)), alias: "AssessmentSummaryDescription", vr: UT },
    E { tag: Single(Tag(0x0082, 0x0004)), alias: "AssessedSOPInstanceSequence", vr: SQ },
    E { tag: Single(Tag(0x0082, 0x0005)), alias: "ReferencedComparisonSOPInstanceSequence", vr: SQ },
    E { tag: Single(Tag(0x0082, 0x0006)), alias: "NumberOfAssessmentObservations", vr: UL },
    E { tag: Single(Tag(0x0082, 0x0007)), alias: "AssessmentObservationsSequence", vr: SQ },
    E { tag: Single(Tag(0x0082, 0x0008)), alias: "ObservationSignificance", vr: CS },
    E { tag: Single(Tag(0x0082, 0x000A)), alias: "ObservationDescription", vr: UT },
    E { tag: Single(Tag(0x0082, 0x000C)), alias: "StructuredConstraintObservationSequence", vr: SQ },
    E { tag: Single(Tag(0x0082, 0x0010)), alias: "AssessedAttributeValueSequence", vr: SQ },
    E { tag: Single(Tag(0x0082, 0x0016)), alias: "AssessmentSetID", vr: LO },
    E { tag: Single(Tag(0x0082, 0x0017)), alias: "AssessmentRequesterSequence", vr: SQ },
    E { tag: Single(Tag(0x0082, 0x0018)), alias: "SelectorAttributeName", vr: LO },
    E { tag: Single(Tag(0x0082, 0x0019)), alias: "SelectorAttributeKeyword", vr: LO },
    E { tag: Single(Tag(0x0082, 0x0021)), alias: "AssessmentTypeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0082, 0x0022)), alias: "ObservationBasisCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0082, 0x0023)), alias: "AssessmentLabel", vr: LO },
    E { tag: Single(Tag(0x0082, 0x0032)), alias: "ConstraintType", vr: CS },
    E { tag: Single(Tag(0x0082, 0x0033)), alias: "SpecificationSelectionGuidance", vr: UT },
    E { tag: Single(Tag(0x0082, 0x0034)), alias: "ConstraintValueSequence", vr: SQ },
    E { tag: Single(Tag(0x0082, 0x0035)), alias: "RecommendedDefaultValueSequence", vr: SQ },
    E { tag: Single(Tag(0x0082, 0x0036)), alias: "ConstraintViolationSignificance", vr: CS },
    E { tag: Single(Tag(0x0082, 0x0037)), alias: "ConstraintViolationCondition", vr: UT },
    E { tag: Single(Tag(0x0082, 0x0038)), alias: "ModifiableConstraintFlag", vr: CS },
    E { tag: Single(Tag(0x0088, 0x0130)), alias: "StorageMediaFileSetID", vr: SH },
    E { tag: Single(Tag(0x0088, 0x0140)), alias: "StorageMediaFileSetUID", vr: UI },
    E { tag: Single(Tag(0x0088, 0x0200)), alias: "IconImageSequence", vr: SQ },
    E { tag: Single(Tag(0x0088, 0x0904)), alias: "TopicTitle", vr: LO }, // RET (2007)
    E { tag: Single(Tag(0x0088, 0x0906)), alias: "TopicSubject", vr: ST }, // RET (2007)
    E { tag: Single(Tag(0x0088, 0x0910)), alias: "TopicAuthor", vr: LO }, // RET (2007)
    E { tag: Single(Tag(0x0088, 0x0912)), alias: "TopicKeywords", vr: LO }, // RET (2007)
    E { tag: Single(Tag(0x0100, 0x0410)), alias: "SOPInstanceStatus", vr: CS },
    E { tag: Single(Tag(0x0100, 0x0420)), alias: "SOPAuthorizationDateTime", vr: DT },
    E { tag: Single(Tag(0x0100, 0x0424)), alias: "SOPAuthorizationComment", vr: LT },
    E { tag: Single(Tag(0x0100, 0x0426)), alias: "AuthorizationEquipmentCertificationNumber", vr: LO },
    E { tag: Single(Tag(0x0400, 0x0005)), alias: "MACIDNumber", vr: US },
    E { tag: Single(Tag(0x0400, 0x0010)), alias: "MACCalculationTransferSyntaxUID", vr: UI },
    E { tag: Single(Tag(0x0400, 0x0015)), alias: "MACAlgorithm", vr: CS },
    E { tag: Single(Tag(0x0400, 0x0020)), alias: "DataElementsSigned", vr: AT },
    E { tag: Single(Tag(0x0400, 0x0100)), alias: "DigitalSignatureUID", vr: UI },
    E { tag: Single(Tag(0x0400, 0x0105)), alias: "DigitalSignatureDateTime", vr: DT },
    E { tag: Single(Tag(0x0400, 0x0110)), alias: "CertificateType", vr: CS },
    E { tag: Single(Tag(0x0400, 0x0115)), alias: "CertificateOfSigner", vr: OB },
    E { tag: Single(Tag(0x0400, 0x0120)), alias: "Signature", vr: OB },
    E { tag: Single(Tag(0x0400, 0x0305)), alias: "CertifiedTimestampType", vr: CS },
    E { tag: Single(Tag(0x0400, 0x0310)), alias: "CertifiedTimestamp", vr: OB },
    E { tag: Single(Tag(0x0400, 0x0401)), alias: "DigitalSignaturePurposeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x0400, 0x0402)), alias: "ReferencedDigitalSignatureSequence", vr: SQ },
    E { tag: Single(Tag(0x0400, 0x0403)), alias: "ReferencedSOPInstanceMACSequence", vr: SQ },
    E { tag: Single(Tag(0x0400, 0x0404)), alias: "MAC", vr: OB },
    E { tag: Single(Tag(0x0400, 0x0500)), alias: "EncryptedAttributesSequence", vr: SQ },
    E { tag: Single(Tag(0x0400, 0x0510)), alias: "EncryptedContentTransferSyntaxUID", vr: UI },
    E { tag: Single(Tag(0x0400, 0x0520)), alias: "EncryptedContent", vr: OB },
    E { tag: Single(Tag(0x0400, 0x0550)), alias: "ModifiedAttributesSequence", vr: SQ },
    E { tag: Single(Tag(0x0400, 0x0551)), alias: "NonconformingModifiedAttributesSequence", vr: SQ },
    E { tag: Single(Tag(0x0400, 0x0552)), alias: "NonconformingDataElementValue", vr: OB },
    E { tag: Single(Tag(0x0400, 0x0561)), alias: "OriginalAttributesSequence", vr: SQ },
    E { tag: Single(Tag(0x0400, 0x0562)), alias: "AttributeModificationDateTime", vr: DT },
    E { tag: Single(Tag(0x0400, 0x0563)), alias: "ModifyingSystem", vr: LO },
    E { tag: Single(Tag(0x0400, 0x0564)), alias: "SourceOfPreviousValues", vr: LO },
    E { tag: Single(Tag(0x0400, 0x0565)), alias: "ReasonForTheAttributeModification", vr: CS },
    E { tag: Single(Tag(0x0400, 0x0600)), alias: "InstanceOriginStatus", vr: CS },
    E { tag: Single(Tag(0x2000, 0x0010)), alias: "NumberOfCopies", vr: IS },
    E { tag: Single(Tag(0x2000, 0x001E)), alias: "PrinterConfigurationSequence", vr: SQ },
    E { tag: Single(Tag(0x2000, 0x0020)), alias: "PrintPriority", vr: CS },
    E { tag: Single(Tag(0x2000, 0x0030)), alias: "MediumType", vr: CS },
    E { tag: Single(Tag(0x2000, 0x0040)), alias: "FilmDestination", vr: CS },
    E { tag: Single(Tag(0x2000, 0x0050)), alias: "FilmSessionLabel", vr: LO },
    E { tag: Single(Tag(0x2000, 0x0060)), alias: "MemoryAllocation", vr: IS },
    E { tag: Single(Tag(0x2000, 0x0061)), alias: "MaximumMemoryAllocation", vr: IS },
    E { tag: Single(Tag(0x2000, 0x0062)), alias: "ColorImagePrintingFlag", vr: CS }, // RET (2004)
    E { tag: Single(Tag(0x2000, 0x0063)), alias: "CollationFlag", vr: CS }, // RET (2004)
    E { tag: Single(Tag(0x2000, 0x0065)), alias: "AnnotationFlag", vr: CS }, // RET (2004)
    E { tag: Single(Tag(0x2000, 0x0067)), alias: "ImageOverlayFlag", vr: CS }, // RET (2004)
    E { tag: Single(Tag(0x2000, 0x0069)), alias: "PresentationLUTFlag", vr: CS }, // RET (2004)
    E { tag: Single(Tag(0x2000, 0x006A)), alias: "ImageBoxPresentationLUTFlag", vr: CS }, // RET (2004)
    E { tag: Single(Tag(0x2000, 0x00A0)), alias: "MemoryBitDepth", vr: US },
    E { tag: Single(Tag(0x2000, 0x00A1)), alias: "PrintingBitDepth", vr: US },
    E { tag: Single(Tag(0x2000, 0x00A2)), alias: "MediaInstalledSequence", vr: SQ },
    E { tag: Single(Tag(0x2000, 0x00A4)), alias: "OtherMediaAvailableSequence", vr: SQ },
    E { tag: Single(Tag(0x2000, 0x00A8)), alias: "SupportedImageDisplayFormatsSequence", vr: SQ },
    E { tag: Single(Tag(0x2000, 0x0500)), alias: "ReferencedFilmBoxSequence", vr: SQ },
    E { tag: Single(Tag(0x2000, 0x0510)), alias: "ReferencedStoredPrintSequence", vr: SQ }, // RET (2007)
    E { tag: Single(Tag(0x2010, 0x0010)), alias: "ImageDisplayFormat", vr: ST },
    E { tag: Single(Tag(0x2010, 0x0030)), alias: "AnnotationDisplayFormatID", vr: CS },
    E { tag: Single(Tag(0x2010, 0x0040)), alias: "FilmOrientation", vr: CS },
    E { tag: Single(Tag(0x2010, 0x0050)), alias: "FilmSizeID", vr: CS },
    E { tag: Single(Tag(0x2010, 0x0052)), alias: "PrinterResolutionID", vr: CS },
    E { tag: Single(Tag(0x2010, 0x0054)), alias: "DefaultPrinterResolutionID", vr: CS },
    E { tag: Single(Tag(0x2010, 0x0060)), alias: "MagnificationType", vr: CS },
    E { tag: Single(Tag(0x2010, 0x0080)), alias: "SmoothingType", vr: CS },
    E { tag: Single(Tag(0x2010, 0x00A6)), alias: "DefaultMagnificationType", vr: CS },
    E { tag: Single(Tag(0x2010, 0x00A7)), alias: "OtherMagnificationTypesAvailable", vr: CS },
    E { tag: Single(Tag(0x2010, 0x00A8)), alias: "DefaultSmoothingType", vr: CS },
    E { tag: Single(Tag(0x2010, 0x00A9)), alias: "OtherSmoothingTypesAvailable", vr: CS },
    E { tag: Single(Tag(0x2010, 0x0100)), alias: "BorderDensity", vr: CS },
    E { tag: Single(Tag(0x2010, 0x0110)), alias: "EmptyImageDensity", vr: CS },
    E { tag: Single(Tag(0x2010, 0x0120)), alias: "MinDensity", vr: US },
    E { tag: Single(Tag(0x2010, 0x0130)), alias: "MaxDensity", vr: US },
    E { tag: Single(Tag(0x2010, 0x0140)), alias: "Trim", vr: CS },
    E { tag: Single(Tag(0x2010, 0x0150)), alias: "ConfigurationInformation", vr: ST },
    E { tag: Single(Tag(0x2010, 0x0152)), alias: "ConfigurationInformationDescription", vr: LT },
    E { tag: Single(Tag(0x2010, 0x0154)), alias: "MaximumCollatedFilms", vr: IS },
    E { tag: Single(Tag(0x2010, 0x015E)), alias: "Illumination", vr: US },
    E { tag: Single(Tag(0x2010, 0x0160)), alias: "ReflectedAmbientLight", vr: US },
    E { tag: Single(Tag(0x2010, 0x0376)), alias: "PrinterPixelSpacing", vr: DS },
    E { tag: Single(Tag(0x2010, 0x0500)), alias: "ReferencedFilmSessionSequence", vr: SQ },
    E { tag: Single(Tag(0x2010, 0x0510)), alias: "ReferencedImageBoxSequence", vr: SQ },
    E { tag: Single(Tag(0x2010, 0x0520)), alias: "ReferencedBasicAnnotationBoxSequence", vr: SQ },
    E { tag: Single(Tag(0x2020, 0x0010)), alias: "ImageBoxPosition", vr: US },
    E { tag: Single(Tag(0x2020, 0x0020)), alias: "Polarity", vr: CS },
    E { tag: Single(Tag(0x2020, 0x0030)), alias: "RequestedImageSize", vr: DS },
    E { tag: Single(Tag(0x2020, 0x0040)), alias: "RequestedDecimateCropBehavior", vr: CS },
    E { tag: Single(Tag(0x2020, 0x0050)), alias: "RequestedResolutionID", vr: CS },
    E { tag: Single(Tag(0x2020, 0x00A0)), alias: "RequestedImageSizeFlag", vr: CS },
    E { tag: Single(Tag(0x2020, 0x00A2)), alias: "DecimateCropResult", vr: CS },
    E { tag: Single(Tag(0x2020, 0x0110)), alias: "BasicGrayscaleImageSequence", vr: SQ },
    E { tag: Single(Tag(0x2020, 0x0111)), alias: "BasicColorImageSequence", vr: SQ },
    E { tag: Single(Tag(0x2020, 0x0130)), alias: "ReferencedImageOverlayBoxSequence", vr: SQ }, // RET (1998)
    E { tag: Single(Tag(0x2020, 0x0140)), alias: "ReferencedVOILUTBoxSequence", vr: SQ }, // RET (1998)
    E { tag: Single(Tag(0x2030, 0x0010)), alias: "AnnotationPosition", vr: US },
    E { tag: Single(Tag(0x2030, 0x0020)), alias: "TextString", vr: LO },
    E { tag: Single(Tag(0x2040, 0x0010)), alias: "ReferencedOverlayPlaneSequence", vr: SQ }, // RET (2004)
    E { tag: Single(Tag(0x2040, 0x0011)), alias: "ReferencedOverlayPlaneGroups", vr: US }, // RET (2004)
    E { tag: Single(Tag(0x2040, 0x0020)), alias: "OverlayPixelDataSequence", vr: SQ }, // RET (2004)
    E { tag: Single(Tag(0x2040, 0x0060)), alias: "OverlayMagnificationType", vr: CS }, // RET (2004)
    E { tag: Single(Tag(0x2040, 0x0070)), alias: "OverlaySmoothingType", vr: CS }, // RET (2004)
    E { tag: Single(Tag(0x2040, 0x0072)), alias: "OverlayOrImageMagnification", vr: CS }, // RET (2004)
    E { tag: Single(Tag(0x2040, 0x0074)), alias: "MagnifyToNumberOfColumns", vr: US }, // RET (2004)
    E { tag: Single(Tag(0x2040, 0x0080)), alias: "OverlayForegroundDensity", vr: CS }, // RET (2004)
    E { tag: Single(Tag(0x2040, 0x0082)), alias: "OverlayBackgroundDensity", vr: CS }, // RET (2004)
    E { tag: Single(Tag(0x2040, 0x0090)), alias: "OverlayMode", vr: CS }, // RET (1998)
    E { tag: Single(Tag(0x2040, 0x0100)), alias: "ThresholdDensity", vr: CS }, // RET (1998)
    E { tag: Single(Tag(0x2040, 0x0500)), alias: "ReferencedImageBoxSequenceRetired", vr: SQ }, // RET (1993)
    E { tag: Single(Tag(0x2050, 0x0010)), alias: "PresentationLUTSequence", vr: SQ },
    E { tag: Single(Tag(0x2050, 0x0020)), alias: "PresentationLUTShape", vr: CS },
    E { tag: Single(Tag(0x2050, 0x0500)), alias: "ReferencedPresentationLUTSequence", vr: SQ },
    E { tag: Single(Tag(0x2100, 0x0010)), alias: "PrintJobID", vr: SH }, // RET (2007)
    E { tag: Single(Tag(0x2100, 0x0020)), alias: "ExecutionStatus", vr: CS },
    E { tag: Single(Tag(0x2100, 0x0030)), alias: "ExecutionStatusInfo", vr: CS },
    E { tag: Single(Tag(0x2100, 0x0040)), alias: "CreationDate", vr: DA },
    E { tag: Single(Tag(0x2100, 0x0050)), alias: "CreationTime", vr: TM },
    E { tag: Single(Tag(0x2100, 0x0070)), alias: "Originator", vr: AE },
    E { tag: Single(Tag(0x2100, 0x0140)), alias: "DestinationAE", vr: AE },
    E { tag: Single(Tag(0x2100, 0x0160)), alias: "OwnerID", vr: SH },
    E { tag: Single(Tag(0x2100, 0x0170)), alias: "NumberOfFilms", vr: IS },
    E { tag: Single(Tag(0x2100, 0x0500)), alias: "ReferencedPrintJobSequencePullStoredPrint", vr: SQ }, // RET (2004)
    E { tag: Single(Tag(0x2110, 0x0010)), alias: "PrinterStatus", vr: CS },
    E { tag: Single(Tag(0x2110, 0x0020)), alias: "PrinterStatusInfo", vr: CS },
    E { tag: Single(Tag(0x2110, 0x0030)), alias: "PrinterName", vr: LO },
    E { tag: Single(Tag(0x2110, 0x0099)), alias: "PrintQueueID", vr: SH }, // RET (2004)
    E { tag: Single(Tag(0x2120, 0x0010)), alias: "QueueStatus", vr: CS }, // RET (2004)
    E { tag: Single(Tag(0x2120, 0x0050)), alias: "PrintJobDescriptionSequence", vr: SQ }, // RET (2004)
    E { tag: Single(Tag(0x2120, 0x0070)), alias: "ReferencedPrintJobSequence", vr: SQ }, // RET (2004)
    E { tag: Single(Tag(0x2130, 0x0010)), alias: "PrintManagementCapabilitiesSequence", vr: SQ }, // RET (2004)
    E { tag: Single(Tag(0x2130, 0x0015)), alias: "PrinterCharacteristicsSequence", vr: SQ }, // RET (2004)
    E { tag: Single(Tag(0x2130, 0x0030)), alias: "FilmBoxContentSequence", vr: SQ }, // RET (2004)
    E { tag: Single(Tag(0x2130, 0x0040)), alias: "ImageBoxContentSequence", vr: SQ }, // RET (2004)
    E { tag: Single(Tag(0x2130, 0x0050)), alias: "AnnotationContentSequence", vr: SQ }, // RET (2004)
    E { tag: Single(Tag(0x2130, 0x0060)), alias: "ImageOverlayBoxContentSequence", vr: SQ }, // RET (2004)
    E { tag: Single(Tag(0x2130, 0x0080)), alias: "PresentationLUTContentSequence", vr: SQ }, // RET (2004)
    E { tag: Single(Tag(0x2130, 0x00A0)), alias: "ProposedStudySequence", vr: SQ }, // RET (2004)
    E { tag: Single(Tag(0x2130, 0x00C0)), alias: "OriginalImageSequence", vr: SQ }, // RET (2004)
    E { tag: Single(Tag(0x2200, 0x0001)), alias: "LabelUsingInformationExtractedFromInstances", vr: CS },
    E { tag: Single(Tag(0x2200, 0x0002)), alias: "LabelText", vr: UT },
    E { tag: Single(Tag(0x2200, 0x0003)), alias: "LabelStyleSelection", vr: CS },
    E { tag: Single(Tag(0x2200, 0x0004)), alias: "MediaDisposition", vr: LT },
    E { tag: Single(Tag(0x2200, 0x0005)), alias: "BarcodeValue", vr: LT },
    E { tag: Single(Tag(0x2200, 0x0006)), alias: "BarcodeSymbology", vr: CS },
    E { tag: Single(Tag(0x2200, 0x0007)), alias: "AllowMediaSplitting", vr: CS },
    E { tag: Single(Tag(0x2200, 0x0008)), alias: "IncludeNonDICOMObjects", vr: CS },
    E { tag: Single(Tag(0x2200, 0x0009)), alias: "IncludeDisplayApplication", vr: CS },
    E { tag: Single(Tag(0x2200, 0x000A)), alias: "PreserveCompositeInstancesAfterMediaCreation", vr: CS },
    E { tag: Single(Tag(0x2200, 0x000B)), alias: "TotalNumberOfPiecesOfMediaCreated", vr: US },
    E { tag: Single(Tag(0x2200, 0x000C)), alias: "RequestedMediaApplicationProfile", vr: LO },
    E { tag: Single(Tag(0x2200, 0x000D)), alias: "ReferencedStorageMediaSequence", vr: SQ },
    E { tag: Single(Tag(0x2200, 0x000E)), alias: "FailureAttributes", vr: AT },
    E { tag: Single(Tag(0x2200, 0x000F)), alias: "AllowLossyCompression", vr: CS },
    E { tag: Single(Tag(0x2200, 0x0020)), alias: "RequestPriority", vr: CS },
    E { tag: Single(Tag(0x3002, 0x0002)), alias: "RTImageLabel", vr: SH },
    E { tag: Single(Tag(0x3002, 0x0003)), alias: "RTImageName", vr: LO },
    E { tag: Single(Tag(0x3002, 0x0004)), alias: "RTImageDescription", vr: ST },
    E { tag: Single(Tag(0x3002, 0x000A)), alias: "ReportedValuesOrigin", vr: CS },
    E { tag: Single(Tag(0x3002, 0x000C)), alias: "RTImagePlane", vr: CS },
    E { tag: Single(Tag(0x3002, 0x000D)), alias: "XRayImageReceptorTranslation", vr: DS },
    E { tag: Single(Tag(0x3002, 0x000E)), alias: "XRayImageReceptorAngle", vr: DS },
    E { tag: Single(Tag(0x3002, 0x0010)), alias: "RTImageOrientation", vr: DS },
    E { tag: Single(Tag(0x3002, 0x0011)), alias: "ImagePlanePixelSpacing", vr: DS },
    E { tag: Single(Tag(0x3002, 0x0012)), alias: "RTImagePosition", vr: DS },
    E { tag: Single(Tag(0x3002, 0x0020)), alias: "RadiationMachineName", vr: SH },
    E { tag: Single(Tag(0x3002, 0x0022)), alias: "RadiationMachineSAD", vr: DS },
    E { tag: Single(Tag(0x3002, 0x0024)), alias: "RadiationMachineSSD", vr: DS },
    E { tag: Single(Tag(0x3002, 0x0026)), alias: "RTImageSID", vr: DS },
    E { tag: Single(Tag(0x3002, 0x0028)), alias: "SourceToReferenceObjectDistance", vr: DS },
    E { tag: Single(Tag(0x3002, 0x0029)), alias: "FractionNumber", vr: IS },
    E { tag: Single(Tag(0x3002, 0x0030)), alias: "ExposureSequence", vr: SQ },
    E { tag: Single(Tag(0x3002, 0x0032)), alias: "MetersetExposure", vr: DS },
    E { tag: Single(Tag(0x3002, 0x0034)), alias: "DiaphragmPosition", vr: DS },
    E { tag: Single(Tag(0x3002, 0x0040)), alias: "FluenceMapSequence", vr: SQ },
    E { tag: Single(Tag(0x3002, 0x0041)), alias: "FluenceDataSource", vr: CS },
    E { tag: Single(Tag(0x3002, 0x0042)), alias: "FluenceDataScale", vr: DS },
    E { tag: Single(Tag(0x3002, 0x0050)), alias: "PrimaryFluenceModeSequence", vr: SQ },
    E { tag: Single(Tag(0x3002, 0x0051)), alias: "FluenceMode", vr: CS },
    E { tag: Single(Tag(0x3002, 0x0052)), alias: "FluenceModeID", vr: SH },
    E { tag: Single(Tag(0x3004, 0x0001)), alias: "DVHType", vr: CS },
    E { tag: Single(Tag(0x3004, 0x0002)), alias: "DoseUnits", vr: CS },
    E { tag: Single(Tag(0x3004, 0x0004)), alias: "DoseType", vr: CS },
    E { tag: Single(Tag(0x3004, 0x0005)), alias: "SpatialTransformOfDose", vr: CS },
    E { tag: Single(Tag(0x3004, 0x0006)), alias: "DoseComment", vr: LO },
    E { tag: Single(Tag(0x3004, 0x0008)), alias: "NormalizationPoint", vr: DS },
    E { tag: Single(Tag(0x3004, 0x000A)), alias: "DoseSummationType", vr: CS },
    E { tag: Single(Tag(0x3004, 0x000C)), alias: "GridFrameOffsetVector", vr: DS },
    E { tag: Single(Tag(0x3004, 0x000E)), alias: "DoseGridScaling", vr: DS },
    E { tag: Single(Tag(0x3004, 0x0010)), alias: "RTDoseROISequence", vr: SQ },
    E { tag: Single(Tag(0x3004, 0x0012)), alias: "DoseValue", vr: DS },
    E { tag: Single(Tag(0x3004, 0x0014)), alias: "TissueHeterogeneityCorrection", vr: CS },
    E { tag: Single(Tag(0x3004, 0x0040)), alias: "DVHNormalizationPoint", vr: DS },
    E { tag: Single(Tag(0x3004, 0x0042)), alias: "DVHNormalizationDoseValue", vr: DS },
    E { tag: Single(Tag(0x3004, 0x0050)), alias: "DVHSequence", vr: SQ },
    E { tag: Single(Tag(0x3004, 0x0052)), alias: "DVHDoseScaling", vr: DS },
    E { tag: Single(Tag(0x3004, 0x0054)), alias: "DVHVolumeUnits", vr: CS },
    E { tag: Single(Tag(0x3004, 0x0056)), alias: "DVHNumberOfBins", vr: IS },
    E { tag: Single(Tag(0x3004, 0x0058)), alias: "DVHData", vr: DS },
    E { tag: Single(Tag(0x3004, 0x0060)), alias: "DVHReferencedROISequence", vr: SQ },
    E { tag: Single(Tag(0x3004, 0x0062)), alias: "DVHROIContributionType", vr: CS },
    E { tag: Single(Tag(0x3004, 0x0070)), alias: "DVHMinimumDose", vr: DS },
    E { tag: Single(Tag(0x3004, 0x0072)), alias: "DVHMaximumDose", vr: DS },
    E { tag: Single(Tag(0x3004, 0x0074)), alias: "DVHMeanDose", vr: DS },
    E { tag: Single(Tag(0x3006, 0x0002)), alias: "StructureSetLabel", vr: SH },
    E { tag: Single(Tag(0x3006, 0x0004)), alias: "StructureSetName", vr: LO },
    E { tag: Single(Tag(0x3006, 0x0006)), alias: "StructureSetDescription", vr: ST },
    E { tag: Single(Tag(0x3006, 0x0008)), alias: "StructureSetDate", vr: DA },
    E { tag: Single(Tag(0x3006, 0x0009)), alias: "StructureSetTime", vr: TM },
    E { tag: Single(Tag(0x3006, 0x0010)), alias: "ReferencedFrameOfReferenceSequence", vr: SQ },
    E { tag: Single(Tag(0x3006, 0x0012)), alias: "RTReferencedStudySequence", vr: SQ },
    E { tag: Single(Tag(0x3006, 0x0014)), alias: "RTReferencedSeriesSequence", vr: SQ },
    E { tag: Single(Tag(0x3006, 0x0016)), alias: "ContourImageSequence", vr: SQ },
    E { tag: Single(Tag(0x3006, 0x0018)), alias: "PredecessorStructureSetSequence", vr: SQ },
    E { tag: Single(Tag(0x3006, 0x0020)), alias: "StructureSetROISequence", vr: SQ },
    E { tag: Single(Tag(0x3006, 0x0022)), alias: "ROINumber", vr: IS },
    E { tag: Single(Tag(0x3006, 0x0024)), alias: "ReferencedFrameOfReferenceUID", vr: UI },
    E { tag: Single(Tag(0x3006, 0x0026)), alias: "ROIName", vr: LO },
    E { tag: Single(Tag(0x3006, 0x0028)), alias: "ROIDescription", vr: ST },
    E { tag: Single(Tag(0x3006, 0x002A)), alias: "ROIDisplayColor", vr: IS },
    E { tag: Single(Tag(0x3006, 0x002C)), alias: "ROIVolume", vr: DS },
    E { tag: Single(Tag(0x3006, 0x0030)), alias: "RTRelatedROISequence", vr: SQ },
    E { tag: Single(Tag(0x3006, 0x0033)), alias: "RTROIRelationship", vr: CS },
    E { tag: Single(Tag(0x3006, 0x0036)), alias: "ROIGenerationAlgorithm", vr: CS },
    E { tag: Single(Tag(0x3006, 0x0037)), alias: "ROIDerivationAlgorithmIdentificationSequence", vr: SQ },
    E { tag: Single(Tag(0x3006, 0x0038)), alias: "ROIGenerationDescription", vr: LO },
    E { tag: Single(Tag(0x3006, 0x0039)), alias: "ROIContourSequence", vr: SQ },
    E { tag: Single(Tag(0x3006, 0x0040)), alias: "ContourSequence", vr: SQ },
    E { tag: Single(Tag(0x3006, 0x0042)), alias: "ContourGeometricType", vr: CS },
    E { tag: Single(Tag(0x3006, 0x0044)), alias: "ContourSlabThickness", vr: DS },
    E { tag: Single(Tag(0x3006, 0x0045)), alias: "ContourOffsetVector", vr: DS },
    E { tag: Single(Tag(0x3006, 0x0046)), alias: "NumberOfContourPoints", vr: IS },
    E { tag: Single(Tag(0x3006, 0x0048)), alias: "ContourNumber", vr: IS },
    E { tag: Single(Tag(0x3006, 0x0049)), alias: "AttachedContours", vr: IS },
    E { tag: Single(Tag(0x3006, 0x0050)), alias: "ContourData", vr: DS },
    E { tag: Single(Tag(0x3006, 0x0080)), alias: "RTROIObservationsSequence", vr: SQ },
    E { tag: Single(Tag(0x3006, 0x0082)), alias: "ObservationNumber", vr: IS },
    E { tag: Single(Tag(0x3006, 0x0084)), alias: "ReferencedROINumber", vr: IS },
    E { tag: Single(Tag(0x3006, 0x0085)), alias: "ROIObservationLabel", vr: SH },
    E { tag: Single(Tag(0x3006, 0x0086)), alias: "RTROIIdentificationCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x3006, 0x0088)), alias: "ROIObservationDescription", vr: ST },
    E { tag: Single(Tag(0x3006, 0x00A0)), alias: "RelatedRTROIObservationsSequence", vr: SQ },
    E { tag: Single(Tag(0x3006, 0x00A4)), alias: "RTROIInterpretedType", vr: CS },
    E { tag: Single(Tag(0x3006, 0x00A6)), alias: "ROIInterpreter", vr: PN },
    E { tag: Single(Tag(0x3006, 0x00B0)), alias: "ROIPhysicalPropertiesSequence", vr: SQ },
    E { tag: Single(Tag(0x3006, 0x00B2)), alias: "ROIPhysicalProperty", vr: CS },
    E { tag: Single(Tag(0x3006, 0x00B4)), alias: "ROIPhysicalPropertyValue", vr: DS },
    E { tag: Single(Tag(0x3006, 0x00B6)), alias: "ROIElementalCompositionSequence", vr: SQ },
    E { tag: Single(Tag(0x3006, 0x00B7)), alias: "ROIElementalCompositionAtomicNumber", vr: US },
    E { tag: Single(Tag(0x3006, 0x00B8)), alias: "ROIElementalCompositionAtomicMassFraction", vr: FL },
    E { tag: Single(Tag(0x3006, 0x00B9)), alias: "AdditionalRTROIIdentificationCodeSequence", vr: SQ }, // RET (2016c)
    E { tag: Single(Tag(0x3006, 0x00C0)), alias: "FrameOfReferenceRelationshipSequence", vr: SQ }, // RET (2011)
    E { tag: Single(Tag(0x3006, 0x00C2)), alias: "RelatedFrameOfReferenceUID", vr: UI }, // RET (2011)
    E { tag: Single(Tag(0x3006, 0x00C4)), alias: "FrameOfReferenceTransformationType", vr: CS }, // RET (2011)
    E { tag: Single(Tag(0x3006, 0x00C6)), alias: "FrameOfReferenceTransformationMatrix", vr: DS },
    E { tag: Single(Tag(0x3006, 0x00C8)), alias: "FrameOfReferenceTransformationComment", vr: LO },
    E { tag: Single(Tag(0x3008, 0x0010)), alias: "MeasuredDoseReferenceSequence", vr: SQ },
    E { tag: Single(Tag(0x3008, 0x0012)), alias: "MeasuredDoseDescription", vr: ST },
    E { tag: Single(Tag(0x3008, 0x0014)), alias: "MeasuredDoseType", vr: CS },
    E { tag: Single(Tag(0x3008, 0x0016)), alias: "MeasuredDoseValue", vr: DS },
    E { tag: Single(Tag(0x3008, 0x0020)), alias: "TreatmentSessionBeamSequence", vr: SQ },
    E { tag: Single(Tag(0x3008, 0x0021)), alias: "TreatmentSessionIonBeamSequence", vr: SQ },
    E { tag: Single(Tag(0x3008, 0x0022)), alias: "CurrentFractionNumber", vr: IS },
    E { tag: Single(Tag(0x3008, 0x0024)), alias: "TreatmentControlPointDate", vr: DA },
    E { tag: Single(Tag(0x3008, 0x0025)), alias: "TreatmentControlPointTime", vr: TM },
    E { tag: Single(Tag(0x3008, 0x002A)), alias: "TreatmentTerminationStatus", vr: CS },
    E { tag: Single(Tag(0x3008, 0x002B)), alias: "TreatmentTerminationCode", vr: SH },
    E { tag: Single(Tag(0x3008, 0x002C)), alias: "TreatmentVerificationStatus", vr: CS },
    E { tag: Single(Tag(0x3008, 0x0030)), alias: "ReferencedTreatmentRecordSequence", vr: SQ },
    E { tag: Single(Tag(0x3008, 0x0032)), alias: "SpecifiedPrimaryMeterset", vr: DS },
    E { tag: Single(Tag(0x3008, 0x0033)), alias: "SpecifiedSecondaryMeterset", vr: DS },
    E { tag: Single(Tag(0x3008, 0x0036)), alias: "DeliveredPrimaryMeterset", vr: DS },
    E { tag: Single(Tag(0x3008, 0x0037)), alias: "DeliveredSecondaryMeterset", vr: DS },
    E { tag: Single(Tag(0x3008, 0x003A)), alias: "SpecifiedTreatmentTime", vr: DS },
    E { tag: Single(Tag(0x3008, 0x003B)), alias: "DeliveredTreatmentTime", vr: DS },
    E { tag: Single(Tag(0x3008, 0x0040)), alias: "ControlPointDeliverySequence", vr: SQ },
    E { tag: Single(Tag(0x3008, 0x0041)), alias: "IonControlPointDeliverySequence", vr: SQ },
    E { tag: Single(Tag(0x3008, 0x0042)), alias: "SpecifiedMeterset", vr: DS },
    E { tag: Single(Tag(0x3008, 0x0044)), alias: "DeliveredMeterset", vr: DS },
    E { tag: Single(Tag(0x3008, 0x0045)), alias: "MetersetRateSet", vr: FL },
    E { tag: Single(Tag(0x3008, 0x0046)), alias: "MetersetRateDelivered", vr: FL },
    E { tag: Single(Tag(0x3008, 0x0047)), alias: "ScanSpotMetersetsDelivered", vr: FL },
    E { tag: Single(Tag(0x3008, 0x0048)), alias: "DoseRateDelivered", vr: DS },
    E { tag: Single(Tag(0x3008, 0x0050)), alias: "TreatmentSummaryCalculatedDoseReferenceSequence", vr: SQ },
    E { tag: Single(Tag(0x3008, 0x0052)), alias: "CumulativeDoseToDoseReference", vr: DS },
    E { tag: Single(Tag(0x3008, 0x0054)), alias: "FirstTreatmentDate", vr: DA },
    E { tag: Single(Tag(0x3008, 0x0056)), alias: "MostRecentTreatmentDate", vr: DA },
    E { tag: Single(Tag(0x3008, 0x005A)), alias: "NumberOfFractionsDelivered", vr: IS },
    E { tag: Single(Tag(0x3008, 0x0060)), alias: "OverrideSequence", vr: SQ },
    E { tag: Single(Tag(0x3008, 0x0061)), alias: "ParameterSequencePointer", vr: AT },
    E { tag: Single(Tag(0x3008, 0x0062)), alias: "OverrideParameterPointer", vr: AT },
    E { tag: Single(Tag(0x3008, 0x0063)), alias: "ParameterItemIndex", vr: IS },
    E { tag: Single(Tag(0x3008, 0x0064)), alias: "MeasuredDoseReferenceNumber", vr: IS },
    E { tag: Single(Tag(0x3008, 0x0065)), alias: "ParameterPointer", vr: AT },
    E { tag: Single(Tag(0x3008, 0x0066)), alias: "OverrideReason", vr: ST },
    E { tag: Single(Tag(0x3008, 0x0067)), alias: "ParameterValueNumber", vr: US },
    E { tag: Single(Tag(0x3008, 0x0068)), alias: "CorrectedParameterSequence", vr: SQ },
    E { tag: Single(Tag(0x3008, 0x006A)), alias: "CorrectionValue", vr: FL },
    E { tag: Single(Tag(0x3008, 0x0070)), alias: "CalculatedDoseReferenceSequence", vr: SQ },
    E { tag: Single(Tag(0x3008, 0x0072)), alias: "CalculatedDoseReferenceNumber", vr: IS },
    E { tag: Single(Tag(0x3008, 0x0074)), alias: "CalculatedDoseReferenceDescription", vr: ST },
    E { tag: Single(Tag(0x3008, 0x0076)), alias: "CalculatedDoseReferenceDoseValue", vr: DS },
    E { tag: Single(Tag(0x3008, 0x0078)), alias: "StartMeterset", vr: DS },
    E { tag: Single(Tag(0x3008, 0x007A)), alias: "EndMeterset", vr: DS },
    E { tag: Single(Tag(0x3008, 0x0080)), alias: "ReferencedMeasuredDoseReferenceSequence", vr: SQ },
    E { tag: Single(Tag(0x3008, 0x0082)), alias: "ReferencedMeasuredDoseReferenceNumber", vr: IS },
    E { tag: Single(Tag(0x3008, 0x0090)), alias: "ReferencedCalculatedDoseReferenceSequence", vr: SQ },
    E { tag: Single(Tag(0x3008, 0x0092)), alias: "ReferencedCalculatedDoseReferenceNumber", vr: IS },
    E { tag: Single(Tag(0x3008, 0x00A0)), alias: "BeamLimitingDeviceLeafPairsSequence", vr: SQ },
    E { tag: Single(Tag(0x3008, 0x00B0)), alias: "RecordedWedgeSequence", vr: SQ },
    E { tag: Single(Tag(0x3008, 0x00C0)), alias: "RecordedCompensatorSequence", vr: SQ },
    E { tag: Single(Tag(0x3008, 0x00D0)), alias: "RecordedBlockSequence", vr: SQ },
    E { tag: Single(Tag(0x3008, 0x00E0)), alias: "TreatmentSummaryMeasuredDoseReferenceSequence", vr: SQ },
    E { tag: Single(Tag(0x3008, 0x00F0)), alias: "RecordedSnoutSequence", vr: SQ },
    E { tag: Single(Tag(0x3008, 0x00F2)), alias: "RecordedRangeShifterSequence", vr: SQ },
    E { tag: Single(Tag(0x3008, 0x00F4)), alias: "RecordedLateralSpreadingDeviceSequence", vr: SQ },
    E { tag: Single(Tag(0x3008, 0x00F6)), alias: "RecordedRangeModulatorSequence", vr: SQ },
    E { tag: Single(Tag(0x3008, 0x0100)), alias: "RecordedSourceSequence", vr: SQ },
    E { tag: Single(Tag(0x3008, 0x0105)), alias: "SourceSerialNumber", vr: LO },
    E { tag: Single(Tag(0x3008, 0x0110)), alias: "TreatmentSessionApplicationSetupSequence", vr: SQ },
    E { tag: Single(Tag(0x3008, 0x0116)), alias: "ApplicationSetupCheck", vr: CS },
    E { tag: Single(Tag(0x3008, 0x0120)), alias: "RecordedBrachyAccessoryDeviceSequence", vr: SQ },
    E { tag: Single(Tag(0x3008, 0x0122)), alias: "ReferencedBrachyAccessoryDeviceNumber", vr: IS },
    E { tag: Single(Tag(0x3008, 0x0130)), alias: "RecordedChannelSequence", vr: SQ },
    E { tag: Single(Tag(0x3008, 0x0132)), alias: "SpecifiedChannelTotalTime", vr: DS },
    E { tag: Single(Tag(0x3008, 0x0134)), alias: "DeliveredChannelTotalTime", vr: DS },
    E { tag: Single(Tag(0x3008, 0x0136)), alias: "SpecifiedNumberOfPulses", vr: IS },
    E { tag: Single(Tag(0x3008, 0x0138)), alias: "DeliveredNumberOfPulses", vr: IS },
    E { tag: Single(Tag(0x3008, 0x013A)), alias: "SpecifiedPulseRepetitionInterval", vr: DS },
    E { tag: Single(Tag(0x3008, 0x013C)), alias: "DeliveredPulseRepetitionInterval", vr: DS },
    E { tag: Single(Tag(0x3008, 0x0140)), alias: "RecordedSourceApplicatorSequence", vr: SQ },
    E { tag: Single(Tag(0x3008, 0x0142)), alias: "ReferencedSourceApplicatorNumber", vr: IS },
    E { tag: Single(Tag(0x3008, 0x0150)), alias: "RecordedChannelShieldSequence", vr: SQ },
    E { tag: Single(Tag(0x3008, 0x0152)), alias: "ReferencedChannelShieldNumber", vr: IS },
    E { tag: Single(Tag(0x3008, 0x0160)), alias: "BrachyControlPointDeliveredSequence", vr: SQ },
    E { tag: Single(Tag(0x3008, 0x0162)), alias: "SafePositionExitDate", vr: DA },
    E { tag: Single(Tag(0x3008, 0x0164)), alias: "SafePositionExitTime", vr: TM },
    E { tag: Single(Tag(0x3008, 0x0166)), alias: "SafePositionReturnDate", vr: DA },
    E { tag: Single(Tag(0x3008, 0x0168)), alias: "SafePositionReturnTime", vr: TM },
    E { tag: Single(Tag(0x3008, 0x0171)), alias: "PulseSpecificBrachyControlPointDeliveredSequence", vr: SQ },
    E { tag: Single(Tag(0x3008, 0x0172)), alias: "PulseNumber", vr: US },
    E { tag: Single(Tag(0x3008, 0x0173)), alias: "BrachyPulseControlPointDeliveredSequence", vr: SQ },
    E { tag: Single(Tag(0x3008, 0x0200)), alias: "CurrentTreatmentStatus", vr: CS },
    E { tag: Single(Tag(0x3008, 0x0202)), alias: "TreatmentStatusComment", vr: ST },
    E { tag: Single(Tag(0x3008, 0x0220)), alias: "FractionGroupSummarySequence", vr: SQ },
    E { tag: Single(Tag(0x3008, 0x0223)), alias: "ReferencedFractionNumber", vr: IS },
    E { tag: Single(Tag(0x3008, 0x0224)), alias: "FractionGroupType", vr: CS },
    E { tag: Single(Tag(0x3008, 0x0230)), alias: "BeamStopperPosition", vr: CS },
    E { tag: Single(Tag(0x3008, 0x0240)), alias: "FractionStatusSummarySequence", vr: SQ },
    E { tag: Single(Tag(0x3008, 0x0250)), alias: "TreatmentDate", vr: DA },
    E { tag: Single(Tag(0x3008, 0x0251)), alias: "TreatmentTime", vr: TM },
    E { tag: Single(Tag(0x300A, 0x0002)), alias: "RTPlanLabel", vr: SH },
    E { tag: Single(Tag(0x300A, 0x0003)), alias: "RTPlanName", vr: LO },
    E { tag: Single(Tag(0x300A, 0x0004)), alias: "RTPlanDescription", vr: ST },
    E { tag: Single(Tag(0x300A, 0x0006)), alias: "RTPlanDate", vr: DA },
    E { tag: Single(Tag(0x300A, 0x0007)), alias: "RTPlanTime", vr: TM },
    E { tag: Single(Tag(0x300A, 0x0009)), alias: "TreatmentProtocols", vr: LO },
    E { tag: Single(Tag(0x300A, 0x000A)), alias: "PlanIntent", vr: CS },
    E { tag: Single(Tag(0x300A, 0x000B)), alias: "TreatmentSites", vr: LO },
    E { tag: Single(Tag(0x300A, 0x000C)), alias: "RTPlanGeometry", vr: CS },
    E { tag: Single(Tag(0x300A, 0x000E)), alias: "PrescriptionDescription", vr: ST },
    E { tag: Single(Tag(0x300A, 0x0010)), alias: "DoseReferenceSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x0012)), alias: "DoseReferenceNumber", vr: IS },
    E { tag: Single(Tag(0x300A, 0x0013)), alias: "DoseReferenceUID", vr: UI },
    E { tag: Single(Tag(0x300A, 0x0014)), alias: "DoseReferenceStructureType", vr: CS },
    E { tag: Single(Tag(0x300A, 0x0015)), alias: "NominalBeamEnergyUnit", vr: CS },
    E { tag: Single(Tag(0x300A, 0x0016)), alias: "DoseReferenceDescription", vr: LO },
    E { tag: Single(Tag(0x300A, 0x0018)), alias: "DoseReferencePointCoordinates", vr: DS },
    E { tag: Single(Tag(0x300A, 0x001A)), alias: "NominalPriorDose", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0020)), alias: "DoseReferenceType", vr: CS },
    E { tag: Single(Tag(0x300A, 0x0021)), alias: "ConstraintWeight", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0022)), alias: "DeliveryWarningDose", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0023)), alias: "DeliveryMaximumDose", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0025)), alias: "TargetMinimumDose", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0026)), alias: "TargetPrescriptionDose", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0027)), alias: "TargetMaximumDose", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0028)), alias: "TargetUnderdoseVolumeFraction", vr: DS },
    E { tag: Single(Tag(0x300A, 0x002A)), alias: "OrganAtRiskFullVolumeDose", vr: DS },
    E { tag: Single(Tag(0x300A, 0x002B)), alias: "OrganAtRiskLimitDose", vr: DS },
    E { tag: Single(Tag(0x300A, 0x002C)), alias: "OrganAtRiskMaximumDose", vr: DS },
    E { tag: Single(Tag(0x300A, 0x002D)), alias: "OrganAtRiskOverdoseVolumeFraction", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0040)), alias: "ToleranceTableSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x0042)), alias: "ToleranceTableNumber", vr: IS },
    E { tag: Single(Tag(0x300A, 0x0043)), alias: "ToleranceTableLabel", vr: SH },
    E { tag: Single(Tag(0x300A, 0x0044)), alias: "GantryAngleTolerance", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0046)), alias: "BeamLimitingDeviceAngleTolerance", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0048)), alias: "BeamLimitingDeviceToleranceSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x004A)), alias: "BeamLimitingDevicePositionTolerance", vr: DS },
    E { tag: Single(Tag(0x300A, 0x004B)), alias: "SnoutPositionTolerance", vr: FL },
    E { tag: Single(Tag(0x300A, 0x004C)), alias: "PatientSupportAngleTolerance", vr: DS },
    E { tag: Single(Tag(0x300A, 0x004E)), alias: "TableTopEccentricAngleTolerance", vr: DS },
    E { tag: Single(Tag(0x300A, 0x004F)), alias: "TableTopPitchAngleTolerance", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0050)), alias: "TableTopRollAngleTolerance", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0051)), alias: "TableTopVerticalPositionTolerance", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0052)), alias: "TableTopLongitudinalPositionTolerance", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0053)), alias: "TableTopLateralPositionTolerance", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0055)), alias: "RTPlanRelationship", vr: CS },
    E { tag: Single(Tag(0x300A, 0x0070)), alias: "FractionGroupSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x0071)), alias: "FractionGroupNumber", vr: IS },
    E { tag: Single(Tag(0x300A, 0x0072)), alias: "FractionGroupDescription", vr: LO },
    E { tag: Single(Tag(0x300A, 0x0078)), alias: "NumberOfFractionsPlanned", vr: IS },
    E { tag: Single(Tag(0x300A, 0x0079)), alias: "NumberOfFractionPatternDigitsPerDay", vr: IS },
    E { tag: Single(Tag(0x300A, 0x007A)), alias: "RepeatFractionCycleLength", vr: IS },
    E { tag: Single(Tag(0x300A, 0x007B)), alias: "FractionPattern", vr: LT },
    E { tag: Single(Tag(0x300A, 0x0080)), alias: "NumberOfBeams", vr: IS },
    E { tag: Single(Tag(0x300A, 0x0082)), alias: "BeamDoseSpecificationPoint", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0083)), alias: "ReferencedDoseReferenceUID", vr: UI },
    E { tag: Single(Tag(0x300A, 0x0084)), alias: "BeamDose", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0086)), alias: "BeamMeterset", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0088)), alias: "BeamDosePointDepth", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0089)), alias: "BeamDosePointEquivalentDepth", vr: FL },
    E { tag: Single(Tag(0x300A, 0x008A)), alias: "BeamDosePointSSD", vr: FL },
    E { tag: Single(Tag(0x300A, 0x008B)), alias: "BeamDoseMeaning", vr: CS },
    E { tag: Single(Tag(0x300A, 0x008C)), alias: "BeamDoseVerificationControlPointSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x008D)), alias: "AverageBeamDosePointDepth", vr: FL }, // RET (2017c)
    E { tag: Single(Tag(0x300A, 0x008E)), alias: "AverageBeamDosePointEquivalentDepth", vr: FL }, // RET (2017c)
    E { tag: Single(Tag(0x300A, 0x008F)), alias: "AverageBeamDosePointSSD", vr: FL }, // RET (2017c)
    E { tag: Single(Tag(0x300A, 0x0090)), alias: "BeamDoseType", vr: CS },
    E { tag: Single(Tag(0x300A, 0x0091)), alias: "AlternateBeamDose", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0092)), alias: "AlternateBeamDoseType", vr: CS },
    E { tag: Single(Tag(0x300A, 0x0093)), alias: "DepthValueAveragingFlag", vr: CS },
    E { tag: Single(Tag(0x300A, 0x0094)), alias: "BeamDosePointSourceToExternalContourDistance", vr: DS },
    E { tag: Single(Tag(0x300A, 0x00A0)), alias: "NumberOfBrachyApplicationSetups", vr: IS },
    E { tag: Single(Tag(0x300A, 0x00A2)), alias: "BrachyApplicationSetupDoseSpecificationPoint", vr: DS },
    E { tag: Single(Tag(0x300A, 0x00A4)), alias: "BrachyApplicationSetupDose", vr: DS },
    E { tag: Single(Tag(0x300A, 0x00B0)), alias: "BeamSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x00B2)), alias: "TreatmentMachineName", vr: SH },
    E { tag: Single(Tag(0x300A, 0x00B3)), alias: "PrimaryDosimeterUnit", vr: CS },
    E { tag: Single(Tag(0x300A, 0x00B4)), alias: "SourceAxisDistance", vr: DS },
    E { tag: Single(Tag(0x300A, 0x00B6)), alias: "BeamLimitingDeviceSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x00B8)), alias: "RTBeamLimitingDeviceType", vr: CS },
    E { tag: Single(Tag(0x300A, 0x00BA)), alias: "SourceToBeamLimitingDeviceDistance", vr: DS },
    E { tag: Single(Tag(0x300A, 0x00BB)), alias: "IsocenterToBeamLimitingDeviceDistance", vr: FL },
    E { tag: Single(Tag(0x300A, 0x00BC)), alias: "NumberOfLeafJawPairs", vr: IS },
    E { tag: Single(Tag(0x300A, 0x00BE)), alias: "LeafPositionBoundaries", vr: DS },
    E { tag: Single(Tag(0x300A, 0x00C0)), alias: "BeamNumber", vr: IS },
    E { tag: Single(Tag(0x300A, 0x00C2)), alias: "BeamName", vr: LO },
    E { tag: Single(Tag(0x300A, 0x00C3)), alias: "BeamDescription", vr: ST },
    E { tag: Single(Tag(0x300A, 0x00C4)), alias: "BeamType", vr: CS },
    E { tag: Single(Tag(0x300A, 0x00C5)), alias: "BeamDeliveryDurationLimit", vr: FD },
    E { tag: Single(Tag(0x300A, 0x00C6)), alias: "RadiationType", vr: CS },
    E { tag: Single(Tag(0x300A, 0x00C7)), alias: "HighDoseTechniqueType", vr: CS },
    E { tag: Single(Tag(0x300A, 0x00C8)), alias: "ReferenceImageNumber", vr: IS },
    E { tag: Single(Tag(0x300A, 0x00CA)), alias: "PlannedVerificationImageSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x00CC)), alias: "ImagingDeviceSpecificAcquisitionParameters", vr: LO },
    E { tag: Single(Tag(0x300A, 0x00CE)), alias: "TreatmentDeliveryType", vr: CS },
    E { tag: Single(Tag(0x300A, 0x00D0)), alias: "NumberOfWedges", vr: IS },
    E { tag: Single(Tag(0x300A, 0x00D1)), alias: "WedgeSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x00D2)), alias: "WedgeNumber", vr: IS },
    E { tag: Single(Tag(0x300A, 0x00D3)), alias: "WedgeType", vr: CS },
    E { tag: Single(Tag(0x300A, 0x00D4)), alias: "WedgeID", vr: SH },
    E { tag: Single(Tag(0x300A, 0x00D5)), alias: "WedgeAngle", vr: IS },
    E { tag: Single(Tag(0x300A, 0x00D6)), alias: "WedgeFactor", vr: DS },
    E { tag: Single(Tag(0x300A, 0x00D7)), alias: "TotalWedgeTrayWaterEquivalentThickness", vr: FL },
    E { tag: Single(Tag(0x300A, 0x00D8)), alias: "WedgeOrientation", vr: DS },
    E { tag: Single(Tag(0x300A, 0x00D9)), alias: "IsocenterToWedgeTrayDistance", vr: FL },
    E { tag: Single(Tag(0x300A, 0x00DA)), alias: "SourceToWedgeTrayDistance", vr: DS },
    E { tag: Single(Tag(0x300A, 0x00DB)), alias: "WedgeThinEdgePosition", vr: FL },
    E { tag: Single(Tag(0x300A, 0x00DC)), alias: "BolusID", vr: SH },
    E { tag: Single(Tag(0x300A, 0x00DD)), alias: "BolusDescription", vr: ST },
    E { tag: Single(Tag(0x300A, 0x00DE)), alias: "EffectiveWedgeAngle", vr: DS },
    E { tag: Single(Tag(0x300A, 0x00E0)), alias: "NumberOfCompensators", vr: IS },
    E { tag: Single(Tag(0x300A, 0x00E1)), alias: "MaterialID", vr: SH },
    E { tag: Single(Tag(0x300A, 0x00E2)), alias: "TotalCompensatorTrayFactor", vr: DS },
    E { tag: Single(Tag(0x300A, 0x00E3)), alias: "CompensatorSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x00E4)), alias: "CompensatorNumber", vr: IS },
    E { tag: Single(Tag(0x300A, 0x00E5)), alias: "CompensatorID", vr: SH },
    E { tag: Single(Tag(0x300A, 0x00E6)), alias: "SourceToCompensatorTrayDistance", vr: DS },
    E { tag: Single(Tag(0x300A, 0x00E7)), alias: "CompensatorRows", vr: IS },
    E { tag: Single(Tag(0x300A, 0x00E8)), alias: "CompensatorColumns", vr: IS },
    E { tag: Single(Tag(0x300A, 0x00E9)), alias: "CompensatorPixelSpacing", vr: DS },
    E { tag: Single(Tag(0x300A, 0x00EA)), alias: "CompensatorPosition", vr: DS },
    E { tag: Single(Tag(0x300A, 0x00EB)), alias: "CompensatorTransmissionData", vr: DS },
    E { tag: Single(Tag(0x300A, 0x00EC)), alias: "CompensatorThicknessData", vr: DS },
    E { tag: Single(Tag(0x300A, 0x00ED)), alias: "NumberOfBoli", vr: IS },
    E { tag: Single(Tag(0x300A, 0x00EE)), alias: "CompensatorType", vr: CS },
    E { tag: Single(Tag(0x300A, 0x00EF)), alias: "CompensatorTrayID", vr: SH },
    E { tag: Single(Tag(0x300A, 0x00F0)), alias: "NumberOfBlocks", vr: IS },
    E { tag: Single(Tag(0x300A, 0x00F2)), alias: "TotalBlockTrayFactor", vr: DS },
    E { tag: Single(Tag(0x300A, 0x00F3)), alias: "TotalBlockTrayWaterEquivalentThickness", vr: FL },
    E { tag: Single(Tag(0x300A, 0x00F4)), alias: "BlockSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x00F5)), alias: "BlockTrayID", vr: SH },
    E { tag: Single(Tag(0x300A, 0x00F6)), alias: "SourceToBlockTrayDistance", vr: DS },
    E { tag: Single(Tag(0x300A, 0x00F7)), alias: "IsocenterToBlockTrayDistance", vr: FL },
    E { tag: Single(Tag(0x300A, 0x00F8)), alias: "BlockType", vr: CS },
    E { tag: Single(Tag(0x300A, 0x00F9)), alias: "AccessoryCode", vr: LO },
    E { tag: Single(Tag(0x300A, 0x00FA)), alias: "BlockDivergence", vr: CS },
    E { tag: Single(Tag(0x300A, 0x00FB)), alias: "BlockMountingPosition", vr: CS },
    E { tag: Single(Tag(0x300A, 0x00FC)), alias: "BlockNumber", vr: IS },
    E { tag: Single(Tag(0x300A, 0x00FE)), alias: "BlockName", vr: LO },
    E { tag: Single(Tag(0x300A, 0x0100)), alias: "BlockThickness", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0102)), alias: "BlockTransmission", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0104)), alias: "BlockNumberOfPoints", vr: IS },
    E { tag: Single(Tag(0x300A, 0x0106)), alias: "BlockData", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0107)), alias: "ApplicatorSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x0108)), alias: "ApplicatorID", vr: SH },
    E { tag: Single(Tag(0x300A, 0x0109)), alias: "ApplicatorType", vr: CS },
    E { tag: Single(Tag(0x300A, 0x010A)), alias: "ApplicatorDescription", vr: LO },
    E { tag: Single(Tag(0x300A, 0x010C)), alias: "CumulativeDoseReferenceCoefficient", vr: DS },
    E { tag: Single(Tag(0x300A, 0x010E)), alias: "FinalCumulativeMetersetWeight", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0110)), alias: "NumberOfControlPoints", vr: IS },
    E { tag: Single(Tag(0x300A, 0x0111)), alias: "ControlPointSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x0112)), alias: "ControlPointIndex", vr: IS },
    E { tag: Single(Tag(0x300A, 0x0114)), alias: "NominalBeamEnergy", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0115)), alias: "DoseRateSet", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0116)), alias: "WedgePositionSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x0118)), alias: "WedgePosition", vr: CS },
    E { tag: Single(Tag(0x300A, 0x011A)), alias: "BeamLimitingDevicePositionSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x011C)), alias: "LeafJawPositions", vr: DS },
    E { tag: Single(Tag(0x300A, 0x011E)), alias: "GantryAngle", vr: DS },
    E { tag: Single(Tag(0x300A, 0x011F)), alias: "GantryRotationDirection", vr: CS },
    E { tag: Single(Tag(0x300A, 0x0120)), alias: "BeamLimitingDeviceAngle", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0121)), alias: "BeamLimitingDeviceRotationDirection", vr: CS },
    E { tag: Single(Tag(0x300A, 0x0122)), alias: "PatientSupportAngle", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0123)), alias: "PatientSupportRotationDirection", vr: CS },
    E { tag: Single(Tag(0x300A, 0x0124)), alias: "TableTopEccentricAxisDistance", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0125)), alias: "TableTopEccentricAngle", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0126)), alias: "TableTopEccentricRotationDirection", vr: CS },
    E { tag: Single(Tag(0x300A, 0x0128)), alias: "TableTopVerticalPosition", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0129)), alias: "TableTopLongitudinalPosition", vr: DS },
    E { tag: Single(Tag(0x300A, 0x012A)), alias: "TableTopLateralPosition", vr: DS },
    E { tag: Single(Tag(0x300A, 0x012C)), alias: "IsocenterPosition", vr: DS },
    E { tag: Single(Tag(0x300A, 0x012E)), alias: "SurfaceEntryPoint", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0130)), alias: "SourceToSurfaceDistance", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0131)), alias: "AverageBeamDosePointSourceToExternalContourDistance", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0132)), alias: "SourceToExternalContourDistance", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0133)), alias: "ExternalContourEntryPoint", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0134)), alias: "CumulativeMetersetWeight", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0140)), alias: "TableTopPitchAngle", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0142)), alias: "TableTopPitchRotationDirection", vr: CS },
    E { tag: Single(Tag(0x300A, 0x0144)), alias: "TableTopRollAngle", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0146)), alias: "TableTopRollRotationDirection", vr: CS },
    E { tag: Single(Tag(0x300A, 0x0148)), alias: "HeadFixationAngle", vr: FL },
    E { tag: Single(Tag(0x300A, 0x014A)), alias: "GantryPitchAngle", vr: FL },
    E { tag: Single(Tag(0x300A, 0x014C)), alias: "GantryPitchRotationDirection", vr: CS },
    E { tag: Single(Tag(0x300A, 0x014E)), alias: "GantryPitchAngleTolerance", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0150)), alias: "FixationEye", vr: CS },
    E { tag: Single(Tag(0x300A, 0x0151)), alias: "ChairHeadFramePosition", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0152)), alias: "HeadFixationAngleTolerance", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0153)), alias: "ChairHeadFramePositionTolerance", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0154)), alias: "FixationLightAzimuthalAngleTolerance", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0155)), alias: "FixationLightPolarAngleTolerance", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0180)), alias: "PatientSetupSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x0182)), alias: "PatientSetupNumber", vr: IS },
    E { tag: Single(Tag(0x300A, 0x0183)), alias: "PatientSetupLabel", vr: LO },
    E { tag: Single(Tag(0x300A, 0x0184)), alias: "PatientAdditionalPosition", vr: LO },
    E { tag: Single(Tag(0x300A, 0x0190)), alias: "FixationDeviceSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x0192)), alias: "FixationDeviceType", vr: CS },
    E { tag: Single(Tag(0x300A, 0x0194)), alias: "FixationDeviceLabel", vr: SH },
    E { tag: Single(Tag(0x300A, 0x0196)), alias: "FixationDeviceDescription", vr: ST },
    E { tag: Single(Tag(0x300A, 0x0198)), alias: "FixationDevicePosition", vr: SH },
    E { tag: Single(Tag(0x300A, 0x0199)), alias: "FixationDevicePitchAngle", vr: FL },
    E { tag: Single(Tag(0x300A, 0x019A)), alias: "FixationDeviceRollAngle", vr: FL },
    E { tag: Single(Tag(0x300A, 0x01A0)), alias: "ShieldingDeviceSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x01A2)), alias: "ShieldingDeviceType", vr: CS },
    E { tag: Single(Tag(0x300A, 0x01A4)), alias: "ShieldingDeviceLabel", vr: SH },
    E { tag: Single(Tag(0x300A, 0x01A6)), alias: "ShieldingDeviceDescription", vr: ST },
    E { tag: Single(Tag(0x300A, 0x01A8)), alias: "ShieldingDevicePosition", vr: SH },
    E { tag: Single(Tag(0x300A, 0x01B0)), alias: "SetupTechnique", vr: CS },
    E { tag: Single(Tag(0x300A, 0x01B2)), alias: "SetupTechniqueDescription", vr: ST },
    E { tag: Single(Tag(0x300A, 0x01B4)), alias: "SetupDeviceSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x01B6)), alias: "SetupDeviceType", vr: CS },
    E { tag: Single(Tag(0x300A, 0x01B8)), alias: "SetupDeviceLabel", vr: SH },
    E { tag: Single(Tag(0x300A, 0x01BA)), alias: "SetupDeviceDescription", vr: ST },
    E { tag: Single(Tag(0x300A, 0x01BC)), alias: "SetupDeviceParameter", vr: DS },
    E { tag: Single(Tag(0x300A, 0x01D0)), alias: "SetupReferenceDescription", vr: ST },
    E { tag: Single(Tag(0x300A, 0x01D2)), alias: "TableTopVerticalSetupDisplacement", vr: DS },
    E { tag: Single(Tag(0x300A, 0x01D4)), alias: "TableTopLongitudinalSetupDisplacement", vr: DS },
    E { tag: Single(Tag(0x300A, 0x01D6)), alias: "TableTopLateralSetupDisplacement", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0200)), alias: "BrachyTreatmentTechnique", vr: CS },
    E { tag: Single(Tag(0x300A, 0x0202)), alias: "BrachyTreatmentType", vr: CS },
    E { tag: Single(Tag(0x300A, 0x0206)), alias: "TreatmentMachineSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x0210)), alias: "SourceSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x0212)), alias: "SourceNumber", vr: IS },
    E { tag: Single(Tag(0x300A, 0x0214)), alias: "SourceType", vr: CS },
    E { tag: Single(Tag(0x300A, 0x0216)), alias: "SourceManufacturer", vr: LO },
    E { tag: Single(Tag(0x300A, 0x0218)), alias: "ActiveSourceDiameter", vr: DS },
    E { tag: Single(Tag(0x300A, 0x021A)), alias: "ActiveSourceLength", vr: DS },
    E { tag: Single(Tag(0x300A, 0x021B)), alias: "SourceModelID", vr: SH },
    E { tag: Single(Tag(0x300A, 0x021C)), alias: "SourceDescription", vr: LO },
    E { tag: Single(Tag(0x300A, 0x0222)), alias: "SourceEncapsulationNominalThickness", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0224)), alias: "SourceEncapsulationNominalTransmission", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0226)), alias: "SourceIsotopeName", vr: LO },
    E { tag: Single(Tag(0x300A, 0x0228)), alias: "SourceIsotopeHalfLife", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0229)), alias: "SourceStrengthUnits", vr: CS },
    E { tag: Single(Tag(0x300A, 0x022A)), alias: "ReferenceAirKermaRate", vr: DS },
    E { tag: Single(Tag(0x300A, 0x022B)), alias: "SourceStrength", vr: DS },
    E { tag: Single(Tag(0x300A, 0x022C)), alias: "SourceStrengthReferenceDate", vr: DA },
    E { tag: Single(Tag(0x300A, 0x022E)), alias: "SourceStrengthReferenceTime", vr: TM },
    E { tag: Single(Tag(0x300A, 0x0230)), alias: "ApplicationSetupSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x0232)), alias: "ApplicationSetupType", vr: CS },
    E { tag: Single(Tag(0x300A, 0x0234)), alias: "ApplicationSetupNumber", vr: IS },
    E { tag: Single(Tag(0x300A, 0x0236)), alias: "ApplicationSetupName", vr: LO },
    E { tag: Single(Tag(0x300A, 0x0238)), alias: "ApplicationSetupManufacturer", vr: LO },
    E { tag: Single(Tag(0x300A, 0x0240)), alias: "TemplateNumber", vr: IS },
    E { tag: Single(Tag(0x300A, 0x0242)), alias: "TemplateType", vr: SH },
    E { tag: Single(Tag(0x300A, 0x0244)), alias: "TemplateName", vr: LO },
    E { tag: Single(Tag(0x300A, 0x0250)), alias: "TotalReferenceAirKerma", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0260)), alias: "BrachyAccessoryDeviceSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x0262)), alias: "BrachyAccessoryDeviceNumber", vr: IS },
    E { tag: Single(Tag(0x300A, 0x0263)), alias: "BrachyAccessoryDeviceID", vr: SH },
    E { tag: Single(Tag(0x300A, 0x0264)), alias: "BrachyAccessoryDeviceType", vr: CS },
    E { tag: Single(Tag(0x300A, 0x0266)), alias: "BrachyAccessoryDeviceName", vr: LO },
    E { tag: Single(Tag(0x300A, 0x026A)), alias: "BrachyAccessoryDeviceNominalThickness", vr: DS },
    E { tag: Single(Tag(0x300A, 0x026C)), alias: "BrachyAccessoryDeviceNominalTransmission", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0271)), alias: "ChannelEffectiveLength", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0272)), alias: "ChannelInnerLength", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0273)), alias: "AfterloaderChannelID", vr: SH },
    E { tag: Single(Tag(0x300A, 0x0274)), alias: "SourceApplicatorTipLength", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0280)), alias: "ChannelSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x0282)), alias: "ChannelNumber", vr: IS },
    E { tag: Single(Tag(0x300A, 0x0284)), alias: "ChannelLength", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0286)), alias: "ChannelTotalTime", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0288)), alias: "SourceMovementType", vr: CS },
    E { tag: Single(Tag(0x300A, 0x028A)), alias: "NumberOfPulses", vr: IS },
    E { tag: Single(Tag(0x300A, 0x028C)), alias: "PulseRepetitionInterval", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0290)), alias: "SourceApplicatorNumber", vr: IS },
    E { tag: Single(Tag(0x300A, 0x0291)), alias: "SourceApplicatorID", vr: SH },
    E { tag: Single(Tag(0x300A, 0x0292)), alias: "SourceApplicatorType", vr: CS },
    E { tag: Single(Tag(0x300A, 0x0294)), alias: "SourceApplicatorName", vr: LO },
    E { tag: Single(Tag(0x300A, 0x0296)), alias: "SourceApplicatorLength", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0298)), alias: "SourceApplicatorManufacturer", vr: LO },
    E { tag: Single(Tag(0x300A, 0x029C)), alias: "SourceApplicatorWallNominalThickness", vr: DS },
    E { tag: Single(Tag(0x300A, 0x029E)), alias: "SourceApplicatorWallNominalTransmission", vr: DS },
    E { tag: Single(Tag(0x300A, 0x02A0)), alias: "SourceApplicatorStepSize", vr: DS },
    E { tag: Single(Tag(0x300A, 0x02A2)), alias: "TransferTubeNumber", vr: IS },
    E { tag: Single(Tag(0x300A, 0x02A4)), alias: "TransferTubeLength", vr: DS },
    E { tag: Single(Tag(0x300A, 0x02B0)), alias: "ChannelShieldSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x02B2)), alias: "ChannelShieldNumber", vr: IS },
    E { tag: Single(Tag(0x300A, 0x02B3)), alias: "ChannelShieldID", vr: SH },
    E { tag: Single(Tag(0x300A, 0x02B4)), alias: "ChannelShieldName", vr: LO },
    E { tag: Single(Tag(0x300A, 0x02B8)), alias: "ChannelShieldNominalThickness", vr: DS },
    E { tag: Single(Tag(0x300A, 0x02BA)), alias: "ChannelShieldNominalTransmission", vr: DS },
    E { tag: Single(Tag(0x300A, 0x02C8)), alias: "FinalCumulativeTimeWeight", vr: DS },
    E { tag: Single(Tag(0x300A, 0x02D0)), alias: "BrachyControlPointSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x02D2)), alias: "ControlPointRelativePosition", vr: DS },
    E { tag: Single(Tag(0x300A, 0x02D4)), alias: "ControlPoint3DPosition", vr: DS },
    E { tag: Single(Tag(0x300A, 0x02D6)), alias: "CumulativeTimeWeight", vr: DS },
    E { tag: Single(Tag(0x300A, 0x02E0)), alias: "CompensatorDivergence", vr: CS },
    E { tag: Single(Tag(0x300A, 0x02E1)), alias: "CompensatorMountingPosition", vr: CS },
    E { tag: Single(Tag(0x300A, 0x02E2)), alias: "SourceToCompensatorDistance", vr: DS },
    E { tag: Single(Tag(0x300A, 0x02E3)), alias: "TotalCompensatorTrayWaterEquivalentThickness", vr: FL },
    E { tag: Single(Tag(0x300A, 0x02E4)), alias: "IsocenterToCompensatorTrayDistance", vr: FL },
    E { tag: Single(Tag(0x300A, 0x02E5)), alias: "CompensatorColumnOffset", vr: FL },
    E { tag: Single(Tag(0x300A, 0x02E6)), alias: "IsocenterToCompensatorDistances", vr: FL },
    E { tag: Single(Tag(0x300A, 0x02E7)), alias: "CompensatorRelativeStoppingPowerRatio", vr: FL },
    E { tag: Single(Tag(0x300A, 0x02E8)), alias: "CompensatorMillingToolDiameter", vr: FL },
    E { tag: Single(Tag(0x300A, 0x02EA)), alias: "IonRangeCompensatorSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x02EB)), alias: "CompensatorDescription", vr: LT },
    E { tag: Single(Tag(0x300A, 0x0302)), alias: "RadiationMassNumber", vr: IS },
    E { tag: Single(Tag(0x300A, 0x0304)), alias: "RadiationAtomicNumber", vr: IS },
    E { tag: Single(Tag(0x300A, 0x0306)), alias: "RadiationChargeState", vr: SS },
    E { tag: Single(Tag(0x300A, 0x0308)), alias: "ScanMode", vr: CS },
    E { tag: Single(Tag(0x300A, 0x0309)), alias: "ModulatedScanModeType", vr: CS },
    E { tag: Single(Tag(0x300A, 0x030A)), alias: "VirtualSourceAxisDistances", vr: FL },
    E { tag: Single(Tag(0x300A, 0x030C)), alias: "SnoutSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x030D)), alias: "SnoutPosition", vr: FL },
    E { tag: Single(Tag(0x300A, 0x030F)), alias: "SnoutID", vr: SH },
    E { tag: Single(Tag(0x300A, 0x0312)), alias: "NumberOfRangeShifters", vr: IS },
    E { tag: Single(Tag(0x300A, 0x0314)), alias: "RangeShifterSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x0316)), alias: "RangeShifterNumber", vr: IS },
    E { tag: Single(Tag(0x300A, 0x0318)), alias: "RangeShifterID", vr: SH },
    E { tag: Single(Tag(0x300A, 0x0320)), alias: "RangeShifterType", vr: CS },
    E { tag: Single(Tag(0x300A, 0x0322)), alias: "RangeShifterDescription", vr: LO },
    E { tag: Single(Tag(0x300A, 0x0330)), alias: "NumberOfLateralSpreadingDevices", vr: IS },
    E { tag: Single(Tag(0x300A, 0x0332)), alias: "LateralSpreadingDeviceSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x0334)), alias: "LateralSpreadingDeviceNumber", vr: IS },
    E { tag: Single(Tag(0x300A, 0x0336)), alias: "LateralSpreadingDeviceID", vr: SH },
    E { tag: Single(Tag(0x300A, 0x0338)), alias: "LateralSpreadingDeviceType", vr: CS },
    E { tag: Single(Tag(0x300A, 0x033A)), alias: "LateralSpreadingDeviceDescription", vr: LO },
    E { tag: Single(Tag(0x300A, 0x033C)), alias: "LateralSpreadingDeviceWaterEquivalentThickness", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0340)), alias: "NumberOfRangeModulators", vr: IS },
    E { tag: Single(Tag(0x300A, 0x0342)), alias: "RangeModulatorSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x0344)), alias: "RangeModulatorNumber", vr: IS },
    E { tag: Single(Tag(0x300A, 0x0346)), alias: "RangeModulatorID", vr: SH },
    E { tag: Single(Tag(0x300A, 0x0348)), alias: "RangeModulatorType", vr: CS },
    E { tag: Single(Tag(0x300A, 0x034A)), alias: "RangeModulatorDescription", vr: LO },
    E { tag: Single(Tag(0x300A, 0x034C)), alias: "BeamCurrentModulationID", vr: SH },
    E { tag: Single(Tag(0x300A, 0x0350)), alias: "PatientSupportType", vr: CS },
    E { tag: Single(Tag(0x300A, 0x0352)), alias: "PatientSupportID", vr: SH },
    E { tag: Single(Tag(0x300A, 0x0354)), alias: "PatientSupportAccessoryCode", vr: LO },
    E { tag: Single(Tag(0x300A, 0x0355)), alias: "TrayAccessoryCode", vr: LO },
    E { tag: Single(Tag(0x300A, 0x0356)), alias: "FixationLightAzimuthalAngle", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0358)), alias: "FixationLightPolarAngle", vr: FL },
    E { tag: Single(Tag(0x300A, 0x035A)), alias: "MetersetRate", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0360)), alias: "RangeShifterSettingsSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x0362)), alias: "RangeShifterSetting", vr: LO },
    E { tag: Single(Tag(0x300A, 0x0364)), alias: "IsocenterToRangeShifterDistance", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0366)), alias: "RangeShifterWaterEquivalentThickness", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0370)), alias: "LateralSpreadingDeviceSettingsSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x0372)), alias: "LateralSpreadingDeviceSetting", vr: LO },
    E { tag: Single(Tag(0x300A, 0x0374)), alias: "IsocenterToLateralSpreadingDeviceDistance", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0380)), alias: "RangeModulatorSettingsSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x0382)), alias: "RangeModulatorGatingStartValue", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0384)), alias: "RangeModulatorGatingStopValue", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0386)), alias: "RangeModulatorGatingStartWaterEquivalentThickness", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0388)), alias: "RangeModulatorGatingStopWaterEquivalentThickness", vr: FL },
    E { tag: Single(Tag(0x300A, 0x038A)), alias: "IsocenterToRangeModulatorDistance", vr: FL },
    E { tag: Single(Tag(0x300A, 0x038F)), alias: "ScanSpotTimeOffset", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0390)), alias: "ScanSpotTuneID", vr: SH },
    E { tag: Single(Tag(0x300A, 0x0391)), alias: "ScanSpotPrescribedIndices", vr: IS },
    E { tag: Single(Tag(0x300A, 0x0392)), alias: "NumberOfScanSpotPositions", vr: IS },
    E { tag: Single(Tag(0x300A, 0x0393)), alias: "ScanSpotReordered", vr: CS },
    E { tag: Single(Tag(0x300A, 0x0394)), alias: "ScanSpotPositionMap", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0395)), alias: "ScanSpotReorderingAllowed", vr: CS },
    E { tag: Single(Tag(0x300A, 0x0396)), alias: "ScanSpotMetersetWeights", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0398)), alias: "ScanningSpotSize", vr: FL },
    E { tag: Single(Tag(0x300A, 0x039A)), alias: "NumberOfPaintings", vr: IS },
    E { tag: Single(Tag(0x300A, 0x03A0)), alias: "IonToleranceTableSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x03A2)), alias: "IonBeamSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x03A4)), alias: "IonBeamLimitingDeviceSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x03A6)), alias: "IonBlockSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x03A8)), alias: "IonControlPointSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x03AA)), alias: "IonWedgeSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x03AC)), alias: "IonWedgePositionSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x0401)), alias: "ReferencedSetupImageSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x0402)), alias: "SetupImageComment", vr: ST },
    E { tag: Single(Tag(0x300A, 0x0410)), alias: "MotionSynchronizationSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x0412)), alias: "ControlPointOrientation", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0420)), alias: "GeneralAccessorySequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x0421)), alias: "GeneralAccessoryID", vr: SH },
    E { tag: Single(Tag(0x300A, 0x0422)), alias: "GeneralAccessoryDescription", vr: ST },
    E { tag: Single(Tag(0x300A, 0x0423)), alias: "GeneralAccessoryType", vr: CS },
    E { tag: Single(Tag(0x300A, 0x0424)), alias: "GeneralAccessoryNumber", vr: IS },
    E { tag: Single(Tag(0x300A, 0x0425)), alias: "SourceToGeneralAccessoryDistance", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0431)), alias: "ApplicatorGeometrySequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x0432)), alias: "ApplicatorApertureShape", vr: CS },
    E { tag: Single(Tag(0x300A, 0x0433)), alias: "ApplicatorOpening", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0434)), alias: "ApplicatorOpeningX", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0435)), alias: "ApplicatorOpeningY", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0436)), alias: "SourceToApplicatorMountingPositionDistance", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0440)), alias: "NumberOfBlockSlabItems", vr: IS },
    E { tag: Single(Tag(0x300A, 0x0441)), alias: "BlockSlabSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x0442)), alias: "BlockSlabThickness", vr: DS },
    E { tag: Single(Tag(0x300A, 0x0443)), alias: "BlockSlabNumber", vr: US },
    E { tag: Single(Tag(0x300A, 0x0450)), alias: "DeviceMotionControlSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x0451)), alias: "DeviceMotionExecutionMode", vr: CS },
    E { tag: Single(Tag(0x300A, 0x0452)), alias: "DeviceMotionObservationMode", vr: CS },
    E { tag: Single(Tag(0x300A, 0x0453)), alias: "DeviceMotionParameterCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x0501)), alias: "DistalDepthFraction", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0502)), alias: "DistalDepth", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0503)), alias: "NominalRangeModulationFractions", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0504)), alias: "NominalRangeModulatedRegionDepths", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0505)), alias: "DepthDoseParametersSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x0506)), alias: "DeliveredDepthDoseParametersSequence", vr: SQ },
    E { tag: Single(Tag(0x300A, 0x0507)), alias: "DeliveredDistalDepthFraction", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0508)), alias: "DeliveredDistalDepth", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0509)), alias: "DeliveredNominalRangeModulationFractions", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0510)), alias: "DeliveredNominalRangeModulatedRegionDepths", vr: FL },
    E { tag: Single(Tag(0x300A, 0x0511)), alias: "DeliveredReferenceDoseDefinition", vr: CS },
    E { tag: Single(Tag(0x300A, 0x0512)), alias: "ReferenceDoseDefinition", vr: CS },
    E { tag: Single(Tag(0x300C, 0x0002)), alias: "ReferencedRTPlanSequence", vr: SQ },
    E { tag: Single(Tag(0x300C, 0x0004)), alias: "ReferencedBeamSequence", vr: SQ },
    E { tag: Single(Tag(0x300C, 0x0006)), alias: "ReferencedBeamNumber", vr: IS },
    E { tag: Single(Tag(0x300C, 0x0007)), alias: "ReferencedReferenceImageNumber", vr: IS },
    E { tag: Single(Tag(0x300C, 0x0008)), alias: "StartCumulativeMetersetWeight", vr: DS },
    E { tag: Single(Tag(0x300C, 0x0009)), alias: "EndCumulativeMetersetWeight", vr: DS },
    E { tag: Single(Tag(0x300C, 0x000A)), alias: "ReferencedBrachyApplicationSetupSequence", vr: SQ },
    E { tag: Single(Tag(0x300C, 0x000C)), alias: "ReferencedBrachyApplicationSetupNumber", vr: IS },
    E { tag: Single(Tag(0x300C, 0x000E)), alias: "ReferencedSourceNumber", vr: IS },
    E { tag: Single(Tag(0x300C, 0x0020)), alias: "ReferencedFractionGroupSequence", vr: SQ },
    E { tag: Single(Tag(0x300C, 0x0022)), alias: "ReferencedFractionGroupNumber", vr: IS },
    E { tag: Single(Tag(0x300C, 0x0040)), alias: "ReferencedVerificationImageSequence", vr: SQ },
    E { tag: Single(Tag(0x300C, 0x0042)), alias: "ReferencedReferenceImageSequence", vr: SQ },
    E { tag: Single(Tag(0x300C, 0x0050)), alias: "ReferencedDoseReferenceSequence", vr: SQ },
    E { tag: Single(Tag(0x300C, 0x0051)), alias: "ReferencedDoseReferenceNumber", vr: IS },
    E { tag: Single(Tag(0x300C, 0x0055)), alias: "BrachyReferencedDoseReferenceSequence", vr: SQ },
    E { tag: Single(Tag(0x300C, 0x0060)), alias: "ReferencedStructureSetSequence", vr: SQ },
    E { tag: Single(Tag(0x300C, 0x006A)), alias: "ReferencedPatientSetupNumber", vr: IS },
    E { tag: Single(Tag(0x300C, 0x0080)), alias: "ReferencedDoseSequence", vr: SQ },
    E { tag: Single(Tag(0x300C, 0x00A0)), alias: "ReferencedToleranceTableNumber", vr: IS },
    E { tag: Single(Tag(0x300C, 0x00B0)), alias: "ReferencedBolusSequence", vr: SQ },
    E { tag: Single(Tag(0x300C, 0x00C0)), alias: "ReferencedWedgeNumber", vr: IS },
    E { tag: Single(Tag(0x300C, 0x00D0)), alias: "ReferencedCompensatorNumber", vr: IS },
    E { tag: Single(Tag(0x300C, 0x00E0)), alias: "ReferencedBlockNumber", vr: IS },
    E { tag: Single(Tag(0x300C, 0x00F0)), alias: "ReferencedControlPointIndex", vr: IS },
    E { tag: Single(Tag(0x300C, 0x00F2)), alias: "ReferencedControlPointSequence", vr: SQ },
    E { tag: Single(Tag(0x300C, 0x00F4)), alias: "ReferencedStartControlPointIndex", vr: IS },
    E { tag: Single(Tag(0x300C, 0x00F6)), alias: "ReferencedStopControlPointIndex", vr: IS },
    E { tag: Single(Tag(0x300C, 0x0100)), alias: "ReferencedRangeShifterNumber", vr: IS },
    E { tag: Single(Tag(0x300C, 0x0102)), alias: "ReferencedLateralSpreadingDeviceNumber", vr: IS },
    E { tag: Single(Tag(0x300C, 0x0104)), alias: "ReferencedRangeModulatorNumber", vr: IS },
    E { tag: Single(Tag(0x300C, 0x0111)), alias: "OmittedBeamTaskSequence", vr: SQ },
    E { tag: Single(Tag(0x300C, 0x0112)), alias: "ReasonForOmission", vr: CS },
    E { tag: Single(Tag(0x300C, 0x0113)), alias: "ReasonForOmissionDescription", vr: LO },
    E { tag: Single(Tag(0x300E, 0x0002)), alias: "ApprovalStatus", vr: CS },
    E { tag: Single(Tag(0x300E, 0x0004)), alias: "ReviewDate", vr: DA },
    E { tag: Single(Tag(0x300E, 0x0005)), alias: "ReviewTime", vr: TM },
    E { tag: Single(Tag(0x300E, 0x0008)), alias: "ReviewerName", vr: PN },
    E { tag: Single(Tag(0x3010, 0x0001)), alias: "RadiobiologicalDoseEffectSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0002)), alias: "RadiobiologicalDoseEffectFlag", vr: CS },
    E { tag: Single(Tag(0x3010, 0x0003)), alias: "EffectiveDoseCalculationMethodCategoryCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0004)), alias: "EffectiveDoseCalculationMethodCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0005)), alias: "EffectiveDoseCalculationMethodDescription", vr: LO },
    E { tag: Single(Tag(0x3010, 0x0006)), alias: "ConceptualVolumeUID", vr: UI },
    E { tag: Single(Tag(0x3010, 0x0007)), alias: "OriginatingSOPInstanceReferenceSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0008)), alias: "ConceptualVolumeConstituentSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0009)), alias: "EquivalentConceptualVolumeInstanceReferenceSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x000A)), alias: "EquivalentConceptualVolumesSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x000B)), alias: "ReferencedConceptualVolumeUID", vr: UI },
    E { tag: Single(Tag(0x3010, 0x000C)), alias: "ConceptualVolumeCombinationExpression", vr: UT },
    E { tag: Single(Tag(0x3010, 0x000D)), alias: "ConceptualVolumeConstituentIndex", vr: US },
    E { tag: Single(Tag(0x3010, 0x000E)), alias: "ConceptualVolumeCombinationFlag", vr: CS },
    E { tag: Single(Tag(0x3010, 0x000F)), alias: "ConceptualVolumeCombinationDescription", vr: ST },
    E { tag: Single(Tag(0x3010, 0x0010)), alias: "ConceptualVolumeSegmentationDefinedFlag", vr: CS },
    E { tag: Single(Tag(0x3010, 0x0011)), alias: "ConceptualVolumeSegmentationReferenceSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0012)), alias: "ConceptualVolumeConstituentSegmentationReferenceSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0013)), alias: "ConstituentConceptualVolumeUID", vr: UI },
    E { tag: Single(Tag(0x3010, 0x0014)), alias: "DerivationConceptualVolumeSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0015)), alias: "SourceConceptualVolumeUID", vr: UI },
    E { tag: Single(Tag(0x3010, 0x0016)), alias: "ConceptualVolumeDerivationAlgorithmSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0017)), alias: "ConceptualVolumeDescription", vr: ST },
    E { tag: Single(Tag(0x3010, 0x0018)), alias: "SourceConceptualVolumeSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0019)), alias: "AuthorIdentificationSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x001A)), alias: "ManufacturerModelVersion", vr: LO },
    E { tag: Single(Tag(0x3010, 0x001B)), alias: "DeviceAlternateIdentifier", vr: UC },
    E { tag: Single(Tag(0x3010, 0x001C)), alias: "DeviceAlternateIdentifierType", vr: CS },
    E { tag: Single(Tag(0x3010, 0x001D)), alias: "DeviceAlternateIdentifierFormat", vr: LT },
    E { tag: Single(Tag(0x3010, 0x001E)), alias: "SegmentationCreationTemplateLabel", vr: LO },
    E { tag: Single(Tag(0x3010, 0x001F)), alias: "SegmentationTemplateUID", vr: UI },
    E { tag: Single(Tag(0x3010, 0x0020)), alias: "ReferencedSegmentReferenceIndex", vr: US },
    E { tag: Single(Tag(0x3010, 0x0021)), alias: "SegmentReferenceSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0022)), alias: "SegmentReferenceIndex", vr: US },
    E { tag: Single(Tag(0x3010, 0x0023)), alias: "DirectSegmentReferenceSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0024)), alias: "CombinationSegmentReferenceSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0025)), alias: "ConceptualVolumeSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0026)), alias: "SegmentedRTAccessoryDeviceSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0027)), alias: "SegmentCharacteristicsSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0028)), alias: "RelatedSegmentCharacteristicsSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0029)), alias: "SegmentCharacteristicsPrecedence", vr: US },
    E { tag: Single(Tag(0x3010, 0x002A)), alias: "RTSegmentAnnotationSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x002B)), alias: "SegmentAnnotationCategoryCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x002C)), alias: "SegmentAnnotationTypeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x002D)), alias: "DeviceLabel", vr: LO },
    E { tag: Single(Tag(0x3010, 0x002E)), alias: "DeviceTypeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0030)), alias: "PatientEquipmentRelationshipCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0031)), alias: "ReferencedFiducialsUID", vr: UI },
    E { tag: Single(Tag(0x3010, 0x0032)), alias: "PatientTreatmentOrientationSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0033)), alias: "UserContentLabel", vr: SH },
    E { tag: Single(Tag(0x3010, 0x0034)), alias: "UserContentLongLabel", vr: LO },
    E { tag: Single(Tag(0x3010, 0x0035)), alias: "EntityLabel", vr: SH },
    E { tag: Single(Tag(0x3010, 0x0036)), alias: "EntityName", vr: LO },
    E { tag: Single(Tag(0x3010, 0x0037)), alias: "EntityDescription", vr: ST },
    E { tag: Single(Tag(0x3010, 0x0038)), alias: "EntityLongLabel", vr: LO },
    E { tag: Single(Tag(0x3010, 0x0039)), alias: "DeviceIndex", vr: US },
    E { tag: Single(Tag(0x3010, 0x003A)), alias: "RTTreatmentPhaseIndex", vr: US },
    E { tag: Single(Tag(0x3010, 0x003B)), alias: "RTTreatmentPhaseUID", vr: UI },
    E { tag: Single(Tag(0x3010, 0x003C)), alias: "RTPrescriptionIndex", vr: US },
    E { tag: Single(Tag(0x3010, 0x003D)), alias: "RTSegmentAnnotationIndex", vr: US },
    E { tag: Single(Tag(0x3010, 0x003E)), alias: "BasisRTTreatmentPhaseIndex", vr: US },
    E { tag: Single(Tag(0x3010, 0x003F)), alias: "RelatedRTTreatmentPhaseIndex", vr: US },
    E { tag: Single(Tag(0x3010, 0x0040)), alias: "ReferencedRTTreatmentPhaseIndex", vr: US },
    E { tag: Single(Tag(0x3010, 0x0041)), alias: "ReferencedRTPrescriptionIndex", vr: US },
    E { tag: Single(Tag(0x3010, 0x0042)), alias: "ReferencedParentRTPrescriptionIndex", vr: US },
    E { tag: Single(Tag(0x3010, 0x0043)), alias: "ManufacturerDeviceIdentifier", vr: ST },
    E { tag: Single(Tag(0x3010, 0x0044)), alias: "InstanceLevelReferencedPerformedProcedureStepSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0045)), alias: "RTTreatmentPhaseIntentPresenceFlag", vr: CS },
    E { tag: Single(Tag(0x3010, 0x0046)), alias: "RadiotherapyTreatmentType", vr: CS },
    E { tag: Single(Tag(0x3010, 0x0047)), alias: "TeletherapyRadiationType", vr: CS },
    E { tag: Single(Tag(0x3010, 0x0048)), alias: "BrachytherapySourceType", vr: CS },
    E { tag: Single(Tag(0x3010, 0x0049)), alias: "ReferencedRTTreatmentPhaseSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x004A)), alias: "ReferencedDirectSegmentInstanceSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x004B)), alias: "IntendedRTTreatmentPhaseSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x004C)), alias: "IntendedPhaseStartDate", vr: DA },
    E { tag: Single(Tag(0x3010, 0x004D)), alias: "IntendedPhaseEndDate", vr: DA },
    E { tag: Single(Tag(0x3010, 0x004E)), alias: "RTTreatmentPhaseIntervalSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x004F)), alias: "TemporalRelationshipIntervalAnchor", vr: CS },
    E { tag: Single(Tag(0x3010, 0x0050)), alias: "MinimumNumberOfIntervalDays", vr: FD },
    E { tag: Single(Tag(0x3010, 0x0051)), alias: "MaximumNumberOfIntervalDays", vr: FD },
    E { tag: Single(Tag(0x3010, 0x0052)), alias: "PertinentSOPClassesInStudy", vr: UI },
    E { tag: Single(Tag(0x3010, 0x0053)), alias: "PertinentSOPClassesInSeries", vr: UI },
    E { tag: Single(Tag(0x3010, 0x0054)), alias: "RTPrescriptionLabel", vr: LO },
    E { tag: Single(Tag(0x3010, 0x0055)), alias: "RTPhysicianIntentPredecessorSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0056)), alias: "RTTreatmentApproachLabel", vr: LO },
    E { tag: Single(Tag(0x3010, 0x0057)), alias: "RTPhysicianIntentSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0058)), alias: "RTPhysicianIntentIndex", vr: US },
    E { tag: Single(Tag(0x3010, 0x0059)), alias: "RTTreatmentIntentType", vr: CS },
    E { tag: Single(Tag(0x3010, 0x005A)), alias: "RTPhysicianIntentNarrative", vr: UT },
    E { tag: Single(Tag(0x3010, 0x005B)), alias: "RTProtocolCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x005C)), alias: "ReasonForSuperseding", vr: ST },
    E { tag: Single(Tag(0x3010, 0x005D)), alias: "RTDiagnosisCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x005E)), alias: "ReferencedRTPhysicianIntentIndex", vr: US },
    E { tag: Single(Tag(0x3010, 0x005F)), alias: "RTPhysicianIntentInputInstanceSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0060)), alias: "RTAnatomicPrescriptionSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0061)), alias: "PriorTreatmentDoseDescription", vr: UT },
    E { tag: Single(Tag(0x3010, 0x0062)), alias: "PriorTreatmentReferenceSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0063)), alias: "DosimetricObjectiveEvaluationScope", vr: CS },
    E { tag: Single(Tag(0x3010, 0x0064)), alias: "TherapeuticRoleCategoryCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0065)), alias: "TherapeuticRoleTypeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0066)), alias: "ConceptualVolumeOptimizationPrecedence", vr: US },
    E { tag: Single(Tag(0x3010, 0x0067)), alias: "ConceptualVolumeCategoryCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0068)), alias: "ConceptualVolumeBlockingConstraint", vr: CS },
    E { tag: Single(Tag(0x3010, 0x0069)), alias: "ConceptualVolumeTypeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x006A)), alias: "ConceptualVolumeTypeModifierCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x006B)), alias: "RTPrescriptionSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x006C)), alias: "DosimetricObjectiveSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x006D)), alias: "DosimetricObjectiveTypeCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x006E)), alias: "DosimetricObjectiveUID", vr: UI },
    E { tag: Single(Tag(0x3010, 0x006F)), alias: "ReferencedDosimetricObjectiveUID", vr: UI },
    E { tag: Single(Tag(0x3010, 0x0070)), alias: "DosimetricObjectiveParameterSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0071)), alias: "ReferencedDosimetricObjectivesSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0073)), alias: "AbsoluteDosimetricObjectiveFlag", vr: CS },
    E { tag: Single(Tag(0x3010, 0x0074)), alias: "DosimetricObjectiveWeight", vr: FD },
    E { tag: Single(Tag(0x3010, 0x0075)), alias: "DosimetricObjectivePurpose", vr: CS },
    E { tag: Single(Tag(0x3010, 0x0076)), alias: "PlanningInputInformationSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0077)), alias: "TreatmentSite", vr: LO },
    E { tag: Single(Tag(0x3010, 0x0078)), alias: "TreatmentSiteCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0079)), alias: "FractionPatternSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x007A)), alias: "TreatmentTechniqueNotes", vr: UT },
    E { tag: Single(Tag(0x3010, 0x007B)), alias: "PrescriptionNotes", vr: UT },
    E { tag: Single(Tag(0x3010, 0x007C)), alias: "NumberOfIntervalFractions", vr: IS },
    E { tag: Single(Tag(0x3010, 0x007D)), alias: "NumberOfFractions", vr: US },
    E { tag: Single(Tag(0x3010, 0x007E)), alias: "IntendedDeliveryDuration", vr: US },
    E { tag: Single(Tag(0x3010, 0x007F)), alias: "FractionationNotes", vr: UT },
    E { tag: Single(Tag(0x3010, 0x0080)), alias: "RTTreatmentTechniqueCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0081)), alias: "PrescriptionNotesSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0082)), alias: "FractionBasedRelationshipSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0083)), alias: "FractionBasedRelationshipIntervalAnchor", vr: CS },
    E { tag: Single(Tag(0x3010, 0x0084)), alias: "MinimumHoursBetweenFractions", vr: FD },
    E { tag: Single(Tag(0x3010, 0x0085)), alias: "IntendedFractionStartTime", vr: TM },
    E { tag: Single(Tag(0x3010, 0x0086)), alias: "IntendedStartDayOfWeek", vr: LT },
    E { tag: Single(Tag(0x3010, 0x0087)), alias: "WeekdayFractionPatternSequence", vr: SQ },
    E { tag: Single(Tag(0x3010, 0x0088)), alias: "DeliveryTimeStructureCodeSequence", vr: SQ },
    E { tag: Single(Tag(0x4000, 0x0010)), alias: "Arbitrary", vr: LT }, // RET
    E { tag: Single(Tag(0x4000, 0x4000)), alias: "TextComments", vr: LT }, // RET
    E { tag: Single(Tag(0x4008, 0x0040)), alias: "ResultsID", vr: SH }, // RET (2004)
    E { tag: Single(Tag(0x4008, 0x0042)), alias: "ResultsIDIssuer", vr: LO }, // RET (2004)
    E { tag: Single(Tag(0x4008, 0x0050)), alias: "ReferencedInterpretationSequence", vr: SQ }, // RET (2004)
    E { tag: Single(Tag(0x4008, 0x00FF)), alias: "ReportProductionStatusTrial", vr: CS }, // RET (2009)
    E { tag: Single(Tag(0x4008, 0x0100)), alias: "InterpretationRecordedDate", vr: DA }, // RET (2004)
    E { tag: Single(Tag(0x4008, 0x0101)), alias: "InterpretationRecordedTime", vr: TM }, // RET (2004)
    E { tag: Single(Tag(0x4008, 0x0102)), alias: "InterpretationRecorder", vr: PN }, // RET (2004)
    E { tag: Single(Tag(0x4008, 0x0103)), alias: "ReferenceToRecordedSound", vr: LO }, // RET (2004)
    E { tag: Single(Tag(0x4008, 0x0108)), alias: "InterpretationTranscriptionDate", vr: DA }, // RET (2004)
    E { tag: Single(Tag(0x4008, 0x0109)), alias: "InterpretationTranscriptionTime", vr: TM }, // RET (2004)
    E { tag: Single(Tag(0x4008, 0x010A)), alias: "InterpretationTranscriber", vr: PN }, // RET (2004)
    E { tag: Single(Tag(0x4008, 0x010B)), alias: "InterpretationText", vr: ST }, // RET (2004)
    E { tag: Single(Tag(0x4008, 0x010C)), alias: "InterpretationAuthor", vr: PN }, // RET (2004)
    E { tag: Single(Tag(0x4008, 0x0111)), alias: "InterpretationApproverSequence", vr: SQ }, // RET (2004)
    E { tag: Single(Tag(0x4008, 0x0112)), alias: "InterpretationApprovalDate", vr: DA }, // RET (2004)
    E { tag: Single(Tag(0x4008, 0x0113)), alias: "InterpretationApprovalTime", vr: TM }, // RET (2004)
    E { tag: Single(Tag(0x4008, 0x0114)), alias: "PhysicianApprovingInterpretation", vr: PN }, // RET (2004)
    E { tag: Single(Tag(0x4008, 0x0115)), alias: "InterpretationDiagnosisDescription", vr: LT }, // RET (2004)
    E { tag: Single(Tag(0x4008, 0x0117)), alias: "InterpretationDiagnosisCodeSequence", vr: SQ }, // RET (2004)
    E { tag: Single(Tag(0x4008, 0x0118)), alias: "ResultsDistributionListSequence", vr: SQ }, // RET (2004)
    E { tag: Single(Tag(0x4008, 0x0119)), alias: "DistributionName", vr: PN }, // RET (2004)
    E { tag: Single(Tag(0x4008, 0x011A)), alias: "DistributionAddress", vr: LO }, // RET (2004)
    E { tag: Single(Tag(0x4008, 0x0200)), alias: "InterpretationID", vr: SH }, // RET (2004)
    E { tag: Single(Tag(0x4008, 0x0202)), alias: "InterpretationIDIssuer", vr: LO }, // RET (2004)
    E { tag: Single(Tag(0x4008, 0x0210)), alias: "InterpretationTypeID", vr: CS }, // RET (2004)
    E { tag: Single(Tag(0x4008, 0x0212)), alias: "InterpretationStatusID", vr: CS }, // RET (2004)
    E { tag: Single(Tag(0x4008, 0x0300)), alias: "Impressions", vr: ST }, // RET (2004)
    E { tag: Single(Tag(0x4008, 0x4000)), alias: "ResultsComments", vr: ST }, // RET (2004)
    E { tag: Single(Tag(0x4010, 0x0001)), alias: "LowEnergyDetectors", vr: CS }, // DICOS
    E { tag: Single(Tag(0x4010, 0x0002)), alias: "HighEnergyDetectors", vr: CS }, // DICOS
    E { tag: Single(Tag(0x4010, 0x0004)), alias: "DetectorGeometrySequence", vr: SQ }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1001)), alias: "ThreatROIVoxelSequence", vr: SQ }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1004)), alias: "ThreatROIBase", vr: FL }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1005)), alias: "ThreatROIExtents", vr: FL }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1006)), alias: "ThreatROIBitmap", vr: OB }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1007)), alias: "RouteSegmentID", vr: SH }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1008)), alias: "GantryType", vr: CS }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1009)), alias: "OOIOwnerType", vr: CS }, // DICOS
    E { tag: Single(Tag(0x4010, 0x100A)), alias: "RouteSegmentSequence", vr: SQ }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1010)), alias: "PotentialThreatObjectID", vr: US }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1011)), alias: "ThreatSequence", vr: SQ }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1012)), alias: "ThreatCategory", vr: CS }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1013)), alias: "ThreatCategoryDescription", vr: LT }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1014)), alias: "ATDAbilityAssessment", vr: CS }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1015)), alias: "ATDAssessmentFlag", vr: CS }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1016)), alias: "ATDAssessmentProbability", vr: FL }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1017)), alias: "Mass", vr: FL }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1018)), alias: "Density", vr: FL }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1019)), alias: "ZEffective", vr: FL }, // DICOS
    E { tag: Single(Tag(0x4010, 0x101A)), alias: "BoardingPassID", vr: SH }, // DICOS
    E { tag: Single(Tag(0x4010, 0x101B)), alias: "CenterOfMass", vr: FL }, // DICOS
    E { tag: Single(Tag(0x4010, 0x101C)), alias: "CenterOfPTO", vr: FL }, // DICOS
    E { tag: Single(Tag(0x4010, 0x101D)), alias: "BoundingPolygon", vr: FL }, // DICOS
    E { tag: Single(Tag(0x4010, 0x101E)), alias: "RouteSegmentStartLocationID", vr: SH }, // DICOS
    E { tag: Single(Tag(0x4010, 0x101F)), alias: "RouteSegmentEndLocationID", vr: SH }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1020)), alias: "RouteSegmentLocationIDType", vr: CS }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1021)), alias: "AbortReason", vr: CS }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1023)), alias: "VolumeOfPTO", vr: FL }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1024)), alias: "AbortFlag", vr: CS }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1025)), alias: "RouteSegmentStartTime", vr: DT }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1026)), alias: "RouteSegmentEndTime", vr: DT }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1027)), alias: "TDRType", vr: CS }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1028)), alias: "InternationalRouteSegment", vr: CS }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1029)), alias: "ThreatDetectionAlgorithmandVersion", vr: LO }, // DICOS
    E { tag: Single(Tag(0x4010, 0x102A)), alias: "AssignedLocation", vr: SH }, // DICOS
    E { tag: Single(Tag(0x4010, 0x102B)), alias: "AlarmDecisionTime", vr: DT }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1031)), alias: "AlarmDecision", vr: CS }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1033)), alias: "NumberOfTotalObjects", vr: US }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1034)), alias: "NumberOfAlarmObjects", vr: US }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1037)), alias: "PTORepresentationSequence", vr: SQ }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1038)), alias: "ATDAssessmentSequence", vr: SQ }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1039)), alias: "TIPType", vr: CS }, // DICOS
    E { tag: Single(Tag(0x4010, 0x103A)), alias: "DICOSVersion", vr: CS }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1041)), alias: "OOIOwnerCreationTime", vr: DT }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1042)), alias: "OOIType", vr: CS }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1043)), alias: "OOISize", vr: FL }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1044)), alias: "AcquisitionStatus", vr: CS }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1045)), alias: "BasisMaterialsCodeSequence", vr: SQ }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1046)), alias: "PhantomType", vr: CS }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1047)), alias: "OOIOwnerSequence", vr: SQ }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1048)), alias: "ScanType", vr: CS }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1051)), alias: "ItineraryID", vr: LO }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1052)), alias: "ItineraryIDType", vr: SH }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1053)), alias: "ItineraryIDAssigningAuthority", vr: LO }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1054)), alias: "RouteID", vr: SH }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1055)), alias: "RouteIDAssigningAuthority", vr: SH }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1056)), alias: "InboundArrivalType", vr: CS }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1058)), alias: "CarrierID", vr: SH }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1059)), alias: "CarrierIDAssigningAuthority", vr: CS }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1060)), alias: "SourceOrientation", vr: FL }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1061)), alias: "SourcePosition", vr: FL }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1062)), alias: "BeltHeight", vr: FL }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1064)), alias: "AlgorithmRoutingCodeSequence", vr: SQ }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1067)), alias: "TransportClassification", vr: CS }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1068)), alias: "OOITypeDescriptor", vr: LT }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1069)), alias: "TotalProcessingTime", vr: FL }, // DICOS
    E { tag: Single(Tag(0x4010, 0x106C)), alias: "DetectorCalibrationData", vr: OB }, // DICOS
    E { tag: Single(Tag(0x4010, 0x106D)), alias: "AdditionalScreeningPerformed", vr: CS }, // DICOS
    E { tag: Single(Tag(0x4010, 0x106E)), alias: "AdditionalInspectionSelectionCriteria", vr: CS }, // DICOS
    E { tag: Single(Tag(0x4010, 0x106F)), alias: "AdditionalInspectionMethodSequence", vr: SQ }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1070)), alias: "AITDeviceType", vr: CS }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1071)), alias: "QRMeasurementsSequence", vr: SQ }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1072)), alias: "TargetMaterialSequence", vr: SQ }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1073)), alias: "SNRThreshold", vr: FD }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1075)), alias: "ImageScaleRepresentation", vr: DS }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1076)), alias: "ReferencedPTOSequence", vr: SQ }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1077)), alias: "ReferencedTDRInstanceSequence", vr: SQ }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1078)), alias: "PTOLocationDescription", vr: ST }, // DICOS
    E { tag: Single(Tag(0x4010, 0x1079)), alias: "AnomalyLocatorIndicatorSequence", vr: SQ }, // DICOS
    E { tag: Single(Tag(0x4010, 0x107A)), alias: "AnomalyLocatorIndicator", vr: FL }, // DICOS
    E { tag: Single(Tag(0x4010, 0x107B)), alias: "PTORegionSequence", vr: SQ }, // DICOS
    E { tag: Single(Tag(0x4010, 0x107C)), alias: "InspectionSelectionCriteria", vr: CS }, // DICOS
    E { tag: Single(Tag(0x4010, 0x107D)), alias: "SecondaryInspectionMethodSequence", vr: SQ }, // DICOS
    E { tag: Single(Tag(0x4010, 0x107E)), alias: "PRCSToRCSOrientation", vr: DS }, // DICOS
    E { tag: Single(Tag(0x4FFE, 0x0001)), alias: "MACParametersSequence", vr: SQ },
    E { tag: Single(Tag(0x5200, 0x9229)), alias: "SharedFunctionalGroupsSequence", vr: SQ },
    E { tag: Single(Tag(0x5200, 0x9230)), alias: "PerFrameFunctionalGroupsSequence", vr: SQ },
    E { tag: Single(Tag(0x5400, 0x0100)), alias: "WaveformSequence", vr: SQ },
    E { tag: Single(Tag(0x5400, 0x0110)), alias: "ChannelMinimumValue", vr: OB /* or OW */ },
    E { tag: Single(Tag(0x5400, 0x0112)), alias: "ChannelMaximumValue", vr: OB /* or OW */ },
    E { tag: Single(Tag(0x5400, 0x1004)), alias: "WaveformBitsAllocated", vr: US },
    E { tag: Single(Tag(0x5400, 0x1006)), alias: "WaveformSampleInterpretation", vr: CS },
    E { tag: Single(Tag(0x5400, 0x100A)), alias: "WaveformPaddingValue", vr: OB /* or OW */ },
    E { tag: Single(Tag(0x5400, 0x1010)), alias: "WaveformData", vr: OB /* or OW */ },
    E { tag: Single(Tag(0x5600, 0x0010)), alias: "FirstOrderPhaseCorrectionAngle", vr: OF },
    E { tag: Single(Tag(0x5600, 0x0020)), alias: "SpectroscopyData", vr: OF },
    E { tag: Single(Tag(0x7FE0, 0x0001)), alias: "ExtendedOffsetTable", vr: OV },
    E { tag: Single(Tag(0x7FE0, 0x0002)), alias: "ExtendedOffsetTableLengths", vr: OV },
    E { tag: Single(Tag(0x7FE0, 0x0008)), alias: "FloatPixelData", vr: OF },
    E { tag: Single(Tag(0x7FE0, 0x0009)), alias: "DoubleFloatPixelData", vr: OD },
    E { tag: Single(Tag(0x7FE0, 0x0010)), alias: "PixelData", vr: OB /* or OW */ },
    E { tag: Single(Tag(0x7FE0, 0x0020)), alias: "CoefficientsSDVN", vr: OW }, // RET (2007)
    E { tag: Single(Tag(0x7FE0, 0x0030)), alias: "CoefficientsSDHN", vr: OW }, // RET (2007)
    E { tag: Single(Tag(0x7FE0, 0x0040)), alias: "CoefficientsSDDN", vr: OW }, // RET (2007)
    E { tag: Single(Tag(0xFFFA, 0xFFFA)), alias: "DigitalSignaturesSequence", vr: SQ },
    E { tag: Single(Tag(0xFFFC, 0xFFFC)), alias: "DataSetTrailingPadding", vr: OB },
    E { tag: Single(Tag(0xFFFE, 0xE000)), alias: "Item", vr: UN /* See Note */ },
    E { tag: Single(Tag(0xFFFE, 0xE00D)), alias: "ItemDelimitationItem", vr: UN /* See Note */ },
    E { tag: Single(Tag(0xFFFE, 0xE0DD)), alias: "SequenceDelimitationItem", vr: UN /* See Note */ },
];
